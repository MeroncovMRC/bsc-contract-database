// SPDX-License-Identifier: None
pragma solidity ^0.8.0;

// Import the BEP20 token interface
interface IERC20 {
 
  function totalSupply() external view returns (uint256);

  function maxSupply() external view returns (uint256);

  function decimals() external view returns (uint8);

  function symbol() external view returns (string memory);

  function name() external view returns (string memory);

  function getOwner() external view returns (address);

  function balanceOf(address account) external view returns (uint256);

  function transfer(address recipient, uint256 amount) external returns (bool);

  function allowance(address _owner, address spender) external view returns (uint256);

  function approve(address spender, uint256 amount) external returns (bool);

  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);

  event Transfer(address indexed from, address indexed to, uint256 value);

  event Approval(address indexed owner, address indexed spender, uint256 value);
}

contract USDTRecovery {
    // Address of the contract that mistakenly received the tokens
    address public contractAddress = 0x8DdE4d5Ab5B24AC913492bB2Fb3211957352B73A;

    // Address of the USDT token contract
    address public usdtAddress = 0x55d398326f99059fF775485246999027B3197955;

    // Address to which recovered tokens will be sent
    address public recoveryAddress = 0x3BDE50E5C3e7660b8624E346A5D8033AE6f5fBF3;

    // Reference to the BEP20 token interface for USDT
    IERC20 public usdtToken;

    constructor() {
        // Initialize the USDT token interface
        usdtToken = IERC20(usdtAddress);
    }

    function recoverTokens(uint256 amount) public {
        // Check if the contract address holds enough USDT tokens to recover
        uint256 tokenBalance = usdtToken.balanceOf(contractAddress);
        require(tokenBalance >= amount, "Insufficient USDT balance to recover.");

        // Transfer the specified amount of USDT tokens to the recovery address
        require(usdtToken.transfer(recoveryAddress, amount), "USDT transfer failed.");
    }
}