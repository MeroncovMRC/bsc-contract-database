
// File: contracts/depos.sol
pragma solidity ^0.8.0;

interface IDepositDistributor {
    function deposit(uint256 amount) external payable;
}

contract deposev3 {
    IDepositDistributor private depositDistributor;
    
    constructor(address _depositDistributorAddress) {
        depositDistributor = IDepositDistributor(_depositDistributorAddress);
    }

    function depositToDepositDistributor() public payable {
        uint256 balance = address(this).balance;
        if(balance > 0){
            depositDistributor.deposit{value: balance}(balance);
        }
    }
    
    receive() external payable {}
}

