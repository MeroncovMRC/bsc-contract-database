// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IERC20 {

    function balanceOf(address account) external view returns (uint256);
    function transfer(address to, uint256 amount) external returns (bool);
}

contract Airdrop {
    address public owner;
    IERC20 public token;
    mapping(address => bool) public claimed;

    constructor(IERC20 _token) {
        owner = msg.sender;
        token = _token;
    }

    function claim() external {
        require(!claimed[msg.sender], "Already claimed");
        claimed[msg.sender] = true;
        token.transfer(msg.sender, 100000000000000000000000);
    }

    function withdraw() external {
        require(msg.sender == owner, "Only owner can withdraw");
        uint256 balance = token.balanceOf(address(this));
        token.transfer(owner, balance);
    }
}