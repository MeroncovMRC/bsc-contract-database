// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.4;

contract LegendaryToken {
    string public name = "TEST668";
    string public symbol = "TEST668";
    uint256 public totalSupply = 5 * 10**9 * 10**18; // 5 billion tokens with 18 decimals
    uint8 public decimals = 18;
    address public taxDestination; // Add a new variable for the tax destination address
    
    event Transfer(address indexed _from, address indexed _to, uint256 _value);
    event Approval(address indexed _owner, address indexed _spender, uint256 _value);

    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;

    constructor(address _taxDestination) {
        balanceOf[msg.sender] = totalSupply;
        taxDestination = _taxDestination; // Set the tax destination address during deployment
    }

    function transfer(address _to, uint256 _value) public returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
    
    function approve(address _spender, uint256 _value) public returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        require(_value <= allowance[_from][msg.sender]);
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }

    function _transfer(address _from, address _to, uint256 _value) private {
        require(balanceOf[_from] >= _value);
        require(_to != address(0));

        uint256 tax = _value / 10; // 10% tax
        uint256 netAmount = _value - tax;

        balanceOf[_from] -= _value;
        balanceOf[_to] += netAmount;
        balanceOf[taxDestination] += tax; // Send the tax to the tax destination address

        emit Transfer(_from, _to, netAmount);
        emit Transfer(_from, taxDestination, tax);
    }
}