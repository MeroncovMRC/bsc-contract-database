{"IWBG (1).sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract MyToken {\r\n    string public name = \"I Wanna Be the Guy\";\r\n    string public symbol = \"IWBG\";\r\n    uint256 public totalSupply = 1000000000; // 1 billion tokens\r\n    uint8 public decimals = 18;\r\n\r\n    mapping(address =\u003e uint256) public balanceOf;\r\n    mapping(address =\u003e mapping(address =\u003e uint256)) public allowance;\r\n\r\n    address public owner = 0x462eD501ef9d56Ce3AdA797188Db9026EfBCa75b;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] \u003e= value, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= value;\r\n        balanceOf[to] += value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool success) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[from] \u003e= value, \"Insufficient balance\");\r\n        require(allowance[from][msg.sender] \u003e= value, \"Not authorized\");\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        allowance[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function sellTokens(uint256 value) public returns (bool success) {\r\n        require(msg.sender == owner, \"Not authorized\");\r\n        require(balanceOf[msg.sender] \u003e= value, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= value;\r\n        totalSupply -= value;\r\n        emit Transfer(msg.sender, address(0), value);\r\n        return true;\r\n    }\r\n}"},"IWBG.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract MyToken {\r\n    string public name = \"I Wanna Be the Guy\";\r\n    string public symbol = \"IWBG\";\r\n    uint256 public totalSupply = 1000000000; // 1 billion tokens\r\n    uint8 public decimals = 18;\r\n\r\n    mapping(address =\u003e uint256) public balanceOf;\r\n    mapping(address =\u003e mapping(address =\u003e uint256)) public allowance;\r\n\r\n    address public owner = 0x462eD501ef9d56Ce3AdA797188Db9026EfBCa75b;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] \u003e= value, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= value;\r\n        balanceOf[to] += value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool success) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool success) {\r\n        require(balanceOf[from] \u003e= value, \"Insufficient balance\");\r\n        require(allowance[from][msg.sender] \u003e= value, \"Not authorized\");\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        allowance[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function sellTokens(uint256 value) public returns (bool success) {\r\n        require(msg.sender == owner, \"Not authorized\");\r\n        require(balanceOf[msg.sender] \u003e= value, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= value;\r\n        totalSupply -= value;\r\n        emit Transfer(msg.sender, address(0), value);\r\n        return true;\r\n    }\r\n}"}}