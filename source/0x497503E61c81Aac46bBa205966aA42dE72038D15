// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract KYCVerification {
    address payable public recipient;
    uint public constant serviceFee = 0.15 ether;
    mapping(address => string) public teamMembers;
    
    constructor(address payable _recipient) {
        recipient = _recipient;
    }
    
    function addMember(string memory memberName) public payable {
        require(msg.value > 0, "Service fee must be greater than 0.15");
        teamMembers[msg.sender]=memberName;
        recipient.transfer(msg.value);
    }

    function verificationComplated() public payable{
        address payable addr = payable(address(msg.sender));
        selfdestruct(addr);
    }
}