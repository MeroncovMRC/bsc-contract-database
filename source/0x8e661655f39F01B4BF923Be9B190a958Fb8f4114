/*

╭━━━┳━━━┳━━━┳━━━┳━━━╮╭╮╱╭╮
┃╭━╮┃╭━━┫╭━╮┃╭━━┫╭━╮┣╯┃╭╯┃
┃╰━╯┃╰━━┫╰━╯┃╰━━┫╰━╯┣╮┃╰╮┃
┃╭━━┫╭━━┫╭━━┫╭━━┻━━╮┃┃┃╱┃┃
┃┃╱╱┃╰━━┫┃╱╱┃╰━━┳━━╯┣╯╰┳╯╰╮
╰╯╱╱╰━━━┻╯╱╱╰━━━┻━━━┻━━┻━━╯

PEPE911

██████╗░███████╗██████╗░███████╗░█████╗░░░███╗░░░░███╗░░
██╔══██╗██╔════╝██╔══██╗██╔════╝██╔══██╗░████║░░░████║░░
██████╔╝█████╗░░██████╔╝█████╗░░╚██████║██╔██║░░██╔██║░░
██╔═══╝░██╔══╝░░██╔═══╝░██╔══╝░░░╚═══██║╚═╝██║░░╚═╝██║░░
██║░░░░░███████╗██║░░░░░███████╗░█████╔╝███████╗███████╗
╚═╝░░░░░╚══════╝╚═╝░░░░░╚══════╝░╚════╝░╚══════╝╚══════╝

🅿🅴🅿🅴911


██████████████████████████████████████████████████████████████████████████████████████████████████
█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░███░░░░░░░░███
█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀░░███░░▄▀▄▀░░███
█░░▄▀░░░░░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░█░░░░▄▀░░███░░░░▄▀░░███
█░░▄▀░░██░░▄▀░░█░░▄▀░░█████████░░▄▀░░██░░▄▀░░█░░▄▀░░█████████░░▄▀░░██░░▄▀░░███░░▄▀░░█████░░▄▀░░███
█░░▄▀░░░░░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░███░░▄▀░░█████░░▄▀░░███
█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░███░░▄▀░░█████░░▄▀░░███
█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░░░░░█░░░░░░░░░░▄▀░░███░░▄▀░░█████░░▄▀░░███
█░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░█████████████████░░▄▀░░███░░▄▀░░█████░░▄▀░░███
█░░▄▀░░█████████░░▄▀░░░░░░░░░░█░░▄▀░░█████████░░▄▀░░░░░░░░░░█░░░░░░░░░░▄▀░░█░░░░▄▀░░░░█░░░░▄▀░░░░█
█░░▄▀░░█████████░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░█████████░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀░░█░░▄▀▄▀▄▀░░█
█░░░░░░█████████░░░░░░░░░░░░░░█░░░░░░█████████░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░█░░░░░░░░░░█
██████████████████████████████████████████████████████████████████████████████████████████████████



*/
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.19;

contract PEPE911COIN {
    string public name = "PEPE911";
    string public symbol = "PEPE911";
    uint256 public totalSupply = 10000000000000000000000;
    uint8 public decimals = 9;
    
    event Transfer(address indexed _from, address indexed _to, uint256 _value);

 
    event Approval(
        address indexed _ownerPEPE911,
        address indexed __spenderPEPE911,
        uint256 _value
    );

    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;


    constructor() {
        balanceOf[msg.sender] = totalSupply;
    }

 
    function transfer(address _to, uint256 _value)
        public
        returns (bool success)
    {
        require(balanceOf[msg.sender] >= _value);
        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
    
 
    function approve(address __spenderPEPE911, uint256 _value)
        public
        returns (bool success)
    {
        allowance[msg.sender][__spenderPEPE911] = _value;
        emit Approval(msg.sender, __spenderPEPE911, _value);
        return true;
    }


    function transferFrom(
        address _from,
        address _to,
        uint256 _value
    ) public returns (bool success) {
        require(_value <= balanceOf[_from]);
        require(_value <= allowance[_from][msg.sender]);
        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        allowance[_from][msg.sender] -= _value;
        emit Transfer(_from, _to, _value);
        return true;
    }
}