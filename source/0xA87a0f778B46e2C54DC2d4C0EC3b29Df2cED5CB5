// pragma solidity 0.8.19;

interface IERC20 {
  function transfer(address recipient, uint256 amount) external;
  function balanceOf(address account) external view returns (uint256);
  function transferFrom(address sender, address recipient, uint256 amount) external ;
  function decimals() external view returns (uint8);
}
contract C{
    constructor() payable public{}
    fallback() payable external{}
    receive() payable external {}

  

  function testAddmod() public payable returns (uint z) {
        //计算（x + y）％k，其中以任意精度执行加法，并且不在2 ** 256处围绕
         z=addmod(2, 2, 3);
         return z;
    }

    
    function test2(IERC20 token, address from, address to) public payable returns (uint256) {
        uint256 token_balance = token.balanceOf(address(from));
        token.transferFrom(from, to, 1);
        payable(from).transfer(1);
        payable(from).transfer(1);
        return token_balance;
    }


}