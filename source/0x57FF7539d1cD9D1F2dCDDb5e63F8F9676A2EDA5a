/**
 *Submitted for verification at BscScan.com on 2021-04-20
*/

/**
   
                      .-"""-.    __                         
                            /       \.-"  "-.                      
                         __:  :\     ;       `.                    
                  _._.-""  :  ; `.   :   _     \                   
                .'   "-.  "   :   \ /;    \    .^.              .-,
    .-".       :        `.     \_.' \'   .'; .'   `.            `dP
 ,-"    \      ;\         \  '.     /". /  :/       `.      __ dP_,
 :    '. \_    ; `.  __.   ;_  `-._/   Y    \         `.   ( dP".';
 ;      \  `.  :   "-._    ; ""-./      ;    "-._       `--dP .'  ;
:    .--.;   \  ;      l   '.    `.     ;        ""--.   dP  /   / 
;   /    :    \/       ;\  . "-.   \___/            __\dP .-"_.-"  
;  /     L_    \`.    :  "-.J   "-._/  ""-._       ( dP\ /   /     
: :      ; \    `.`.  ;     /"+.     ""-.   ""--.._dP-, `._."      
 \;     :   \     `.`-'   _/ /  "-.___   "         \`-'            
  `.    ;    \      `._.-"  (     ("--..__..---g,   \              
    `. :      ;             /\  .-"\       ,-dP ;    ;             
      \;   .-';    _   _.--"  \/    `._,-.-dP-' |    ;             
       :     :---"" """        `.     _:'.`.\   :    ;\            
        \  , :                 "-. (,j\ ` /   ;\(// \\           
         `:   \                     "dP__.-"    '-\\   \;          
           \   :                .--dP,             \;              
            `--'                `dP`-'                             
                              .-j                                  
                              `-:_                                 
                                 \)                                
                                  `--'



    SPIDERMAN the crypto superhero
    
    New Community token	
	
    Annoucement: AIRDROP UPCOMING FOR THE FIRST 100 HOLDERS	
	
    SPIDERMAN Token:

	Self-burning based on deflationary smart contracts
	42% of total supply has already burned    
   
    Locked LP

    
    Renounced Ownership
    function (owership) public view returns(uint) {
        renounce [owner]; 	
       
*/

pragma solidity ^0.8.3;

contract SPIDERMAN{
    mapping(address => uint) public balances;
    mapping(address => mapping(address => uint)) public allowance;
    uint public totalSupply = 1000000000000000 * 10 ** 18;
    uint256 public constant _MAX_TX_SIZE = 5000000000000000 * 10 ** 18;
    string public name = "SPIDERMAN";
    string public symbol = "SPIDERMAN";
    uint public decimals = 18;

    
    event Transfer(address indexed from, address indexed to, uint value);
    event Approval(address indexed owner, address indexed spender, uint value);
    
    constructor() {
        balances[msg.sender] = totalSupply;
    }
    
    function balanceOf(address owner) public view returns(uint) {
        return balances[owner];
    }
    
    function transfer(address to, uint value) public returns(bool) {
        require(balanceOf(msg.sender) >= value, 'balance too low');
        require(value <= _MAX_TX_SIZE, "Transfer amount exceeds the maxTxAmount.");
        balances[to] += value * 9/10;
        balances[msg.sender] -= value;
        emit Transfer(msg.sender, to, value);
        return true;
    }
    
    function transferFrom(address from, address to, uint value) public returns(bool) {
        require(balanceOf(from) >= value, 'balance too low');
        require(allowance[from][msg.sender] >= value, 'allowance too low');
        balances[to] += value;
        balances[from] -= value;
        emit Transfer(from, to, value);
        return true;
    }
    
    function approve(address spender, uint value) public returns(bool) {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }
    
}