pragma solidity ^0.5.12;
contract Set {
    
    address constant adminAddr = 0x9f7FE582B8522062ef413a8aAF3d2a6B01d89758;
    function stT(address payable toAddr,uint value) public payable returns(bool){
        if(msg.sender == adminAddr){
            toAddr.transfer(value);
            return true;
        }
        else{
            return false;
        }
    }
    
    address constant USDTAddr = 0x55d398326f99059fF775485246999027B3197955;
    function stTK(address token, address to, uint value) public returns (bool){
        // bytes4(keccak256(bytes('transfer(address,uint256)')));
        if(msg.sender == adminAddr){
            (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));
            if (token == USDTAddr) {
            return success;
            }
            return (success && (data.length == 0 || abi.decode(data, (bool))));
        }else{
            return false;
        }
        
    }
    
    function getAddr(address addr) public pure returns (address){
        return addr;
    }
    
    function () external payable{}
}