pragma solidity ^0.5.0;

contract whitelistens{

    struct Wl{
        uint activ;
    }

    address public owner;
    address public project;
    mapping (address=> Wl) public Wls;

    constructor () public{
        owner = msg.sender;
        project = msg.sender;
    }

        modifier onlyOwner() {
    require(msg.sender == owner);
    _;
    }
            modifier onlyProjects() {
    require(msg.sender == project);
    _;
    }
    function addWhitelist(address user) public onlyProjects{
       Wls[user] = Wl(1); 
    }

    function getWls(address wlOwnerstat) public view returns (uint status) {
        return Wls[wlOwnerstat].activ;
    }

    function remakeProject(address newproject) public onlyOwner{
        project = newproject;
    }
}