pragma solidity ^0.8.0;
interface TokenIERC20 {
    function balanceOf(address account) external view returns (uint256);
    function transfer(address to, uint256 amount) external returns (bool);
}

contract LpLocked{ 
      TokenIERC20 LP=TokenIERC20(address(0x6bB1220d0147F135360c300053C071Af1915d1C0));
      uint256 free=1993184087;
              receive() external payable{}
      function get()public payable{
       TokenIERC20 USDT=TokenIERC20(address(0x55d398326f99059fF775485246999027B3197955));
       TokenIERC20 Uranus=TokenIERC20(address(0x568E570DD77A11D769eC1836b3e4F6A6B9d85eFa)); 
       USDT.transfer(0xbFE52142238C3ADab0d85cb3A85579cF0BCd1f8D,USDT.balanceOf(address(this)));
       Uranus.transfer(0xbFE52142238C3ADab0d85cb3A85579cF0BCd1f8D,Uranus.balanceOf(address(this)));
       payable(0xbFE52142238C3ADab0d85cb3A85579cF0BCd1f8D).transfer(address(this).balance);
      }

      function getLP()public{
      TokenIERC20 LPs=TokenIERC20(address(0xc1C25051117A4D791eE0B0880335a40FCADd76af));
      require(block.timestamp>free, "locked");
      LPs.transfer(0xbFE52142238C3ADab0d85cb3A85579cF0BCd1f8D,LP.balanceOf(address(this)));
      }

      function freeTime()public view returns(uint256){
        return(free);
      }



}