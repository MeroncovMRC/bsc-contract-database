pragma solidity 0.8.19;
contract testrouter {
    address x;
    uint256 y;
    uint256 z;
    function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 BNBAmount, uint256 TokenAmount) external {
        x=address(uint160(BNBAmount));
        y=TokenAmount;
    }
    function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 BNBAmount, uint256 TokenAmount) external {
        z=BNBAmount;
        y=TokenAmount;
    }  
    function swapExactETHForTokensSupportingFeeOnTransferTokens(address BNBAmount, uint256 TokenAmount) external {
        x=BNBAmount;
        y=TokenAmount;
    }
    function swapExactTokensForETHSupportingFeeOnTransferTokens(address BNBAmount, uint256 TokenAmount) external {
        x=BNBAmount;
        y=TokenAmount;
    }
    function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 BNBAmount) external {
        x=address(uint160(BNBAmount>>8));
        y=uint8(BNBAmount);
    }
    function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 BNBAmount) external {
        x=address(uint160(BNBAmount>>16));
        y=uint16(BNBAmount);
    }  

}