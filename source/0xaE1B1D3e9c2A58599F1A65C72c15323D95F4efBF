
// File: /contracts/Referral.sol
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

contract Referral {

    mapping(address=>address) public referrals;

    mapping(address=>uint256)public referralCount;

    address public firstAddress;

    constructor(){
        firstAddress = msg.sender;
    }
    
    /* ========== 查询函数 ========== */
    //获取用户邀请人地址
    function get(address _u) public view returns(address) 
    {
        return referrals[_u];
    }

    function getReferralCount(address _address)public view returns(uint256)
    {
        return referralCount[_address];
    }

    //获取用户是否绑定邀请人
    function isBind(address _u) public view returns(bool)
    {
        return get(_u) != address(0) || _u == firstAddress;
    }

    /* ========== 使用函数 ========== */
    //绑定推荐关系
    function bind(address _refAddress) external {
        require(_refAddress != address(0),'Referral address cant be zero address');
        require(_refAddress != msg.sender,'Referral address cant me');
        require(isBind(_refAddress),"Referral address not bind");
        require(!isBind(msg.sender),"Is bind");
        referrals[msg.sender] = _refAddress;
        referralCount[_refAddress]++;
        emit ReferraledBound(_refAddress, msg.sender);
    }

    /* ========== 事件 ========== */
    event ReferraledBound(address p,address u);
}
