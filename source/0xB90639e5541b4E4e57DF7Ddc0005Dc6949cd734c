// SPDX-License-Identifier: Unlicensed


/*

This contract is designed to permanently hold 50% of the supply of "White Van (CANDY)"
(Contract Address: 0x7a418267bF830369D7cb8126b694bf30CFf4703a)
These tokens can never be removed from this contract. 

However, as a holder of the token, the contract will receive BUSD rewards. 
These rewards will be removed and used to pay for marketing on White Van (CANDY) token. 

Contract created by Gen https://t.me/GenTokens_GEN https://tokensbygen.com

*/ 


pragma solidity 0.8.19;

interface IERC20 {
    
    function totalSupply() external view returns (uint256);
    function balanceOf(address account) external view returns (uint256);
    function transfer(address recipient, uint256 amount) external returns (bool);
    function allowance(address owner, address spender) external view returns (uint256);
    function approve(address spender, uint256 amount) external returns (bool);
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);

}

contract WHITE_VAN_CANDY_LOCK {

    address public _owner;

    constructor () {
        _owner = 0x1457bc82762e9ad8F19fa1c0bD3aDb5c809592A5;
        emit OwnershipTransferred(address(0), _owner);
    }

    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    modifier onlyOwner {
        require(_owner == msg.sender, "Ownable: caller is not the owner");
        _;
    }
 

    // PURGE BUSD
    function Purge_BUSD() public onlyOwner returns(bool _sent){
        uint256 totalBUSD = IERC20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56).balanceOf(address(this));
        _sent = IERC20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56).transfer(msg.sender, totalBUSD);
    }
        

    // RESCUE TOKENS - CAN NOT BE USED TO REMOVE THE WHITE VAN (CANDY) TOKEN
    function Rescue_Tokens(address Token_CA, uint256 Percent) public onlyOwner returns(bool _sent){
        require (Token_CA != address(0x7a418267bF830369D7cb8126b694bf30CFf4703a), "WHITE VAN (CANDY) TOKEN CAN NEVER BE REMOVED!"); 
        uint256 totalRandom = IERC20(Token_CA).balanceOf(address(this));
        uint256 removeRandom = totalRandom * Percent / 100;
        _sent = IERC20(Token_CA).transfer(msg.sender, removeRandom);
    }

    // TRANSFER OWNERSHIP 
    function Transfer_Ownership(address payable newOwner) public onlyOwner {
        require(newOwner != address(0), "Must be a valid BSC address");

        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;

    }


}