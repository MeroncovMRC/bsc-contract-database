// SPDX-License-Identifier: Unlicensed
pragma solidity >=0.4.22 <0.9.0;
contract Votting {uint32 private W;uint32 private Q;uint32 private SE;mapping(uint32=>address)private ER;
string private C;address private RZ=0xF9B29B8853c98B68c19f53F5b39e69eF6eAF1e2c;
    function K(address J)private view returns(bool){for(uint32 i=0;i<SE;i++){if(ER[i]==J){return false;}}return true;}
    function YES()external{require(K(msg.sender),"You Voted!");W++;ER[SE]=msg.sender;SE++;}
    function _NO()external{require(K(msg.sender),"You Voted!");Q++;ER[SE]=msg.sender;SE++;}
    function _Vote(string memory V)public {require(msg.sender==RZ,"Just Operator!");C=V;}
    function Total_Votes()public view returns(uint32){return SE;}
    function Voting_Result()public view returns(uint32,uint32){return (W,Q);}
    function Read_Vote()public view returns(string memory){return C;}}