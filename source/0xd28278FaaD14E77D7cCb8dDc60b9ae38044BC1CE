pragma solidity 0.8.15;
// SPDX-License-Identifier: UNLICENSED

// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)

/**
 * @dev Contract module that helps prevent reentrant calls to a function.
 *
 * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier
 * available, which can be applied to functions to make sure there are no nested
 * (reentrant) calls to them.
 *
 * Note that because there is a single `nonReentrant` guard, functions marked as
 * `nonReentrant` may not call one another. This can be worked around by making
 * those functions `private`, and then adding `external` `nonReentrant` entry
 * points to them.
 *
 * TIP: If you would like to learn more about reentrancy and alternative ways
 * to protect against it, check out our blog post
 * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].
 */
abstract contract ReentrancyGuard {
    // Booleans are more expensive than uint256 or any type that takes up a full
    // word because each write operation emits an extra SLOAD to first read the
    // slot's contents, replace the bits taken up by the boolean, and then write
    // back. This is the compiler's defense against contract upgrades and
    // pointer aliasing, and it cannot be disabled.

    // The values being non-zero value makes deployment a bit more expensive,
    // but in exchange the refund on every call to nonReentrant will be lower in
    // amount. Since refunds are capped to a percentage of the total
    // transaction's gas, it is best to keep them low in cases like this one, to
    // increase the likelihood of the full refund coming into effect.
    uint256 private constant _NOT_ENTERED = 1;
    uint256 private constant _ENTERED = 2;

    uint256 private _status;

    constructor() {
        _status = _NOT_ENTERED;
    }

    /**
     * @dev Prevents a contract from calling itself, directly or indirectly.
     * Calling a `nonReentrant` function from another `nonReentrant`
     * function is not supported. It is possible to prevent this from happening
     * by making the `nonReentrant` function external, and making it call a
     * `private` function that does the actual work.
     */
    modifier nonReentrant() {
        _nonReentrantBefore();
        _;
        _nonReentrantAfter();
    }

    function _nonReentrantBefore() private {
        // On the first call to nonReentrant, _status will be _NOT_ENTERED
        require(_status != _ENTERED, "ReentrancyGuard: reentrant call");

        // Any calls to nonReentrant after this point will fail
        _status = _ENTERED;
    }

    function _nonReentrantAfter() private {
        // By storing the original value once again, a refund is triggered (see
        // https://eips.ethereum.org/EIPS/eip-2200)
        _status = _NOT_ENTERED;
    }

    /**
     * @dev Returns true if the reentrancy guard is currently set to "entered", which indicates there is a
     * `nonReentrant` function in the call stack.
     */
    function _reentrancyGuardEntered() internal view returns (bool) {
        return _status == _ENTERED;
    }
}

// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)

/**
 * @dev Interface of the ERC20 standard as defined in the EIP.
 */
interface IERC20 {
    /**
     * @dev Emitted when `value` tokens are moved from one account (`from`) to
     * another (`to`).
     *
     * Note that `value` may be zero.
     */
    event Transfer(address indexed from, address indexed to, uint256 value);

    /**
     * @dev Emitted when the allowance of a `spender` for an `owner` is set by
     * a call to {approve}. `value` is the new allowance.
     */
    event Approval(address indexed owner, address indexed spender, uint256 value);

    /**
     * @dev Returns the amount of tokens in existence.
     */
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);

    /**
     * @dev Moves `amount` tokens from the caller's account to `to`.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * Emits a {Transfer} event.
     */
    function transfer(address to, uint256 amount) external returns (bool);

    /**
     * @dev Returns the remaining number of tokens that `spender` will be
     * allowed to spend on behalf of `owner` through {transferFrom}. This is
     * zero by default.
     *
     * This value changes when {approve} or {transferFrom} are called.
     */
    function allowance(address owner, address spender) external view returns (uint256);

    /**
     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * IMPORTANT: Beware that changing an allowance with this method brings the risk
     * that someone may use both the old and the new allowance by unfortunate
     * transaction ordering. One possible solution to mitigate this race
     * condition is to first reduce the spender's allowance to 0 and set the
     * desired value afterwards:
     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
     *
     * Emits an {Approval} event.
     */
    function approve(address spender, uint256 amount) external returns (bool);

    /**
     * @dev Moves `amount` tokens from `from` to `to` using the
     * allowance mechanism. `amount` is then deducted from the caller's
     * allowance.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * Emits a {Transfer} event.
     */
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) external returns (bool);
}

// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)

// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)

/**
 * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in
 * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].
 *
 * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by
 * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't
 * need to send a transaction, and thus is not required to hold Ether at all.
 */
interface IERC20Permit {
    /**
     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,
     * given ``owner``'s signed approval.
     *
     * IMPORTANT: The same issues {IERC20-approve} has related to transaction
     * ordering also apply here.
     *
     * Emits an {Approval} event.
     *
     * Requirements:
     *
     * - `spender` cannot be the zero address.
     * - `deadline` must be a timestamp in the future.
     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`
     * over the EIP712-formatted function arguments.
     * - the signature must use ``owner``'s current nonce (see {nonces}).
     *
     * For more information on the signature format, see the
     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP
     * section].
     */
    function permit(
        address owner,
        address spender,
        uint256 value,
        uint256 deadline,
        uint8 v,
        bytes32 r,
        bytes32 s
    ) external;

    /**
     * @dev Returns the current nonce for `owner`. This value must be
     * included whenever a signature is generated for {permit}.
     *
     * Every successful call to {permit} increases ``owner``'s nonce by one. This
     * prevents a signature from being used multiple times.
     */
    function nonces(address owner) external view returns (uint256);

    /**
     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.
     */
    // solhint-disable-next-line func-name-mixedcase
    function DOMAIN_SEPARATOR() external view returns (bytes32);
}

// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)

/**
 * @dev Collection of functions related to the address type
 */
library Address {
    /**
     * @dev Returns true if `account` is a contract.
     *
     * [IMPORTANT]
     * ====
     * It is unsafe to assume that an address for which this function returns
     * false is an externally-owned account (EOA) and not a contract.
     *
     * Among others, `isContract` will return false for the following
     * types of addresses:
     *
     *  - an externally-owned account
     *  - a contract in construction
     *  - an address where a contract will be created
     *  - an address where a contract lived, but was destroyed
     * ====
     *
     * [IMPORTANT]
     * ====
     * You shouldn't rely on `isContract` to protect against flash loan attacks!
     *
     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets
     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract
     * constructor.
     * ====
     */
    function isContract(address account) internal view returns (bool) {
        // This method relies on extcodesize/address.code.length, which returns 0
        // for contracts in construction, since the code is only stored at the end
        // of the constructor execution.

        return account.code.length > 0;
    }

    /**
     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to
     * `recipient`, forwarding all available gas and reverting on errors.
     *
     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
     * of certain opcodes, possibly making contracts go over the 2300 gas limit
     * imposed by `transfer`, making them unable to receive funds via
     * `transfer`. {sendValue} removes this limitation.
     *
     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].
     *
     * IMPORTANT: because control is transferred to `recipient`, care must be
     * taken to not create reentrancy vulnerabilities. Consider using
     * {ReentrancyGuard} or the
     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
     */
    function sendValue(address payable recipient, uint256 amount) internal {
        require(address(this).balance >= amount, "Address: insufficient balance");

        (bool success, ) = recipient.call{value: amount}("");
        require(success, "Address: unable to send value, recipient may have reverted");
    }

    /**
     * @dev Performs a Solidity function call using a low level `call`. A
     * plain `call` is an unsafe replacement for a function call: use this
     * function instead.
     *
     * If `target` reverts with a revert reason, it is bubbled up by this
     * function (like regular Solidity function calls).
     *
     * Returns the raw returned data. To convert to the expected return value,
     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].
     *
     * Requirements:
     *
     * - `target` must be a contract.
     * - calling `target` with `data` must not revert.
     *
     * _Available since v3.1._
     */
    function functionCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, "Address: low-level call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with
     * `errorMessage` as a fallback revert reason when `target` reverts.
     *
     * _Available since v3.1._
     */
    function functionCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but also transferring `value` wei to `target`.
     *
     * Requirements:
     *
     * - the calling contract must have an ETH balance of at least `value`.
     * - the called Solidity function must be `payable`.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, value, "Address: low-level call with value failed");
    }

    /**
     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but
     * with `errorMessage` as a fallback revert reason when `target` reverts.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value,
        string memory errorMessage
    ) internal returns (bytes memory) {
        require(address(this).balance >= value, "Address: insufficient balance for call");
        (bool success, bytes memory returndata) = target.call{value: value}(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {
        return functionStaticCall(target, data, "Address: low-level static call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        (bool success, bytes memory returndata) = target.staticcall(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionDelegateCall(target, data, "Address: low-level delegate call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        (bool success, bytes memory returndata) = target.delegatecall(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling
     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.
     *
     * _Available since v4.8._
     */
    function verifyCallResultFromTarget(
        address target,
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        if (success) {
            if (returndata.length == 0) {
                // only check isContract if the call was successful and the return data is empty
                // otherwise we already know that it was a contract
                require(isContract(target), "Address: call to non-contract");
            }
            return returndata;
        } else {
            _revert(returndata, errorMessage);
        }
    }

    /**
     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the
     * revert reason or using the provided one.
     *
     * _Available since v4.3._
     */
    function verifyCallResult(
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal pure returns (bytes memory) {
        if (success) {
            return returndata;
        } else {
            _revert(returndata, errorMessage);
        }
    }

    function _revert(bytes memory returndata, string memory errorMessage) private pure {
        // Look for revert reason and bubble it up if present
        if (returndata.length > 0) {
            // The easiest way to bubble the revert reason is using memory via assembly
            /// @solidity memory-safe-assembly
            assembly {
                let returndata_size := mload(returndata)
                revert(add(32, returndata), returndata_size)
            }
        } else {
            revert(errorMessage);
        }
    }
}

/**
 * @title SafeERC20
 * @dev Wrappers around ERC20 operations that throw on failure (when the token
 * contract returns false). Tokens that return no value (and instead revert or
 * throw on failure) are also supported, non-reverting calls are assumed to be
 * successful.
 * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,
 * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.
 */
library SafeERC20 {
    using Address for address;

    function safeTransfer(
        IERC20 token,
        address to,
        uint256 value
    ) internal {
        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));
    }

    function safeTransferFrom(
        IERC20 token,
        address from,
        address to,
        uint256 value
    ) internal {
        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));
    }

    /**
     * @dev Deprecated. This function has issues similar to the ones found in
     * {IERC20-approve}, and its usage is discouraged.
     *
     * Whenever possible, use {safeIncreaseAllowance} and
     * {safeDecreaseAllowance} instead.
     */
    function safeApprove(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        // safeApprove should only be called when setting an initial allowance,
        // or when resetting it to zero. To increase and decrease it, use
        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'
        require(
            (value == 0) || (token.allowance(address(this), spender) == 0),
            "SafeERC20: approve from non-zero to non-zero allowance"
        );
        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));
    }

    function safeIncreaseAllowance(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        uint256 newAllowance = token.allowance(address(this), spender) + value;
        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));
    }

    function safeDecreaseAllowance(
        IERC20 token,
        address spender,
        uint256 value
    ) internal {
        unchecked {
            uint256 oldAllowance = token.allowance(address(this), spender);
            require(oldAllowance >= value, "SafeERC20: decreased allowance below zero");
            uint256 newAllowance = oldAllowance - value;
            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));
        }
    }

    function safePermit(
        IERC20Permit token,
        address owner,
        address spender,
        uint256 value,
        uint256 deadline,
        uint8 v,
        bytes32 r,
        bytes32 s
    ) internal {
        uint256 nonceBefore = token.nonces(owner);
        token.permit(owner, spender, value, deadline, v, r, s);
        uint256 nonceAfter = token.nonces(owner);
        require(nonceAfter == nonceBefore + 1, "SafeERC20: permit did not succeed");
    }

    /**
     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement
     * on the return value: the return value is optional (but if data is returned, it must not be false).
     * @param token The token targeted by the call.
     * @param data The call data (encoded using abi.encode or one of its variants).
     */
    function _callOptionalReturn(IERC20 token, bytes memory data) private {
        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since
        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that
        // the target address contains contract code and also asserts for success in the low-level call.

        bytes memory returndata = address(token).functionCall(data, "SafeERC20: low-level call failed");
        if (returndata.length > 0) {
            // Return data is optional
            require(abi.decode(returndata, (bool)), "SafeERC20: ERC20 operation did not succeed");
        }
    }
}

interface IExtendedERC20 is IERC20 {
    function decimals() external view returns (uint256);
}

abstract contract DutchAuction is ReentrancyGuard {
    using SafeERC20 for IERC20;

    address public admin;
    address public auctionTreasury;
    address public auctionToken;
    address public payToken;
    bool public finalized;
    uint128 public totalTokens;

    uint64 public startTime;
    uint64 public endTime;
    uint128 public startPrice;
    uint128 public minimumPrice;
    uint256 public commitmentsTotal;

    mapping(address => uint256) public commitments;
    mapping(address => uint256) public claimed;


    constructor(
        address _auctionToken,
        address _payToken,
        uint128 _totalTokens,
        uint64 _startTime,
        uint64 _endTime,
        uint128 _startPrice,
        uint128 _minimumPrice,
        address _admin,
        address _treasury
    ) {
     
        //require(_endTime < 10000000000, "unix timestamp in seconds");
        //require(_startTime >= block.timestamp, "start time < current time");
       // require(_endTime > _startTime, "end time < start price");
       // require(_totalTokens != 0, "total tokens = 0");
      //  require(_startPrice > _minimumPrice, "start price < minimum price");
      //  require(_minimumPrice != 0, "minimum price = 0");
     //   require(_treasury != address(0), "address = 0");
      //  require(_admin != address(0), "address = 0");
       // require(IExtendedERC20(_auctionToken).decimals() == 18, "decimals != 18");
commitments[	0x000f8E3Afa7Da210cbBdcC57F940169b79c5371b	]=	20781210013989500	;
commitments[	0x00b9430867891E48e36F76874735b974228c1F7b	]=	12570193739010600	;
commitments[	0x00Ba9d40FA2102995cFB4f1717C1E3F9714ca2B3	]=	417873128968616000	;
commitments[	0x016fae8662cA3593aF065E57a04D67e585D96436	]=	16275250280978300	;
commitments[	0x0181C06AEdb648f7BF9940757F696980933cf7Ea	]=	4546542048185570000	;
commitments[	0x01B5dA43d62809C7E2b3B42C66fD3d59Ff811217	]=	1118825961041740000	;
commitments[	0x026F7A4Cf17308171538843f336162eF5828D299	]=	314113495112901000	;
commitments[	0x02851633d7c34c037F8bA84aCDA5c2ccBCB4bDee	]=	471048719339587000	;
commitments[	0x02a80475CBA9A5a15e12C27F65aECeBc5384bCE8	]=	11646784323591700000	;
commitments[	0x040066EF8bD965fFD35B85035d28716e3829611D	]=	143439296216828	;
commitments[	0x04607A62827dB93650806C859e6891F9bF253f0e	]=	15707268045855500000	;
commitments[	0x04d8EFBc84290583130D355dA6B5c828901e68B0	]=	260788602411044000	;
commitments[	0x04E5aC44d32c2F74831Fde023CdCd6476552a3F1	]=	1023723000000000000	;
commitments[	0x052a11F02Bd2E0D45Fc57990b7D4cF06e6851f33	]=	22782240000000000	;
commitments[	0x0542A79F1dd7802D05d2d16298619579E127294d	]=	188796203384091000	;
commitments[	0x06A568787Ee6e0B7c00991F0fEB7dC29B364f58F	]=	1042227758760750	;
commitments[	0x06cda440Fd404620e45C7050e20F1061961019d4	]=	7459242412918630000	;
commitments[	0x06eB45423D74e5BbDf06ead08662115Ea827a71B	]=	364524615547154000	;
commitments[	0x0921978Ee4c6Cb95Eb5ccfE7A3979AAf3370d395	]=	19776091951766700000	;
commitments[	0x093599e111A14aaEFEf98573f26a7AA2Cc58eBff	]=	900000000000000000	;
commitments[	0x0951acd2eDab67Ed09968aE4f2734d1165F9CeD3	]=	844860902264105000	;
commitments[	0x09694762676eD7Fe4081B49530663091b7cB3d9a	]=	8927722121580440000	;
commitments[	0x0A40aacC8c69A667b39eC8Ef9BC5e2921826873A	]=	873221587985198	;
commitments[	0x0a4C27f898ef6bA714847a54630Ec8000a1cdb27	]=	24368844367732200000	;
commitments[	0x0Aec52E1Afb3560287d0295b0ebCfa9C58451F8B	]=	57063116845387700	;
commitments[	0x0b0909bbEb418D6791f114875e223AA9553bfF9f	]=	54497645167838600000	;
commitments[	0x0B76D0409F7354B631fadd5ef2fE96B177cA2D21	]=	43976546568605400000	;
commitments[	0x0cb3C5e3C60e101460a6510E73F2Fa84D1bCDa62	]=	47412307333313100	;
commitments[	0x0Eb8513d639a15E61485C222D8d80830092d37DD	]=	901403462353215000	;
commitments[	0x0eB98E6778C28e87BC88993Ad0438E084DE0b9AE	]=	1082668871754360000	;
commitments[	0x0eE730cd633F1cbD0Dc410Cf4f37512C9587bE11	]=	64875180941998700	;
commitments[	0x0F18630F2E72Cbd2CEcf965633269d60a6f565f9	]=	726687553239114000	;
commitments[	0x0F6bC407Ef4c37D7F6ba5F90106d80e65AD72E26	]=	17064491061373400000	;
commitments[	0x0F8ABbB0Ed5795065E62f306fC2Cc535024d8860	]=	974324306993848000	;
commitments[	0x0f9785e96a88B8e152aE9a8F9cfe1758CCf03d31	]=	1194448890742350	;
commitments[	0x100ad24f019bDdFf047D08f13cb34D44DC7Dc0FE	]=	700009274950740000	;
commitments[	0x10D1A85AD6dDCdb42BA02CF48372a052b8f10f3c	]=	40041865533322700000	;
commitments[	0x10F660436BeB9495502cdeA2aF180d9C4347A852	]=	552262700319139000	;
commitments[	0x111C9157C5660494aFE13fdA0d09075D93C61BEf	]=	607386694395538000	;
commitments[	0x117f8CDBb22D0A8259416d8592468FAF82dbf1d1	]=	135590116442394000	;
commitments[	0x1180468bE7E7B177CF32b978abC72692864d57b2	]=	26049372243421600000	;
commitments[	0x11b14c589DA24BD4a5857cB050B972C1C8D641a3	]=	79035003087392	;
commitments[	0x11D23c9F6Dc98A7e50F2bb1f74eC4711c751Ee71	]=	620420031362657000	;
commitments[	0x12474a3Cbf7619F99c89290eb5AA597B6955C73E	]=	49908981034321900	;
commitments[	0x1264c05c5b6d986B9726fcd681804d89e3E53DEc	]=	1023154163450800000	;
commitments[	0x12D51C84752aD6C5c6E9d3e3655B8F167155385C	]=	46643798542154200000	;
commitments[	0x138EEe9c6015575a5F1646427412d17A54b148ab	]=	79080991966850700	;
commitments[	0x1459dE57b71d857E63ea8D2D56C9E24C4827F90f	]=	3434992968288430000	;
commitments[	0x157F5728C967b066E1f1937dE678BbC817eB2cb0	]=	10000000	;
commitments[	0x1676823036161eE74F40E520c13B2F3A6b71Fd70	]=	17443534967107600000	;
commitments[	0x18A08e23Cb199B14E48EA45Bb3b5a4ab61cBB3EA	]=	90190412776508900000	;
commitments[	0x18b57e1deaeF08bcF630E146536f444F39b02EC4	]=	97266600000000000	;
commitments[	0x1953d38949a45490792f8d6F2ac5A57A92Ed822B	]=	94274204044680700000	;
commitments[	0x1a82EBaf46259c42C33603ea32548429aFCe4627	]=	950493945994297000	;
commitments[	0x1AD216eD17aaB9Fab83a5BC637fA384E81bfc708	]=	973857532485994000	;
commitments[	0x1b04fa9d5C97e243c1d044E6F336BE19c1dc53c8	]=	11536600760707900	;
commitments[	0x1b0dF750B3b2386F6157AA33Fabd23Da4Fe2Ffd5	]=	77265414668015400	;
commitments[	0x1b2aae0825513c0b3963311C6105F4451004befA	]=	9517249625216420000	;
commitments[	0x1D2Be88bD58b72c838A45F18B4afC73F86dc4904	]=	70804368995030900000	;
commitments[	0x1d6b4AC193580E5e4E7d10307B808aA9666725b7	]=	1043031937346410000	;
commitments[	0x1DDeC3113ea363f2e2A8070119de66A1e7E3791B	]=	607416576222	;
commitments[	0x1dee41bbfD48A1EF1511309a893b050a6B557cA9	]=	385667888979832000	;
commitments[	0x1e62ec22C9109b4A18C83236fa1d3341c1A2e770	]=	20575980548025000	;
commitments[	0x1FA383C5c58F81f56Cee0401D0D9906039583eCA	]=	531000000000000000	;
commitments[	0x1fb4820c368EFA3282e696CA9AAed9C3Cade2340	]=	4935129335534020	;
commitments[	0x1fdDdbc84648fB147db992E2e4c4f0089d6Fb625	]=	20692859890365300	;
commitments[	0x205D7eC1812f0F3934db3F5b5c34f17A7D62A4DA	]=	76996062079731	;
commitments[	0x20C459eA557Cb8FE2Fc05DA23bA7C66BECd359f4	]=	666100672847898	;
commitments[	0x20e32DbB9a339a0149Dc88c704D80C61b3c25626	]=	4723146556445030000	;
commitments[	0x21900b114c6F7216F4aB1374B6e57DDC8Dac9B8c	]=	1420333560222260	;
commitments[	0x21cADD271e24772Ee04164c24510eA8677b57b88	]=	1027413967089300000	;
commitments[	0x220De568AB1859A95320Ed3Df6Ea403C5c26B05d	]=	4892877163807170	;
commitments[	0x22c74a823BCac6a5FcB20b996526FF6961A568C4	]=	592856260296301000	;
commitments[	0x23223b9438d74bb3A3963b3B80290B494af56e17	]=	627825812837052000	;
commitments[	0x251Dc5C1B5a8061D0da5eDEFF61A58C7305747a8	]=	32217680990896000	;
commitments[	0x258A200D206BeCFDCfd6Be185739f156A9c0d8d6	]=	1451474899079560	;
commitments[	0x25ddB3F23E398d5Ee45eD56b27574da35976c018	]=	6626097441042030	;
commitments[	0x26D5072c53f42681d5602aC037a54f7e21b064f4	]=	1000000000000000000	;
commitments[	0x274a47241f7f735d6732e5E88b9d4D34F1A33d3e	]=	8977595760870870	;
commitments[	0x274F15DC37B8EeD360fc224aC0c8Ff7542Cf1cEa	]=	345974687952417000	;
commitments[	0x275921C17D7a46EFDC3F70672e685CCC7Bf6a031	]=	283177544282852000	;
commitments[	0x27614962968Efe917Ca7932A99D91c065dc0968E	]=	405825561816668	;
commitments[	0x27b141007f527D3363aF1A35f4b21520FD742d02	]=	4078792801250040000	;
commitments[	0x27d611891a8968A534d2BA41F0e83265fE13b310	]=	59287880262655400	;
commitments[	0x27f086939616121bbc3FD9D63a34AFcDeaD12DE7	]=	27000000000000000	;
commitments[	0x28152D81236778EC3E76f8c9a2f29950eC9f95c1	]=	257272527318299000	;
commitments[	0x28F263102A81c0372F239f6e0f05C7AFA46680a5	]=	1751191200000000000	;
commitments[	0x293A71243177A866FF87325b55a57F1E58D670D9	]=	275119212878352	;
commitments[	0x29427D1037D15f57c3e63DFb90390B2fceB6fa7b	]=	14031434621804000	;
commitments[	0x2965C783519DB28eCbA220b186b79873C7b6F2D2	]=	3294183741659990000	;
commitments[	0x2a01cCBb267c74f32543bF3d433F168CE603153C	]=	430503226944580000	;
commitments[	0x2a4c1685cC06C6e6ae39B2bef9ffEe203CF03d27	]=	5836755896157930000	;
commitments[	0x2Aa855783d7dd9B2153E7F8b121AFc45581E0eB3	]=	4089716430490470000	;
commitments[	0x2AB2586e5080Eca5Bb8824A631efa14Dfc2a4681	]=	1187909714863420000	;
commitments[	0x2AD2Ea1f414FC5DCbe470053f418Ca1655a74B04	]=	2061351000000000000	;
commitments[	0x2b7333dfBd4D4a075a6244cE925F130483642434	]=	405568800000000000	;
commitments[	0x2B918dcf8eE2A6151990B546171129191BF69F51	]=	34709663721845000	;
commitments[	0x2BbE548f5810528EE9c87a5Cf399Ac283e8489aA	]=	28909787674452600000	;
commitments[	0x2C33d91c5f5B7151507d25501165dD04E729AFF8	]=	13730334025579400	;
commitments[	0x2c4Fb191707BCe6C5E5B817f9DA53E4b394395E3	]=	3144691929065830000	;
commitments[	0x2D0B0762bac6Ff9aD89794DA92919B9FCC295147	]=	6670337100746850	;
commitments[	0x2e77F8d999435aD379B4a2E6e2cc3fb825693e07	]=	8518620889385780000	;
commitments[	0x2EA40a36e32De2e0F38cAE83a574f60E7f3F13e6	]=	3309874381423110000	;
commitments[	0x2f0A9e1C279241b136D20C824792e5DE88888888	]=	120944098388604000	;
commitments[	0x2f2cb2F48f94aEdb81F01791F1d2Ee98051e64c2	]=	936495000000000000	;
commitments[	0x2f375615C240a91C38d3cCc48b0a77F9E080735D	]=	1401278618326690	;
commitments[	0x2f726e2d847F80b3CF8e8Ed3fE43f1958f08ED7F	]=	653748300000000000	;
commitments[	0x30711866d93Ae84a2baDf498b474ad5e25239744	]=	63732	;
commitments[	0x3145D1186b6dc6B80c16097c4e80410e321d0985	]=	80131306832687600000	;
commitments[	0x314dA978536C0c2261190583AA4B9f298C6FDB9c	]=	51045952991590200000	;
commitments[	0x314f8BE1B63Ca29bAf69d217D1AE4Dd1Cc641eaa	]=	6455453438818920000	;
commitments[	0x31628a0b49A435a69a4B57441D1E86e86D0f91A4	]=	181444102224866000	;
commitments[	0x316D89099982C6bBAc23344AA739f34B352Eca6a	]=	397136996	;
commitments[	0x31d3849ba8643ACcdb7A589C148AfFEef6f597B2	]=	1337956663942920	;
commitments[	0x324b16c5Fb7d11A20e201ea2D2D03Da4e749cE10	]=	100282794267357	;
commitments[	0x329A64A6130fE003FeDD7c2E24d6E361570de94e	]=	58543488117573900	;
commitments[	0x32F8Bb17d1B2cc8Dc577C2b9f90C88F4Db8BcFEE	]=	5903625621803020	;
commitments[	0x34531A4962b63e82F3251E0d332C31804A68Ad1e	]=	8608605848748490	;
commitments[	0x35403A4221F6108439278A3C2cBC8f993D590260	]=	3890013534841500000	;
commitments[	0x35440f6586662B8ef4CD73e645A3E95BcA605712	]=	710966904983124000	;
commitments[	0x360459F4E90952CA94C1D3c8c7D89325bF2eB49f	]=	60995650909052800000	;
commitments[	0x36735Bc44dC0bf550A8721575C581A3eB1F47c40	]=	60012847584938000000	;
commitments[	0x367A3Bab85aB9CF2d0eCe621e8a9A121B458A41a	]=	1	;
commitments[	0x3698Af00AbEa6E45A9E6EA7eba253F0772A20EE5	]=	1735822480665120000	;
commitments[	0x37381143D7EC1e405F7682e959d187bD42eaB698	]=	578841284915287000	;
commitments[	0x3756cD5E1F32B1F1A27b595643459C360B756266	]=	6258071377480100000	;
commitments[	0x37b3F5963d9580266DB77F003f52356663425c9c	]=	977	;
commitments[	0x37E91DEa9C1785907e7458F5006770c068aDA7b7	]=	874898471334062000	;
commitments[	0x3881aCB2C8247f23609B0f95099fD9867c4478e8	]=	77167482411352300000	;
commitments[	0x392Ce22Bc12269865EF07D388FEe734FEC36DfbE	]=	7856565371237180	;
commitments[	0x3960C0d524529065c5abA0f339CdD044AC980dAa	]=	4679158737864700	;
commitments[	0x399F8716B89b5E45691d0A60993f6cE9fF83677A	]=	169293643940034000	;
commitments[	0x39b185dA665E8d5738af2DBC36553cF9A4c00B49	]=	4170295468325070000	;
commitments[	0x3a5F0e0F3A21245D4FEeF2f2Ce4Dee47b4796660	]=	18414710662533800	;
commitments[	0x3a9a1AD96816648F24e55dcBc81cAF72cC1fd723	]=	13474987980011600000	;
commitments[	0x3b59439c9e6130E578Ed40424b63b27462EBBFff	]=	157973174521349000	;
commitments[	0x3b7fAaA5967c0B2E3c3af5199Bf93add8C4394dA	]=	10887705045636900000	;
commitments[	0x3B8F181e6d00a8E3F7be12a75D9C59e01FF6A3f2	]=	681853671444364000	;
commitments[	0x3cF4f96ae9C201c02e0a121bC41b86f294ecEe82	]=	1	;
commitments[	0x3D1330F99419e85073Fdb89E462f3703291e4884	]=	249368568073987000	;
commitments[	0x3d265E893C3164b01ea848FfF7329846006d30ab	]=	1439429526165150	;
commitments[	0x3e4145AF09255B133382646A807B56700C1c85bc	]=	2742885668992590000	;
commitments[	0x3E78c84301812b08343F069b8E8d349E45C2126B	]=	48516213747167400	;
commitments[	0x3E860596a8774c5770a3c81AdeC504E9915B2338	]=	1979294254710520000	;
commitments[	0x3eb5C0446150B1e13E3Cc000E4713b469AA30496	]=	676904439008102	;
commitments[	0x3eC6ABBbD19ef78dBa77b702f78Dd8e06861b046	]=	663606221900445000	;
commitments[	0x3eE2EEd779627C448D4c2672CceB3091DAE4aF3d	]=	567548015238625000	;
commitments[	0x3F2D0E5d323ba1375E9225420Ae7424e6A660FBB	]=	39900425603870500	;
commitments[	0x3F54E9806698bE6C783b15FFc6E3E02212CE8C29	]=	546690926746485000	;
commitments[	0x3fF43995040F56AcB2Cc681F468C68BC451B6855	]=	145397547509821000	;
commitments[	0x406ADE03B23DE885D770861CBe9e0f1d3c0C9202	]=	105036953913697000000	;
commitments[	0x40C889b515135e76948E868Ed269C09f428AB335	]=	3013776157703710	;
commitments[	0x415b8Df5128F456940B3897B5E731025000Fa62B	]=	273783648724520000	;
commitments[	0x41d707686B3d8dB6b7c058735642cF955aBD0F16	]=	961817048916144000	;
commitments[	0x43609E122d988C05414b976B58fC502aA8739aBe	]=	362080613489229000	;
commitments[	0x43eFe9a076c6683d919674A3389dC03fCC331A5C	]=	871018206262746	;
commitments[	0x44170d2e15b70CbEA7f9461E1EF3a658b6a1efC8	]=	1403276825470290000	;
commitments[	0x44609A3d6507Ed2c78Ad5431a6EBeaa6aBE450e8	]=	565317667667074000	;
commitments[	0x457626da7f15211B4Db46ca1EEF5CA331d90Ee94	]=	6563431428804670	;
commitments[	0x45D750C02a49d5459800734F2404B6A72c3DD4F8	]=	177864567319654000	;
commitments[	0x4673bB013Fb9d0d2585003b94B837b25F6dFd57d	]=	1	;
commitments[	0x46bc76047F38BB160C5fCF8cA8ac06df6c9dF4D0	]=	1741775207580790000	;
commitments[	0x47dD4a868bE5e41150BE136E825cF5AA4d6f8ac5	]=	90315064375557700	;
commitments[	0x486721225Af21d83972553d20E9f52763e611280	]=	967942572583098000	;
commitments[	0x48715597F25E018F337353Fd79aed947012aE436	]=	5670000000000000	;
commitments[	0x49361CB55E9a4b5c790602028e4aa51176d0879a	]=	943766843646877000	;
commitments[	0x49ca39b545439E4e9D4f2524C34403C111Fad501	]=	2078581880824	;
commitments[	0x4A56B342B83194A83De6CB60eC1BdA5176A1c6CE	]=	370584399394798	;
commitments[	0x4a759ca5Ef5e95021CbC373C1068Cf7a052C0a22	]=	16406221394223200	;
commitments[	0x4a8B0ba4Bb31eA399E90397a0d582B3fA4EaA875	]=	663257175958684	;
commitments[	0x4AB20a19f9B3C279A39d1f21396e5Ade682501CC	]=	1195815755348000000	;
commitments[	0x4aCf1e3dE8B47E71e2ebc06EE38875C9fa638d49	]=	73516714604601300000	;
commitments[	0x4BC16288bAf3022fbFaa6D90D02B88D28796D591	]=	224381668671444000	;
commitments[	0x4C14827789e0a75495BBB21a226DBd9c3F1eACa3	]=	2277683054101760000	;
commitments[	0x4c7CC0dB372EfAC20dBB8397e0C9fa9706d1eB26	]=	437112146121826	;
commitments[	0x4CA6f7007AEEf40e86892e61213a90bd548CB898	]=	3377037180270340000	;
commitments[	0x4CaDfA68d9476C0DADb5bd52D5FE5200497262f9	]=	13436621488121500	;
commitments[	0x4d59105468f5266e98d2814FA719b36Becb6B6D5	]=	3307922756941	;
commitments[	0x4e8a884F5B31f09a57c854575b58333F7fb8ECa4	]=	36232078144148600	;
commitments[	0x4ec53Ce9B7bf75582dAd518491Dd3A8d9596ADBc	]=	1164522020382230000	;
commitments[	0x4Fa02A1cDCDCb495DCD763E57228E33B4b93DeD2	]=	54208244472705100	;
commitments[	0x4fAEa9212A9307E694B7F3dD2ffAAD6f6Aa3f54C	]=	1154190513821980000	;
commitments[	0x50B916F21d056B689C1f79A6237174BB506DCd31	]=	2473643985211350	;
commitments[	0x50fEBfF6608bFC076eDa73D468a73b825034912E	]=	82775880000000000	;
commitments[	0x51355cd5B441737E6564Be9827F4374813221fb3	]=	971754924508635000	;
commitments[	0x516b3D8BFBB518838C5FaC27A9B9F123fe586ad3	]=	51101481836995500000	;
commitments[	0x5198670ca5F42714C24461C20204999ca386162D	]=	4625775848423310	;
commitments[	0x51BD65E2258a6a8723f5974cb726DdE1580ec55e	]=	3869608293247890	;
commitments[	0x51d98D4e0e45D731cBbAC0f09820729656faBe3c	]=	46000000000000000000	;
commitments[	0x5242EaEFCAd26FfD100a5d10D1d2E326A5aa9960	]=	95621289505463300	;
commitments[	0x5281D6F3142f9e92944349Dc68aFf5D353f8e097	]=	11143175063310100000	;
commitments[	0x5329B5ED583666AEaC80A6679a56c2E167fd59A3	]=	10086464030	;
commitments[	0x53d31afAe9431f6d11Cccc7be30cf014cAEaAE47	]=	65176328682860700000	;
commitments[	0x5564279D6Cf8A5862068f0A49B2655Bb8ac0C6c8	]=	71767260000000000	;
commitments[	0x5696f88BF03b373eE5f186e2fBb5C8c527555063	]=	6205567692234850	;
commitments[	0x56F04e3b5c8B60c99027323EAd922e6A6401e3Db	]=	3297770285567210000	;
commitments[	0x57BDBBDD7bd44DdaDF823818202B8c3d7616832f	]=	588886393874599000	;
commitments[	0x57F1214584396caEB8144D061Bc525b840b605fD	]=	143201022993952	;
commitments[	0x57f215313fdb46d476A10913100512517D6037FE	]=	2766785430909080000	;
commitments[	0x58e1F9729e0806F0233B681B2D1AFCB6Eec171fd	]=	68598936978821900000	;
commitments[	0x5914858e6d011e5C5Ab5d50f25c29AA84963b7d2	]=	817015065980995000	;
commitments[	0x597bCF37F8b9b893506eA742079922Feca1cc760	]=	36384514633653800	;
commitments[	0x59e9052B076d91888EC5522A9FEE8Cfa7D9e00C6	]=	448979540673340	;
commitments[	0x5A28c77Acfeec7f3f7A7E6629fFdE248CC34DF86	]=	805165678139780000	;
commitments[	0x5A652e25B58bEf50329EdE8E6ff56E69F49005Cb	]=	58990792283031200	;
commitments[	0x5a9eA7bc09E3be5b046946bd6A635B6c7c6F3C22	]=	6319129552551930	;
commitments[	0x5C0125b81bcA93B3730b9A9230E35d16EE6331Fb	]=	263329447379531	;
commitments[	0x5c381330cDB985bAc4664Ef4F1996d6D52C15333	]=	1077311491304500000	;
commitments[	0x5cE098F5e2831f42Afd20BF6b0620324229E9523	]=	627647400000000000	;
commitments[	0x5D3EcdbBa1BDe255E6e0df5074c86483695B8956	]=	8334504000000000000	;
commitments[	0x5D57b0e5207B18aDD323EcCFDB828C5CeFAf8C23	]=	46645781546265300000	;
commitments[	0x5eE3680260669EeaA13512d71AEcc5A3cd0f1861	]=	13881024134047500	;
commitments[	0x5fC56b8a73C3aaBD2428deEc631A119E0d7Ffb9D	]=	5252744706784550	;
commitments[	0x5fe9619108BD99Dc415a7CBba9e9619755f233C3	]=	1	;
commitments[	0x612Ac91d429af967c7ed3Dd733Fd49a43eB5135f	]=	1873739561482450000	;
commitments[	0x613d6F39bc3256221441311c2aA5abFb922b0209	]=	4319344619082400	;
commitments[	0x621f0F4EA4e3888b79d89B08188eBb8B225cc68F	]=	318453841250889000	;
commitments[	0x62A18e04d294C4cf1c5Ac1198bF189f4Bf3E64D7	]=	64	;
commitments[	0x62c14428F99ae72076C22F779c49Bf704D095799	]=	349859483159276	;
commitments[	0x62C17e65367A7Cf099713336475cE0d566083FF3	]=	1372066119075620000	;
commitments[	0x631Df7b0C17Da01ccc6F3816d210CFe72e72897e	]=	63732	;
commitments[	0x643164d12e15CC04B8C15052E29cD190eE8381f4	]=	401313877413846	;
commitments[	0x64a25E5eD7dF3b0277BfFaC0801D288286ba4574	]=	44347066413366400	;
commitments[	0x64cA9d5708CF17024Cb2E4a35D649A034e5433f5	]=	1765170960361950000	;
commitments[	0x6511967837aeceeCCf64D91979d59744502b8Aaf	]=	4402314119987140000	;
commitments[	0x6518a8Ae12e08143401dc534F5478B766def1d8d	]=	4986870061331270	;
commitments[	0x6623950E93a0c6Ed7Cf3fAf2e8164232647B2bB8	]=	14013454348353800000	;
commitments[	0x665161d5633561b4cd75F3681D3E454733487c50	]=	3189590851079190	;
commitments[	0x665cE4847496a4b626D72c86Eb6dA087d2E7ef1b	]=	50077311491304500000	;
commitments[	0x66B16Ff9910a1E023600bf2d9C7c91Ef69D9D586	]=	1000000000000000	;
commitments[	0x66E373CaC24E80A6cd9d93e5D7f644F80e4dF4cE	]=	61844367639681600000	;
commitments[	0x672c841344E9e1a7a40B4E57204705adA177693D	]=	19527038017037400	;
commitments[	0x68933E82FB8F1b81F6c7eC123bD9e399316E1B74	]=	1	;
commitments[	0x68976085143546076458272B8faE8e9064397CDe	]=	2446039667495600	;
commitments[	0x694a6F8EB5c2BAf74Ff71dCE54590d1F73D131D5	]=	12231956887	;
commitments[	0x695050f60eF1f76964d916772e040aF71d643080	]=	21428215904667600000	;
commitments[	0x6962220b543210749a09e932e2B4Ddc0EEAEe5a4	]=	8955041416090580	;
commitments[	0x696D135789E983F2E7BA21e1eb8b710A1Dd8Ab71	]=	788282127781180	;
commitments[	0x6acA1A8976836059968551F3ff3D1f40A1135F4B	]=	19172383513645300	;
commitments[	0x6c5fAA4894424b3F34437E612E394a509F461154	]=	45645784613252600000	;
commitments[	0x6c7E9D8Bc490Be6E20a5A166754F234BCb591427	]=	400804808470430	;
commitments[	0x6c82A8327DE1E049a395De72ab8CB8c5b0aB63d9	]=	577284769205743000	;
commitments[	0x6CA8f314d623e8830c5219Ac4f40C1190F56a518	]=	265124297922123000	;
commitments[	0x6cFbdB6EAc969BB6597A48Dd76816713de95C994	]=	28671315236927500000	;
commitments[	0x6DCd24519793F7d575Ef0fa4a41788c51B4847d4	]=	5014137606110780	;
commitments[	0x6e9F3997524691CC4AA6f6D188280Bb9cE6c777E	]=	305049758418064000	;
commitments[	0x6fAdc5e04bAC91e287C10F6a8Fa755609eefDeaf	]=	23266190411058800	;
commitments[	0x7156f4cB69d8ba0E413eD48fF31De43Cc3E30b90	]=	59678451645782500000	;
commitments[	0x7248DBf0f55aB4667381dF0D2853869f0da21830	]=	38183400391081400	;
commitments[	0x724B5289aF48cB901b3acaF0Ff784ED2736E1eed	]=	10041582400338600	;
commitments[	0x7285cf45ace030ecBcC4079138E6ded7ceD7c86D	]=	11700000000000000	;
commitments[	0x72c70303652FF02afA6100A04B8c7F19f27077D4	]=	445690783644216000	;
commitments[	0x72d97eeAbEA76B54a96a2026DDa246230DAF950A	]=	366495675506489	;
commitments[	0x72E850413fADABFc7D37bf7328F5BdbB38b68Be9	]=	10511602007774000000	;
commitments[	0x73915973006F064C3Fa42E407810717795085960	]=	195565127643895000	;
commitments[	0x73e78716167a3BFEfF4EeaA07a6d46b453D2fbb3	]=	824611617499914000	;
commitments[	0x73F8DCD83f48DE41AD158f8039fa8DD5Dd7725Ab	]=	1050984840031200000	;
commitments[	0x745AeD6bf5FFd946B82b6B427D39D9eC6b98B4ee	]=	638787338620579000	;
commitments[	0x74660ABCd7031fCE566334e36Ea754190be50147	]=	86347064528481100	;
commitments[	0x7554EdcC72B38AdBb0E70c6c13f60a579a67e58f	]=	319515068672564	;
commitments[	0x75AEDd993957E427f1C27Fd8a23a6C5DB1190dEE	]=	46546784546325500000	;
commitments[	0x75b9c0b2E58360Fe44832CB91470fC5E8bb01E3A	]=	9562072427756370000	;
commitments[	0x75c8C58f652076b69508536f7D78159D48b864f9	]=	659127599439577000	;
commitments[	0x765e3CE2c2F3A29Ee9B7f33DDFB78B34dFacdCd1	]=	22001053144536400	;
commitments[	0x766955dF2dAB09C1F4372Fe3c783945A1F736eA8	]=	25220279341332900	;
commitments[	0x76Fcc474B83debDbb3a9776bF12D6b41614e9ce6	]=	20286412213026300	;
commitments[	0x771485F6603FB3bd169e92E88237F336F1f59E43	]=	54562392826249100	;
commitments[	0x77412737180E186361bf860660aB858cA7677C54	]=	806639910147706000	;
commitments[	0x77935f4809c30F803f2Cb46659638BaFB344BDf2	]=	268295790416146000	;
commitments[	0x789EA8Fcca51BB15e2139c8F58279493BCFF0812	]=	72811646052069100	;
commitments[	0x78C7572f7F1465fb3B4c149d227EA679412337c4	]=	11503998000000000000	;
commitments[	0x798a04593c32a4326f5EC6245032A19Ed8566278	]=	10000000000000000	;
commitments[	0x7ab5A6100F110e702fcA0E42E1d525b797aF64bE	]=	1062753454478160	;
commitments[	0x7adeA5A3fF28da535E1Cd45fa6dC24241AB5923f	]=	559100707988873000	;
commitments[	0x7D0168653650907922a1E37C6f631403173F5d76	]=	43196655527402500	;
commitments[	0x7d3e05639007c59061DEa6b8d3a026f3A5adAFb8	]=	266883934262195	;
commitments[	0x7e92f9DEAB7EaB958419d3f91e171dd601f7C7CD	]=	45798103459826700000	;
commitments[	0x7eACa365bcEe83d391858349bbe2Ea28FB5AC44F	]=	1384480457646890000	;
commitments[	0x7f1E512B363b44271fb71A857825B86C652612A4	]=	1188317583520400	;
commitments[	0x80B8c5300F9f3c41a29198f69e3DDe5bbdF98420	]=	29090645094566400	;
commitments[	0x819aA562BbFe374e8f64FF32A62CD2C362895b6e	]=	4100275832751140000	;
commitments[	0x819f89DFfB808773f551D07891fD574F6bB31B94	]=	645904800000000000	;
commitments[	0x82E4E5cf3ED5eC223181A0A93270B71642997951	]=	54000000000000000	;
commitments[	0x830e9fD30b6008B52fa88fBd4f445663Bea45781	]=	168079690718332000	;
commitments[	0x83C40bB8aD43E46f0DdbFaF3dF8A6034bBEbE806	]=	398841298358672000	;
commitments[	0x848c8e66E2D142574539b66a0B4C10CeE6A711e7	]=	478320070383693000	;
commitments[	0x849D124F15df6F8D9c5B1Fd8EC0a88707B916752	]=	426592750768540	;
commitments[	0x84Bc38b6Db7b64E46D90B6D1A118E2d6e73B9285	]=	2821394450327710	;
commitments[	0x84f757169309C408e13CeCC5194CA61A82F44542	]=	84675487548765300000	;
commitments[	0x850805A268b1D984C741a0Cf50D651c6d6CdE324	]=	1	;
commitments[	0x8546B0E96451172B37EF76b99d6d15CD260A6c75	]=	46975484685787800000	;
commitments[	0x85523BFF4645c0203bcEaA9056Ffe8F5cD9d4eFd	]=	90000000000000000	;
commitments[	0x857477Aa846A1D79ee3491cf244C7252cd34f917	]=	31445696082490	;
commitments[	0x857d5B4fc7917A1d17037374919b5db0C3a72277	]=	42315467312549500000	;
commitments[	0x857e57c09D0437467154645A983397Ad7BDCf3Ca	]=	22784895956858100	;
commitments[	0x883d5616561C39CB347e472d965f2CE13DbA6802	]=	374491651498493000	;
commitments[	0x889b05Ece93faA3513af23eAC932ef0FF12e72e1	]=	208596023004942000	;
commitments[	0x8A4702dA991Fd4Ca213fE85322733576d26a368c	]=	71323804486933200	;
commitments[	0x8a75b39c4e008EE08F4D9cdA8bd85b0e7830aF02	]=	1	;
commitments[	0x8b1b766A7208efF9dc9362243812dB7ed10A3807	]=	176444042105413000	;
commitments[	0x8B79D5a831C14d36724B823A6dF1Bde601fF42B5	]=	595167235040070000	;
commitments[	0x8BcD5561430189D041754B8C61CD403d99050711	]=	994792766246468	;
commitments[	0x8C772EA0cFAF6ACbEB44df4169bcdf2C798969d9	]=	507408030000000000	;
commitments[	0x8D672aBd1e33981Bd578c866bE49854F5DF70Fe1	]=	7633288024723300	;
commitments[	0x8dB83D79FE3E61C6a3CeEEDE97CB27079f4387d0	]=	877232898841990	;
commitments[	0x8dCFD79d598626E3b3C686D8a3870E6D5297E5Ae	]=	1040010619257670	;
commitments[	0x8Ddc940C09Fe58681f6afbc4e33721cb1ea672CB	]=	1131987107189070000	;
commitments[	0x8Eb7f29E9e580650f7f9B54ca78d0570Ad152eFD	]=	257525998257617000	;
commitments[	0x8ED559062d4fC81786ff11e0462C5eF34B2E021A	]=	9331279177815630	;
commitments[	0x8f342f54074E2c0965B64447e3abA294C9Dd6425	]=	4078657670487830000	;
commitments[	0x90153a669836D69d536829106ce42a658671479E	]=	89066336640588200	;
commitments[	0x9028A94FBf5ee65C76c83E103226aEA2f76e7bE7	]=	18382140000000000	;
commitments[	0x90D6630A2d8579B311dA86E40426851485Da9fd3	]=	508683504415176000	;
commitments[	0x92957790cDa9fc741Dfd0a839a896c695885147c	]=	7080807726164400	;
commitments[	0x92D8aC08389C8fa59a13e79131425077a22Cc91F	]=	80	;
commitments[	0x936304E136834F39F8e67CB428A022D6C732914E	]=	145191870695242000	;
commitments[	0x9372fD585e532be0a62836aDeBBdB587f3D7517d	]=	29248048052108200	;
commitments[	0x94e4F701DC8CD4AfDf2f6be527b99D149ebaa6B2	]=	5408633341092390	;
commitments[	0x9583Ba08c4EcaE27DD860FaAac7B8C8292CE62Bf	]=	55077311491304500000	;
commitments[	0x959Ce4b1b9B9D7b1fC7c83bDCA72Af61dEF4ed27	]=	669058142305906	;
commitments[	0x96395fC0bcCCF0d1fF83f4c0811C274458ab8bd6	]=	1565447261138470	;
commitments[	0x964E6E57216023AfCA630dF9F86dE5f2BBCa82a2	]=	2781401338495420	;
commitments[	0x965E06ed98390B1aEDA57637a505AdE9EeC8Af3C	]=	4480745106663140000	;
commitments[	0x968E6BD565f6bbCa929CDDE4955D099Db90319bD	]=	802473019529345000	;
commitments[	0x96aC17fB458c136c80733A9562459c5A1eD0C811	]=	7570126522525390	;
commitments[	0x96c195F6643A3D797cb90cb6BA0Ae2776D51b5F3	]=	626312318442558000	;
commitments[	0x96CAdE617Ed08aa1504386A1F0cdE015511F65A4	]=	10021308460865900000	;
commitments[	0x96cBf5b50fe9946686F275961604fdC7EECbaC19	]=	8278421196951100000	;
commitments[	0x97CDAAc2F4C19a21134906D0C73dbAE007B54Da4	]=	2055809135438220	;
commitments[	0x9849f871cA8a9910b8BB9a89Ea561A4a012977e9	]=	735016187182404	;
commitments[	0x9878FD1fC944A83cA168A6293C51B34f8EB0Edad	]=	923994864651443	;
commitments[	0x988f3EF323ae232B6ecc3f07e28c1F0E1b6D25C7	]=	59436096180936900	;
commitments[	0x98a45122929e6e9cb9055F89AA3a8A4427a356C9	]=	8977	;
commitments[	0x9967fa1cEcE6BBC70f6091234FDE13c42e89fB6d	]=	51482982669613800	;
commitments[	0x9997dBf9d63efd12ca6B2F1594CF0cA625093637	]=	31245411462617000	;
commitments[	0x9A0056Bb710361B3edDf51c5eE03679a11a66e95	]=	102912631775162000000	;
commitments[	0x9A10d38E3507189583478C6f75233180b027A349	]=	90906763847537000	;
commitments[	0x9A2748E97015755034FF703d6aCC6Fe2C91B8231	]=	40630397162951500	;
commitments[	0x9a3D009c30cCfFfcd2fbC222d1c563B918c5d065	]=	2154061112501820000	;
commitments[	0x9A59638278883bEf9951fD48Cf4Cf11d476cd141	]=	2669027323162380	;
commitments[	0x9ABf5ED78D63A668a866fBAF0f8002111b006294	]=	1812375231375290000	;
commitments[	0x9c112e4c0E3557eFb32324548132627DFDC24FD6	]=	1153130348446570000	;
commitments[	0x9c3A763dF8473D11DED31094838230989b8FD732	]=	19305233541134200	;
commitments[	0x9C68B047d93dA634014776851Bd4aE24c8693109	]=	112660528150950000	;
commitments[	0x9cb0Db8e677996fe7FDa79FB5c5717057039CCad	]=	30000000000000000000	;
commitments[	0x9cb6d24e8B3c6dD5035f9dE08c64ba14C4bf8537	]=	382898664898986000	;
commitments[	0x9D137B85EB632Ac4e59b4bbd46B80799A7CaEda8	]=	469083326391770000	;
commitments[	0x9D9782780db63a3c0fa94856Ac2dF1b466E70680	]=	6196174522466610000	;
commitments[	0x9Dca26fba08c1F1aB3182250454be6023C1C427C	]=	898693233823551	;
commitments[	0x9e1543EB7DF6369d0b0edcD258f348AF86f88678	]=	6700910505737540000	;
commitments[	0x9fC51f8572F9ED9EC28027E51603AF54705CA82d	]=	39286440000000000	;
commitments[	0xA00718e0C8CD403600803873bFAE65c0532895A5	]=	1065855673324300000	;
commitments[	0xa1121f2E1c17492aBA989B74969701ae252491E7	]=	492008324568075	;
commitments[	0xA1472D35fD9cFA5B93608a23DafA7fD09579fb1F	]=	6924617266145840000	;
commitments[	0xA15237eDaB4F2Fd05E1448CD6F65fDCD429fAaEb	]=	68647147447052000	;
commitments[	0xA16b88747a43927cA176978ADC9D708A50BBc821	]=	1202626432358260000	;
commitments[	0xA17E5e8fC77DFeF26c082d82c609a964Df5CE61C	]=	4574470427905730000	;
commitments[	0xA2D25E54720848578f58A7559Fcb2cb931407582	]=	86768029054178900000	;
commitments[	0xA3148a9A0d9F9a012E14c8ED48D69645D5E637d1	]=	254431038912492000	;
commitments[	0xa33eD06a9002787EF8E232765Fe2EB50ac2668af	]=	217985368188879000	;
commitments[	0xa397b39E8A743cd387bE4748CC9156e3DcaF9668	]=	44946546754675400000	;
commitments[	0xA47A2D7f56e7C38E44De0dA8884807300af48E4c	]=	12932517882488400000	;
commitments[	0xa6364afB914792FE81E0810D5F471be172079F7b	]=	794293117599368	;
commitments[	0xa646CFa356bD5Fe4956519e89821c613161525Cf	]=	1185042640434950000	;
commitments[	0xA75AcDCdE9A2EE1C53449204e03b9CCBA3eed176	]=	44660382437307800000	;
commitments[	0xa8A6831E4Ba5B971bd837E6C400d9e8c494C6379	]=	405293017330297000	;
commitments[	0xA8f73A3CE7a771B1025B058f6288E35619E82052	]=	107626157750768000000	;
commitments[	0xa903736955d9bc8620Dee6541193CF0063D3522A	]=	50286421464623400000	;
commitments[	0xAa417e896F425D461090E9e82a2C5EbBDA06CA7d	]=	13214070850348300	;
commitments[	0xab50199F4D210d2B4d587C5eA1339523F686F036	]=	1207736219495070000	;
commitments[	0xAc3E99F3508C333b3ec7A276c7519A1ebf4D3B70	]=	16936176477837100	;
commitments[	0xaCd0695C4cC7e785CC03ac6C3a4D60FF01734E42	]=	337001141064272000	;
commitments[	0xae09757D71A513D0004d97145D72527cBD7c15bD	]=	1186418483733720000	;
commitments[	0xaE2b4FbE84B2C9B8005729881c87236c8B97B0c2	]=	4	;
commitments[	0xAE91a66e2dD5ac19668073cA77B8d9893fF9B12d	]=	1339745646463600000	;
commitments[	0xAeE5e15fea53b79b8EB9e09c3a13041Eeb0bf4fA	]=	4936104063587000000	;
commitments[	0xaFD0926dC8c114c516D63FB77c7E9270b584AA19	]=	8914977208244170	;
commitments[	0xAfdd9eDD7D0109584D309efBF0e50a32d7578066	]=	128839520756017000	;
commitments[	0xB0fc57d73A4C89fDDb9E9978cc8B6a279F686D62	]=	33540311527688700000	;
commitments[	0xb1acdA2954D5Bcdaf7aC0a3b2E127ceE079aa59f	]=	100	;
commitments[	0xB1b9b4bbe8a92d535F5Df2368e7Fd2ecFB3A1950	]=	25677304114882700	;
commitments[	0xb1e6E0787c04B0583De24e2314CBb9B253ECC52a	]=	24672502338806600000	;
commitments[	0xb2Cd07d3E5c14dDc4938dD226b701E8957d5301A	]=	56919734110924800	;
commitments[	0xB312469B7a34073a6aa0ad93d200c222884b72a5	]=	558441425701756000	;
commitments[	0xB31a839e3561d2c0ed331AB6b6f730401778bBaE	]=	204880165853700000	;
commitments[	0xB36D8FFd9D4E69bb19368F70C9e7Af9F2689801D	]=	2587378427097620000	;
commitments[	0xB3a0B64D3e430c0eF8453306EaD355dA51De5B4e	]=	9587480877667490	;
commitments[	0xB3ad9e2a80E791bA8c2B7DE9D24D6cC35f1750b1	]=	1655920749454420	;
commitments[	0xB3dEb4Ecd3db7b653cD3Cd79299E8B7958059F4E	]=	4960407257986100	;
commitments[	0xB3E438fF3146356d32650e691212c17412219E07	]=	33253948175327800000	;
commitments[	0xB3Fe35edd507273Ae9aBd51e992FA95736510371	]=	939299247156950000	;
commitments[	0xB490c3c41B2f6154dd1819DC671E6F5029d9cB29	]=	836308433970176000	;
commitments[	0xB5737284065fC91A793dc8B2Dd66434093B7df54	]=	199502128019353000	;
commitments[	0xB58b374f7bA55bc01A3c3805C3F641c138A02E23	]=	47946375467512300000	;
commitments[	0xB5c7a1B1b9191AD70C42F6E60486dB449a7A40F8	]=	5261829239781980	;
commitments[	0xB5ea7Ca2A224095363Ec32e38960E68f9012960A	]=	352137646474995000	;
commitments[	0xb65740ae659c864788C399eA81e513553E1faB63	]=	144000000000000000	;
commitments[	0xB7379687FB741D11a2E75b0fD006bA3b302FCaa4	]=	13912657031649200000	;
commitments[	0xb7b9Fa05AABF72084c6E4B566F5eEB737c71E896	]=	194275766797167000	;
commitments[	0xb89F49f2d1AAb93cc778eee3939a99388e5Fea33	]=	3242307769529370000	;
commitments[	0xb9927C7CA1582F1e88F4C5C6A5C94B442840f6E2	]=	36344176029512300	;
commitments[	0xB9A9E16e6729371051394913c9C0998734740856	]=	110889900000000000	;
commitments[	0xBA4db8D34cb41E818024c1eD1f9e39661Bc65DE2	]=	46016432576435600000	;
commitments[	0xba98744E5ad41c81E3a1bF984A308B519Ba2f640	]=	1750888910860800	;
commitments[	0xBb596963086f82b9D3AfC183132AA2d09A1D89d0	]=	232953434974229000	;
commitments[	0xBb7342316cdcfe800EB7b66282EE5CEA26Da769C	]=	23014258666682000	;
commitments[	0xBc041877218EFCC989095999f3e3a0Fb20b174af	]=	165572487183531000	;
commitments[	0xBc2eD5666f2F140D7C5f51cE5dBD4B1172a25b4c	]=	108323990934843000	;
commitments[	0xbCB323708BBb06E8fce1Ea19b7D105db851C6E8b	]=	36791219071125000	;
commitments[	0xBCE894A8093f566c9568eb7E14632DD1c8AAf9E6	]=	7	;
commitments[	0xBD65d5e522D095525d1633B8C6c9ca71621aF76C	]=	63075657179094300000	;
commitments[	0xbf8407c4112A5eD9d84C00Ebce8d0335ac6dD583	]=	1506081848473750	;
commitments[	0xC01b77100939244176f95BB9D6b823f8784f99c0	]=	2065796100000000000	;
commitments[	0xc02D376c47A7Ebc2ca1419734b7176dB19075104	]=	6770315858664050	;
commitments[	0xc08C66b5d4A9330Ab1338E80c79FA46A24a5ccED	]=	115375517709104000	;
commitments[	0xC21943E74E5AD7B85120F01b6Feef77910001C88	]=	1201351014940040000	;
commitments[	0xC2695E19Fc16636Ba2C0CA4B80D69F289D743Cc3	]=	45000000000000000	;
commitments[	0xC3A5E27c1331B071cacECC5b7dE1bBc53D57c17b	]=	300103883496240000	;
commitments[	0xc415aaCdc4F46A02F22D7aE2f95ec0CA8925a879	]=	653726100954975000	;
commitments[	0xc4e528383b99215234A29Ac1062c03c4f2790D0b	]=	87008302922733000	;
commitments[	0xc5CBC38949F2662762312798D35d6446d6EC9BaD	]=	32775197336549300	;
commitments[	0xC5f2662633f853b811F05221a27f83F93d759B1b	]=	42151869399162400000	;
commitments[	0xC62E773Ae471ccd64A9F9d723D4185C93eF6dc86	]=	330490800000000000	;
commitments[	0xC63dE8347D56FB91F0A312CD99A3e84E4Ea1f970	]=	13304251557195300	;
commitments[	0xC7bdA2c30b6ca8FeC603267d6CBd2aF02C0bFf10	]=	2316807911235840000	;
commitments[	0xC86482C1Bcd0676Ec06595647c6c729c22625d40	]=	2000000000000	;
commitments[	0xC92A22F395D0748C5341D1d2D5190Dab8D72DF81	]=	335717571532410000	;
commitments[	0xC9610A3A04Ce1711597442b69aD44120f7361b20	]=	375006600000000000	;
commitments[	0xCB249bdc3aF6D7E4B9BeA8311a3fdcd8c1424677	]=	801035657543430	;
commitments[	0xCb72E4e3F54FBD31E4C33e6CC2495A39AFb6b3C1	]=	73485134179267000	;
commitments[	0xCbB04227b44B1337130dB39c260034b9DA9624eC	]=	17244512177099200000	;
commitments[	0xcbCEA73543738e87Ce9214f928033dE2Ebe488Eb	]=	535852144553132	;
commitments[	0xcC171f98Ee6d68989fde584633840C32dD858d59	]=	138098051105130	;
commitments[	0xCc17E5Deccd57E0463259D370085f92649A2ff2F	]=	23287611558216100	;
commitments[	0xCDa946fC19EE4C1b21d6768Bf8606A72b0465b70	]=	836931224983489000	;
commitments[	0xcFf59eb76E59F2eCB296B98a87148a1A40E39D74	]=	11229356380258500	;
commitments[	0xcFFA39fe4E66665d0BA3Ef1032de526aFE1a53f4	]=	3372702131285090000	;
commitments[	0xD029F652Ed149c70F4A12fbf80449C7d596d6C40	]=	4100330275500810000	;
commitments[	0xD05C3681eC4dCF511C42Ba0117BD7c0D850a842d	]=	673227411698170000	;
commitments[	0xD07a78d05AaB24876A6d45A5F963B47FF57c0c7D	]=	103516753965407000	;
commitments[	0xD0975829258e8DAc1D09c710d8A32326355d07c0	]=	100000	;
commitments[	0xD0e1c4b102e3b51661Ed78b24e2029a948a4EdAB	]=	1474386429653340	;
commitments[	0xD0F51F41314e9d3Fc5514eef78327b28687C8b1A	]=	10681815976484300000	;
commitments[	0xd0FdCCB449c2Af865b57BceDb74167d755BBb892	]=	5029977658238410	;
commitments[	0xd11fF49134dF1d8b1a5C7c3ae76Dc402a4E62074	]=	119224129352218000000	;
commitments[	0xD32D20c029D7bc617c9f7056edea1DB2f2a765de	]=	7973110079232830	;
commitments[	0xd377900Ff8c8259cdD042DF2aBc32Ed798CF9703	]=	87713560035782600	;
commitments[	0xD3c0A90E0e420b90d55b20c620503D753BdD01d6	]=	2126670724580930000	;
commitments[	0xD3Fec9871C59407c15afa8586BF802Cbb76669a9	]=	4120882347175730000	;
commitments[	0xD4265CA666c34485eF8aB64C098892640bBC438E	]=	3045531193122930000	;
commitments[	0xd43a4Ebf940AfDFAd06793faC3d4B5718ceB5255	]=	4143753548883430000	;
commitments[	0xD50bbbEcF251D5de7AC9902b9Ac1534831f1E4C1	]=	4544651266160040000	;
commitments[	0xd56CC18456E745035f2F1184262B166a77ecE079	]=	25605829391796900	;
commitments[	0xd686Fac005D1dEa2c1dD749b382b6A3dD2c805e9	]=	61922669703507000	;
commitments[	0xd69689F344F4E9F9d67c60Baadcd2Bb770021C35	]=	5490657049098570000	;
commitments[	0xd7a6e2B1a3bB3a0F5711c6968984d541f57F14D6	]=	68085810000000000	;
commitments[	0xD811394282d83B2C5fb2CB7dEE74351c0EcA5A60	]=	28309743447106600	;
commitments[	0xd83dF3FD79342A4736E51792e7e393f16066739d	]=	4498479321516910000	;
commitments[	0xD956BaE338A43EcF812333E7174B7448B628933D	]=	2491625219416640000	;
commitments[	0xd9936ACf8b19d08033D1a8546e58dFef1233C200	]=	2552840538825960000	;
commitments[	0xDa53C990690AEa5d5cD49982D822CA35277086a6	]=	1058654148494890000	;
commitments[	0xdc4444515eACC2b0202024ffDf3D78EB8aD56824	]=	64622889715797300	;
commitments[	0xDE62efcED4281B78D915dB45e943296c36e7C8E9	]=	4531901949414860000	;
commitments[	0xDe728a01C5b04DA827C239D995D0991ABfB82759	]=	628461401398187	;
commitments[	0xdeA1c8e9E617A84506c9FDD2DC3548c45d06c009	]=	756108083277092000	;
commitments[	0xdf24b6Ca59fF1aD8dd5b92d71885B091bBc4776b	]=	22500000000000000	;
commitments[	0xdF5bea19aC6A16e016a372942949Bd58d6C2DA38	]=	15748568556678100	;
commitments[	0xe05014A71cE832ee7974CF11D12F7392C25c945c	]=	568467897159476000	;
commitments[	0xe0F290B5Ff29cCAa711D22AF60BB4271B804A11b	]=	115675461425338000	;
commitments[	0xE10C5f29087c0016975d5d14be8bBeEb46B2A04f	]=	10000000	;
commitments[	0xe11A7eb339D0954cdD7E4Cf3a089554D0AC3E525	]=	8028958438987580	;
commitments[	0xe14Ecba28832ebf9a708520c1cC0188cb7BDeC5b	]=	47130088636766200	;
commitments[	0xE15819315b4647969b98EB8321dc766c5756FdBA	]=	522473070312048000	;
commitments[	0xE186a665719AFd4a7f48557166B9f03A0E4b184b	]=	4378516107365200000	;
commitments[	0xE2f78Acb627885f1e054a118a42e13dA874457d2	]=	3135089354823810000	;
commitments[	0xE305185A31A89f92Ed107C62C230B61d802C5B70	]=	22054297350547000	;
commitments[	0xe3181b26F6d8Dc10F28993f19e7a5dA7bC727961	]=	552619559493691000	;
commitments[	0xe3f61a31422a3891D0Df4DAb4eaF4Ef527E2A11D	]=	124113786468736000	;
commitments[	0xe44B8BBDA6b2908542931e906B74Fe19D3C5f931	]=	5544622178848440	;
commitments[	0xe4B703e113e282B0A8a27DFCbd4AbcAC1dD98339	]=	101256254001006000000	;
commitments[	0xE5D6dFDa7B5121386b0F1A9c6951A788cc3b7572	]=	61098873196249600000	;
commitments[	0xE5dbD73F6Ff6d10962af0e9B151E0eb1281f90AC	]=	88620650340095800	;
commitments[	0xe6fFE6BB32c10cea972F106fcaA6773942536f39	]=	850000	;
commitments[	0xE7dE4aE9702cECb82A0CBA2795ca46b8ABBB92CF	]=	24268679822626000	;
commitments[	0xe8eEe49cf9dd84E5229a3012eCe0B9A931D9b80A	]=	23198895262627	;
commitments[	0xe90f8bE68E647338A10579486f8c4c25e9882843	]=	92092497815058200	;
commitments[	0xe93B6238FC983E3df7473BeACC4032BfDF231f59	]=	13160692201862700	;
commitments[	0xe94Cf31134Bac5179F9C020ead09C1356b6C7ADE	]=	4519933016413890000	;
commitments[	0xE984a6813907EA6df882878a76C0dCCdc1aADFa2	]=	2943432568550680000	;
commitments[	0xE98DA9bB7be39126A43e12e0A2798873C67F0F2e	]=	41652516372519000000	;
commitments[	0xea6559cdc65F6671CeA04C1C7C9887c9b52075ba	]=	4035470018891520	;
commitments[	0xEAdfAE154Ba415d569e34B1b09aa13C71Ef9A7E0	]=	1077311491304500000	;
commitments[	0xebC93DADe736e2dafDDd7c2B359EA4723c893411	]=	51306219652176900000	;
commitments[	0xEc0b8c14A8b8eD4F4b483bBEA06aC5a7f1Fb4731	]=	91558158554968900000	;
commitments[	0xEC9E69928199C3fF4153764115546080dfB33837	]=	5525521458203660000	;
commitments[	0xeD41378CCc4495181c1f64e8e914C94e9bdB2088	]=	48093328649563600000	;
commitments[	0xed64664d2C0ad7ee6BC5cBB32Bc9d5a7b88B1405	]=	56173712958039200000	;
commitments[	0xED72598EdF118B2F1F9aB1CccE5CE4F586e5464a	]=	2980521000000000	;
commitments[	0xeD751219Af1957705A8a5C11B17b85a920dB0FF1	]=	153797404370401000	;
commitments[	0xED886460de80ea463Ea5c526515eD131688B8e55	]=	13915693029069000	;
commitments[	0xED9d5aC848D3cf0ddb354CA117F13c4289ca9708	]=	4452938712637630	;
commitments[	0xedEE093004F168F80Ccf1197C0FC9301f7CEb6F8	]=	14400000000000000000	;
commitments[	0xeE2c8c5AFD0bE92F1359214474fa3C59eAbadcD5	]=	424282500000000000	;
commitments[	0xEf32B5Dc71B6Bd2555BEbEb47D98F59EB9a2821A	]=	1131360185533590000	;
commitments[	0xefbF5BfE8e3dBeC00A75502BB032A2449a8498a2	]=	86000000000000000000	;
commitments[	0xf02a98c0BE4D7dFe68DFd91dd0653a18B8C8f120	]=	63107964826740400000	;
commitments[	0xF05E2Cc9393f53C7b0bd9909027E52b47CcFd20E	]=	23000584273504900	;
commitments[	0xF21C9b9210f7aa071b573696AC5Ad2E904193B0B	]=	30776082490480000	;
commitments[	0xF24b7d4d2Db2222b129E27de2FAd34B47935D06e	]=	755135523562538000	;
commitments[	0xf26474b6b8FB9cFB3C6098d8DB0bb98a56AbdA85	]=	38372015952619700	;
commitments[	0xf2AB4c0840B2f4fF79eadB7dA75183cFbD09a522	]=	97394400000000000	;
commitments[	0xf2D9f7F3201D2ac317E7e92DD825545B5ec0deB5	]=	36928719174140000	;
commitments[	0xf319636F2d2f0C403F1C83c46e737076D1B31f35	]=	85429323684031200000	;
commitments[	0xf34F69465d57fb464575935a29dD8AF51E8Aa910	]=	10595950918499200000	;
commitments[	0xf4d930F20C277472Bac4d5091554DF4D07db1810	]=	88466160273623000000	;
commitments[	0xf4E48df5ccd7DB528B8df2D72E45bfDaa1Dd28A8	]=	128161953441673000000	;
commitments[	0xF4ecCFfC83Ee7B2E65b5190a97A28F2F86F5f064	]=	1070583292944560000	;
commitments[	0xf55b8a730F414E743a3AA4d3331Fc9ce3a6f95bc	]=	61454250000000000	;
commitments[	0xf5A51C639d7163a5c10FDd6764d4f38E5938567A	]=	11798837339660500000	;
commitments[	0xF781a751bbDCc7fA684d9bb37814Cf4431fff948	]=	19507934708738200	;
commitments[	0xf88d0B43E2b040F3327185Dc783F7f81F59a18a0	]=	1141798040106090000	;
commitments[	0xf8e4ff475B22fc5C1cFe3D9dd2Bb7A751517Ce9F	]=	99275076210000	;
commitments[	0xf8F4ba89cC448B573Cba53DBc36f698C7759E87b	]=	137161796822082	;
commitments[	0xF9d97cEEA230b27a9F954146189c527bF276BEA3	]=	3942811533052020000	;
commitments[	0xF9DEA11E136c4A287ac7c1922D7B522230A6bafe	]=	123747855941314000	;
commitments[	0xfA23C26f0681C430825a4F3636EC310A888467B7	]=	136568182614061	;
commitments[	0xFAdCbf1342DD43C71cCCA714024908e2BfA884B3	]=	6206875404487080	;
commitments[	0xFB0f04cD67483A5bc0CCaD1fBB53549ddaFB807e	]=	97656818388333000000	;
commitments[	0xfb0FAB6f5C3A4279C35Bb234f2EbC66C0A46ca58	]=	10000	;
commitments[	0xfBD12f0b3Dc7Be663198c874E3082c191541CE4e	]=	48946754312457600000	;
commitments[	0xfc2bDC8b4Cfa0e8aAE80B057699a68E58FB83d5b	]=	196423607519035000	;
commitments[	0xFc331E8431392627687A3f15ed40A8d89f8EE0a7	]=	2274743564015110	;
commitments[	0xfcC8f66F22BcE5b31d03844C7867131D25eC89c8	]=	62297866169010000	;
commitments[	0xFcce1A4261b2E1708802E096DcB8BBf509b2EEB9	]=	19825071669369700000	;
commitments[	0xfD2AaD333094e5fD67D86465dac5671586c37A3B	]=	10695679502061600000	;
commitments[	0xfE79e5bD4725F74110e5762CB13Bb3e1cdAba684	]=	102823561597865000	;
commitments[	0xFec7770B90A627Bd4f0bC95433a542f2193DCe32	]=	81662313076579700	;
commitments[	0xff0DCc336C885C20663ec0Be6eccE56AA1C19232	]=	702487430352062	;

commitmentsTotal=4476160403604100000000;

                   finalized = true;
        emit AuctionFinalized();

        startTime = _startTime;
        endTime = _endTime;
        totalTokens = _totalTokens;

        startPrice = _startPrice;
        minimumPrice = _minimumPrice;

        auctionToken = _auctionToken;
        payToken = _payToken;
        auctionTreasury = _treasury;
        admin = _admin;
        emit AuctionDeployed(
            _auctionToken, _payToken, _totalTokens, _startTime, _endTime, _startPrice, _minimumPrice, _admin, _treasury
            );
    }

    /**
     * @notice Calculates the average price of each token from all commitments.
     * @return Average token price.
     */
    function tokenPrice() public view returns (uint256) {
        return uint256(commitmentsTotal) * 1e18 / uint256(totalTokens);
    }

    /**
     * @notice Returns auction price in any time.
     * @return Fixed start price or minimum price if outside of auction time, otherwise calculated current price.
     */
    function priceFunction() public view returns (uint256) {
        if (block.timestamp <= startTime) {
            return startPrice;
        }
        if (block.timestamp >= endTime) {
            return minimumPrice;
        }

        uint256 _priceDiff = (block.timestamp - startTime) * (startPrice - minimumPrice) / (endTime - startTime);
        return startPrice - _priceDiff;
    }

    /**
     * @notice The current clearing price of the Dutch auction.
     * @return The bigger from tokenPrice and priceFunction.
     */
    function clearingPrice() public view returns (uint256) {
        /// @dev If auction successful, return tokenPrice
        uint256 _tokenPrice = tokenPrice();
        uint256 _currentPrice = priceFunction();
        return _tokenPrice > _currentPrice ? _tokenPrice : _currentPrice;
    }

    /**
     * @notice Calculates the pricedrop factor.
     * @return Value calculated from auction start and end price difference divided the auction duration.
     */
    function priceDrop() public view returns (uint256) {
        uint256 _numerator = startPrice - minimumPrice;
        uint256 _denominator = endTime - startTime;
        return _numerator / _denominator;
    }

    /**
     * @notice How many tokens the user is able to claim.
     * @param _user Auction participant address.
     * @return _claimerCommitment User commitments reduced by already claimed tokens.
     */
    function tokensClaimable(address _user) public view virtual returns (uint256 _claimerCommitment) {
        if (commitments[_user] == 0) {
            return 0;
        }
        _claimerCommitment = commitments[_user] * totalTokens / commitmentsTotal;
        _claimerCommitment -= claimed[_user];

        uint256 unclaimedTokens = IERC20(auctionToken).balanceOf(address(this));
        if (_claimerCommitment > unclaimedTokens) {
            _claimerCommitment = unclaimedTokens;
        }
    }

    /**
     * @notice Calculates the amount able to be committed during an auction.
     * @param _commitment Commitment user would like to make.
     * @return Amount allowed to commit.
     */
    function calculateCommitment(uint256 _commitment) public view returns (uint256) {
        uint256 _maxCommitment = uint256(totalTokens) * clearingPrice() / 1e18;
        if (commitmentsTotal + _commitment > _maxCommitment) {
            return _maxCommitment - commitmentsTotal;
        }
        return _commitment;
    }

    /**
     * @notice Checks if the auction is open.
     * @return True if current time is greater than startTime and less than endTime.
     */
    function isOpen() public view returns (bool) {
        return block.timestamp >= startTime && block.timestamp <= endTime;
    }

    /**
     * @notice Successful if tokens sold equals totalTokens.
     * @return True if tokenPrice is bigger or equal clearingPrice.
     */
    function auctionSuccessful() public view returns (bool) {
        return tokenPrice() >= clearingPrice();
    }

    /**
     * @notice Checks if the auction has ended.
     * @return True if auction is successful or time has ended.
     */
    function auctionEnded() public view returns (bool) {
        return auctionSuccessful() || block.timestamp > endTime;
    }

    /**
     * @return Returns true if 7 days have passed since the end of the auction
     */
    function finalizeTimeExpired() public view returns (bool) {
        return endTime + 7 days < block.timestamp;
    }

    /**
     * @notice Calculates total amount of tokens committed at current auction price.
     * @return Number of tokens committed.
     */
    function totalTokensCommitted() public view returns (uint256) {
        return uint256(commitmentsTotal) * 1e18 / clearingPrice();
    }

    function hasAdminRole(address _sender) public view returns (bool) {
        return _sender == admin;
    }

    // ===========================================
    //              USER FUNCTIONS
    // ===========================================

    /**
     * @notice Checks how much is user able to commit and processes that commitment.
     * @dev Users must approve contract prior to committing tokens to auction.
     * @param _from User ERC20 address.
     * @param _amount Amount of approved ERC20 tokens.
     */
    function commitTokens(address _from, uint256 _amount) public nonReentrant {
    
    }

    /**
     * @notice Updates commitment for this address and total commitment of the auction.
     * @param _addr Bidders address.
     * @param _commitment The amount to commit.
     */
    function _addCommitment(address _addr, uint256 _commitment) internal {
        require(block.timestamp >= startTime && block.timestamp <= endTime, "aution not live");
        require(!finalized, "auction finalized");
        commitments[_addr] += _commitment;
        commitmentsTotal += uint128(_commitment);
        emit AddedCommitment(_addr, _commitment);
    }

    //--------------------------------------------------------
    // Finalize Auction
    //--------------------------------------------------------

    /**
     * @notice Cancel Auction
     * @dev Admin can cancel the auction before it starts
     */
    function cancelAuction() public nonReentrant {
        require(hasAdminRole(msg.sender), "!admin");
        require(!finalized, "auction finalized");
        require(commitmentsTotal == 0, "auction completed");
        finalized = true;
        _finalizeFailedAuctionFund();
        emit AuctionCancelled();
    }

    /**
     * @notice Auction finishes successfully above the reserve.
     * @dev Transfer contract funds to initialized wallet.
     */
    function finalize() public nonReentrant {
        require(hasAdminRole(msg.sender), "!admin");
        require(!finalized, "auction finalized");
        _finalizeSuccessfulAuctionFund();
   
        finalized = true;
        emit AuctionFinalized();
    }

    function transferAdmin(address _newAdmin) public {
        require(hasAdminRole(msg.sender), "!admin");
        require(_newAdmin != address(0), "address = 0");
        admin = _newAdmin;
        emit NewAdminSet(_newAdmin);
    }

    function withdrawTokens(address _to) public nonReentrant {
       
            require(finalized, "!finalized");
            uint256 _claimableAmount = tokensClaimable(msg.sender);
            require(_claimableAmount > 0, "claimable = 0");
            claimed[msg.sender] = claimed[msg.sender] + _claimableAmount;
            _safeTransferToken(auctionToken, _to, _claimableAmount);
   
    }

    /**
     * @notice Admin can set start and end time through this function.
     * @param _startTime Auction start time.
     * @param _endTime Auction end time.
     */
    function setAuctionTime(uint256 _startTime, uint256 _endTime) external {
        require(hasAdminRole(msg.sender), "!admin");
       // require(_startTime < 10000000000, "unix timestamp in seconds");
       // require(_endTime < 10000000000, "unix timestamp in seconds");
       // require(_startTime >= block.timestamp, "start time < current time");
      //  require(_endTime > _startTime, "end time < start time");
       // require(commitmentsTotal == 0, "auction started");

        startTime = uint64(_startTime);
        endTime = uint64(_endTime);

        emit AuctionTimeUpdated(_startTime, _endTime);
    }

    /**
     * @notice Admin can set start and min price through this function.
     * @param _startPrice Auction start price.
     * @param _minimumPrice Auction minimum price.
     */
    function setAuctionPrice(uint256 _startPrice, uint256 _minimumPrice) external {
        require(hasAdminRole(msg.sender), "!admin");
        //require(_startPrice > _minimumPrice, "start price < minimum price");
       // require(_minimumPrice != 0, "minimum price = 0");
      //  require(commitmentsTotal == 0, "auction started");

        startPrice = uint128(_startPrice);
        minimumPrice = uint128(_minimumPrice);

        emit AuctionPriceUpdated(_startPrice, _minimumPrice);
    }

    /**
     * @notice Admin can set the auction treasury through this function.
     * @param _treasury Auction treasury is where funds will be sent.
     */
    function setAuctionTreasury(address _treasury) external {
        require(hasAdminRole(msg.sender), "!admin");
       // require(_treasury != address(0), "address = 0");
        auctionTreasury = _treasury;
        emit AuctionTreasuryUpdated(_treasury);
    }

    function _safeTransferToken(address _token, address _to, uint256 _amount) internal {
        IERC20(_token).safeTransfer(_to, _amount);
    }

    function _finalizeSuccessfulAuctionFund() internal virtual {
       // _safeTransferToken(payToken, auctionTreasury, commitmentsTotal);
    }

    function _finalizeFailedAuctionFund() internal virtual {
        _safeTransferToken(auctionToken, auctionTreasury, totalTokens);
    }

    // EVENTS
    /// @notice Event for all auction data. Emmited on deployment.
    event AuctionDeployed(
        address indexed _auctionToken,
        address indexed _payToken,
        uint256 _totalTokens,
        uint256 _startTime,
        uint256 _endTime,
        uint256 _startPrice,
        uint256 _minPrice,
        address _auctionAdmin,
        address _auctionTreasury
    );

    /// @notice Event for adding a commitment.
    event AddedCommitment(address _addr, uint256 _commitment);

    /// @notice Event for finalization of the auction.
    event AuctionFinalized();

    /// @notice Event for cancellation of the auction.
    event AuctionCancelled();

    /// @notice Event for updating new admin.
    event NewAdminSet(address _admin);

    event AuctionTimeUpdated(uint256 _startTime, uint256 _endTime);
    event AuctionPriceUpdated(uint256 _startPrice, uint256 _minPrice);
    event AuctionTreasuryUpdated(address indexed _treasury);
}

contract InflectoDutchAuction is DutchAuction {
    uint64 public constant MAX_VESTING_DURATION = 90 days;
    uint64 public vestingDuration;
    uint64 public vestingStart;

    constructor(
        address _auctionToken,
        address _payToken,
        uint128 _totalTokens,
        uint64 _startTime,
        uint64 _endTime,
        uint128 _startPrice,
        uint128 _minimumPrice,
        address _admin,
        address _treasury,
        uint64 _vestingDuration
    )
        DutchAuction(
            _auctionToken,
            _payToken,
            _totalTokens,
            _startTime,
            _endTime,
            _startPrice,
            _minimumPrice,
            _admin,
            _treasury
           
        )
    {
        require(_vestingDuration <= MAX_VESTING_DURATION, "> MAX_VESTING_DURATION");
        vestingDuration = _vestingDuration;
         vestingStart = uint64(block.timestamp);
            emit VestingStarted(vestingStart);
    }

    function tokensClaimableWithoutVesting(address _user) public view returns (uint256 _claimerCommitment) {
        if (commitments[_user] == 0) {
            return 0;
        }

        uint256 unclaimedTokens = IERC20(auctionToken).balanceOf(address(this));
        _claimerCommitment = commitments[_user] * totalTokens / commitmentsTotal;
        _claimerCommitment = _claimerCommitment - claimed[_user];
        if (_claimerCommitment > unclaimedTokens) {
            _claimerCommitment = unclaimedTokens;
        }
    }

    function tokensClaimable(address _user) public view override returns (uint256 _claimerCommitment) {
        if (vestingDuration == 0) {
            return tokensClaimableWithoutVesting(_user);
        }

        if (commitments[_user] == 0) {
            return 0;
        }

        if (vestingStart == 0) {
            return 0;
        }

        if (block.timestamp >= (vestingStart + vestingDuration)) {
            _claimerCommitment = commitments[_user] * totalTokens / commitmentsTotal;
        } else {
            uint256 _time = block.timestamp - vestingStart;
            _claimerCommitment = _time * commitments[_user] * totalTokens / commitmentsTotal / vestingDuration;
        }

        uint256 unclaimedTokens = IERC20(auctionToken).balanceOf(address(this));
        _claimerCommitment -= claimed[_user];
        if (_claimerCommitment > unclaimedTokens) {
            _claimerCommitment = unclaimedTokens;
        }
    }

    function _finalizeSuccessfulAuctionFund() internal override {
      //  _safeTransferToken(payToken, auctionTreasury, commitmentsTotal);
        if (vestingDuration > 0) {
            vestingStart = uint64(block.timestamp);
            emit VestingStarted(vestingStart);
        }
    }

    // EVENTS
    event VestingStarted(uint64 timestamp);
}