// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Boracle {
    uint public blaPrice;
    address public owner;
    uint public decimals;

    event UpdatePrice(uint blaPrice);

    constructor() {
        owner = msg.sender; 
        decimals = 18;
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "Only contract owner can call this function");
        _; 
    }

    function updatePrice(uint _price) public onlyOwner {
        require(_price > 0, "Invalid price"); 
        blaPrice = _price;
        emit UpdatePrice(blaPrice);
    }

    function transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0), "Invalid address");
        owner = newOwner;
    }
}