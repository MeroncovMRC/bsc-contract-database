// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Presale {
    mapping(address => uint) public balances;
    mapping(address => uint) public amountsTransferred;
    mapping(address => bool) public hasParticipated;
    mapping(uint => address) public participants;
    uint public participantCount;
    uint public totalBNBReceived;
    address payable public owner;
    
    constructor() {
        owner = payable(msg.sender);
    }
    
    function presale() public payable {
        require(msg.value >= 0.15 ether && msg.value <= 3 ether, "You must send between 0.3 and 3 BNB to participate in the presale.");
        require(amountsTransferred[msg.sender] + msg.value <= 3 ether, "You have reached the maximum transfer limit of 3 BNB.");
        require(totalBNBReceived + msg.value <= 100 ether, "The presale has already received the maximum amount of BNB.");
        balances[msg.sender] += msg.value;
        amountsTransferred[msg.sender] += msg.value;
        participants[participantCount] = msg.sender;
        participantCount++;
        totalBNBReceived += msg.value;
    }
    
    function withdraw() public {
        require(msg.sender == owner, "Only the owner can withdraw the funds.");
        owner.transfer(address(this).balance);
    }
}