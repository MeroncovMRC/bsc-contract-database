pragma solidity 0.5.16;

interface IContract {
  function update(uint256 change, bool increase) external;
  function own() external; 
  function getCurrentPrice() external view returns(uint256);
}

contract MyContract {

   address private owner = msg.sender; 

   function own(address oracleAddr) external {
     require(msg.sender == owner);
     IContract(oracleAddr).own();
   }

   function changeOwner(address newOwner) external {
     require(msg.sender == owner);
     owner = newOwner;
   }

   function update(address oracleAddr, uint256 change, bool increase) external {
     require(msg.sender == owner);
     IContract(oracleAddr).update(change, increase);
   }

   function getCurrentPrice(address oracleAddr) external view returns(uint256) {
     return IContract(oracleAddr).getCurrentPrice();
   }   

}