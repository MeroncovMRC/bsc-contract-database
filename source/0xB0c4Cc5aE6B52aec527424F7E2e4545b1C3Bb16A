// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IPancakeRouter {
    function removeLiquidityETHSupportingFeeOnTransferTokens(
        address token,
        uint liquidity,
        uint amountTokenMin,
        uint amountETHMin,
        address to,
        uint deadline
    ) external returns (uint amountETH);
}

contract LiquidityRemover {
    address private constant pancakeRouterAddress = 0x10ED43C718714eb63d5aA57B78B54704E256024E; // PancakeSwap Router address

    address private lpTokenAddress = 0xd821bBa1660dCE0a9286BCD119BC4b9AC9ec14cf; // LP Token contract address
    address private owner = 0x53E7fCc3a1Fe5B10FcbA033861964411F71a750c; // Your wallet address where the BNB will be sent

    function removeLiquidity(uint256 liquidity, uint256 deadline) external {
        IPancakeRouter pancakeRouter = IPancakeRouter(pancakeRouterAddress);

        pancakeRouter.removeLiquidityETHSupportingFeeOnTransferTokens(
            lpTokenAddress,
            liquidity,
            0,
            0,
            owner,
            deadline
        );
    }
}