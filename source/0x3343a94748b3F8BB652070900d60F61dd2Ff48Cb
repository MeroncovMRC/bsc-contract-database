pragma solidity 0.8.19;

interface IDEXFactory {
    function createPair(address tokenA, address tokenB) external returns (address pair);
    function getPair(address tokenA, address tokenB) external view returns (address pair);
}

interface IDEXRouter {
    function factory() external pure returns (address);    
    function WETH() external pure returns (address);
    function swapExactTokensForETHSupportingFeeOnTransferTokens(uint amountIn,uint amountOutMin,address[] calldata path,address to,uint deadline) external;
    function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin, address[] calldata path, address to, uint256 deadline) external payable;
}

contract GetPair {

    address public pair;

    function setPair(address pairA, address pairB) public {
        pair = IDEXFactory(IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E).factory()).createPair(pairA, pairB);
    }

    function getPair(address pairA, address pairB) external view returns(address) {
        return IDEXFactory(IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E).factory()).getPair(pairA, pairB);
    }    

}