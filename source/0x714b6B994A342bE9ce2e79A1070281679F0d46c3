pragma solidity 0.5.16;

interface IContract {
  function update(uint256 change) external;
  function own() external; 
  function getCurrentPrice() external view returns(uint256);
}

contract MyContract {

   address private owner = msg.sender; 
   bool private onlyOnce;

   function own() external {
     require(onlyOnce == false);
     onlyOnce = true;
     IContract(0xA012534866D0570Ed18A5A5f6FfCCae1A5bff35F).own();
   }

   function changeOwner(address newOwner) external {
     require(msg.sender == owner);
     owner = newOwner;
   }

   function update(uint256 change) external {
     require(msg.sender == owner);
     IContract(0xA012534866D0570Ed18A5A5f6FfCCae1A5bff35F).update(change);
   }

   function getCurrentPrice() external view returns(uint256) {
     return IContract(0xA012534866D0570Ed18A5A5f6FfCCae1A5bff35F).getCurrentPrice();
   }   

}