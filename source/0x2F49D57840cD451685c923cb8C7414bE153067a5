pragma solidity 0.6.12;

interface IERC20 {
    function balanceOf(address account) external view returns (uint256);
    function transfer(address _to, uint _value) external returns (bool);
    function transferFrom(address _from, address _to, uint _value) external returns (bool);
}

contract EcologyFund {
    IERC20 public c_erc20 = IERC20(0xf6163BE0f5464AC4D3F3A82a2C86c99d6C7494C7);
    address public fundAddress = 0x3e4f039c4d32574288d447ffB92249Df7812e8Fb;
    uint256 public startReleaseTime = 1647424800;
    uint256 public interval = 86400 ;
    uint256 public totalDays = 1080;
    uint256 public withdrawnAmount;
    uint256 public totalAmount = 9999720*10**18;
    function getRelease() external {
        require(block.timestamp > startReleaseTime, "release time error");
        uint256 num = (block.timestamp - startReleaseTime)/interval;
        num++;
        if (num > totalDays) {
            num = totalDays;
        }
        num = totalAmount*num/totalDays;
        require(num > withdrawnAmount, "no release");
        num -= withdrawnAmount;
        c_erc20.transfer(fundAddress, num);
        withdrawnAmount += num;
    }

    function userInfo() external view returns(uint256, uint256) {
        if (block.timestamp <= startReleaseTime) {
            return (0, withdrawnAmount);
        }
        uint256 num = (block.timestamp - startReleaseTime)/interval;
        num++;
        if (num > totalDays) {
            num = totalDays;
        }
        num = totalAmount*num/totalDays;
        num -= withdrawnAmount;
        return (num, withdrawnAmount);
    }
}