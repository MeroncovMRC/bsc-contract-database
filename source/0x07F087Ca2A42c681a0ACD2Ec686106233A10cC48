// Sources flattened with hardhat v2.10.1 https://hardhat.org

// File contracts/interfaces/MHIERC721.sol

pragma solidity ^0.8.9;

interface MHIERC721 {
  function transferFrom(
    address from,
    address to,
    uint256 tokenId
  ) external;

  function safeTransferFrom(
    address from,
    address to,
    uint256 tokenId
  ) external;

  function burn(uint256 tokenId) external;

  function burnFrom(address account, uint256 tokenId) external;

  function mintNftByRarity(address to, address rarity) external;

  function totalSupply() external view returns (uint256);

  function ownerOf(uint256 tokenId) external view returns (address);

  function getApproved(uint256 tokenId) external view returns (address);

  function isApprovedForAll(address owner, address operator) external view returns (bool);
}

// File contracts/utils/BatchNftTransfer.sol

// SPDX-License-Identifier: MIT
pragma solidity 0.8.9;

contract BatchNftTransfer {
  function _batchTransfer(
    address _contract,
    address _from,
    address _to,
    uint256[] memory _tokenIds
  ) public {
    for (uint256 i = 0; i < _tokenIds.length; i++) {
      MHIERC721(_contract).safeTransferFrom(_from, _to, _tokenIds[i]);
    }
  }
}