// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MoneyStorage {
    address payable public owner;

    constructor() {
        owner = payable(msg.sender);
    }
    
    receive() external payable {
        // This function allows the contract to receive funds
    }
    
    function withdraw(address payable recipient) external onlyOwner {
        uint256 balance = address(this).balance;
        require(balance > 0, "No balance to withdraw");
        
        recipient.transfer(balance);
    }
    
    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can call this function");
        _;
    }
}