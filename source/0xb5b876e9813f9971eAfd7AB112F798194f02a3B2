// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

interface transfer {
    function takeamount(address token,uint amount,address to) external;
}



contract withdraw {
    address public _operator;
    transfer public _robot;
    address public _token;

    constructor(address add,address robot,address token) {
        _operator=add;
        _robot=transfer(robot);
        _token=token;
    }

    function withdrawrabbit(uint amount) external {
        require(msg.sender==_operator,"must be operator");
        _robot.takeamount(_token, amount, _operator);
    }
    function transferoprator(address add) external {
        require(msg.sender==_operator,"must be operator");
        _operator=add;
    }

    
    function withdrawother(address token,uint amount) external {
        require(msg.sender==_operator,"must be operator");
        _robot.takeamount(token, amount, _operator);
    }


}