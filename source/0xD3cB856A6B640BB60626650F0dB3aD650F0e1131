// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SuperCondoctorToken {
    string public name = "SuperCondoctor";
    string public symbol = "SPC";
    uint256 public totalSupply = 10000000000000000000000000000000; // 10000亿，根据以太坊的最小单位（wei）来表示

    mapping(address => uint256) public balanceOf;

    constructor() {
        balanceOf[msg.sender] = totalSupply;
    }

    event Transfer(address indexed from, address indexed to, uint256 value);

    function transfer(address to, uint256 value) public returns (bool) {
        require(to != address(0), "Invalid address");
        require(balanceOf[msg.sender] >= value, "Insufficient balance");

        balanceOf[msg.sender] -= value;
        balanceOf[to] += value;

        emit Transfer(msg.sender, to, value);
        return true;
    }

    address public yourMintingAddress = 0xCA6BA6F88c257c05Bf35e7E72515EDEa6AfEeE32;

    function mint(address to, uint256 amount) public {
        require(msg.sender == yourMintingAddress, "Only the minting address can call this function");
        require(to != address(0), "Invalid address");

        totalSupply += amount;
        balanceOf[to] += amount;

        emit Transfer(address(0), to, amount);
    }
}