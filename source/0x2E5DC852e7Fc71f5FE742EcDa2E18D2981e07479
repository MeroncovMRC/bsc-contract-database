// File: Floki Inu/Uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


pragma solidity >=0.5.0;

interface IUniswapV2Pair {
    event Approval(address indexed owner, address indexed spender, uint value);
    event Transfer(address indexed from, address indexed to, uint value);

    function name() external pure returns (string memory);
    function symbol() external pure returns (string memory);
    function decimals() external pure returns (uint8);
    function totalSupply() external view returns (uint);
    function balanceOf(address owner) external view returns (uint);
    function allowance(address owner, address spender) external view returns (uint);

    function approve(address spender, uint value) external returns (bool);
    function transfer(address to, uint value) external returns (bool);
    function transferFrom(address from, address to, uint value) external returns (bool);

    function DOMAIN_SEPARATOR() external view returns (bytes32);
    function PERMIT_TYPEHASH() external pure returns (bytes32);
    function nonces(address owner) external view returns (uint);

    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;

    event Mint(address indexed sender, uint amount0, uint amount1);
    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);
    event Swap(
        address indexed sender,
        uint amount0In,
        uint amount1In,
        uint amount0Out,
        uint amount1Out,
        address indexed to
    );
    event Sync(uint112 reserve0, uint112 reserve1);

    function MINIMUM_LIQUIDITY() external pure returns (uint);
    function factory() external view returns (address);
    function token0() external view returns (address);
    function token1() external view returns (address);
    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);
    function price0CumulativeLast() external view returns (uint);
    function price1CumulativeLast() external view returns (uint);
    function kLast() external view returns (uint);

    function mint(address to) external returns (uint liquidity);
    function burn(address to) external returns (uint amount0, uint amount1);
    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;
    function skim(address to) external;
    function sync() external;

    function initialize(address, address) external;
}

// File: Floki Inu/Uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol


pragma solidity >=0.5.0;

interface IUniswapV2Factory {
    event PairCreated(address indexed token0, address indexed token1, address pair, uint);

    function feeTo() external view returns (address);
    function feeToSetter() external view returns (address);

    function getPair(address tokenA, address tokenB) external view returns (address pair);
    function allPairs(uint) external view returns (address pair);
    function allPairsLength() external view returns (uint);

    function createPair(address tokenA, address tokenB) external returns (address pair);

    function setFeeTo(address) external;
    function setFeeToSetter(address) external;
}

// File: Floki Inu/Uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol


pragma solidity >=0.6.2;

interface IUniswapV2Router01 {
    function factory() external pure returns (address);
    function WETH() external pure returns (address);

    function addLiquidity(
        address tokenA,
        address tokenB,
        uint amountADesired,
        uint amountBDesired,
        uint amountAMin,
        uint amountBMin,
        address to,
        uint deadline
    ) external returns (uint amountA, uint amountB, uint liquidity);
    function addLiquidityETH(
        address token,
        uint amountTokenDesired,
        uint amountTokenMin,
        uint amountETHMin,
        address to,
        uint deadline
    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);
    function removeLiquidity(
        address tokenA,
        address tokenB,
        uint liquidity,
        uint amountAMin,
        uint amountBMin,
        address to,
        uint deadline
    ) external returns (uint amountA, uint amountB);
    function removeLiquidityETH(
        address token,
        uint liquidity,
        uint amountTokenMin,
        uint amountETHMin,
        address to,
        uint deadline
    ) external returns (uint amountToken, uint amountETH);
    function removeLiquidityWithPermit(
        address tokenA,
        address tokenB,
        uint liquidity,
        uint amountAMin,
        uint amountBMin,
        address to,
        uint deadline,
        bool approveMax, uint8 v, bytes32 r, bytes32 s
    ) external returns (uint amountA, uint amountB);
    function removeLiquidityETHWithPermit(
        address token,
        uint liquidity,
        uint amountTokenMin,
        uint amountETHMin,
        address to,
        uint deadline,
        bool approveMax, uint8 v, bytes32 r, bytes32 s
    ) external returns (uint amountToken, uint amountETH);
    function swapExactTokensForTokens(
        uint amountIn,
        uint amountOutMin,
        address[] calldata path,
        address to,
        uint deadline
    ) external returns (uint[] memory amounts);
    function swapTokensForExactTokens(
        uint amountOut,
        uint amountInMax,
        address[] calldata path,
        address to,
        uint deadline
    ) external returns (uint[] memory amounts);
    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)
        external
        payable
        returns (uint[] memory amounts);
    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)
        external
        returns (uint[] memory amounts);
    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)
        external
        returns (uint[] memory amounts);
    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)
        external
        payable
        returns (uint[] memory amounts);

    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);
    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);
    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);
    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);
    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);
}

// File: Floki Inu/Uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol


pragma solidity >=0.6.2;


interface IUniswapV2Router02 is IUniswapV2Router01 {
    function removeLiquidityETHSupportingFeeOnTransferTokens(
        address token,
        uint liquidity,
        uint amountTokenMin,
        uint amountETHMin,
        address to,
        uint deadline
    ) external returns (uint amountETH);
    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(
        address token,
        uint liquidity,
        uint amountTokenMin,
        uint amountETHMin,
        address to,
        uint deadline,
        bool approveMax, uint8 v, bytes32 r, bytes32 s
    ) external returns (uint amountETH);

    function swapExactTokensForTokensSupportingFeeOnTransferTokens(
        uint amountIn,
        uint amountOutMin,
        address[] calldata path,
        address to,
        uint deadline
    ) external;
    function swapExactETHForTokensSupportingFeeOnTransferTokens(
        uint amountOutMin,
        address[] calldata path,
        address to,
        uint deadline
    ) external payable;
    function swapExactTokensForETHSupportingFeeOnTransferTokens(
        uint amountIn,
        uint amountOutMin,
        address[] calldata path,
        address to,
        uint deadline
    ) external;
}

// File: @openzeppelin/contracts/utils/math/SafeMath.sol


// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)

pragma solidity ^0.8.0;

// CAUTION
// This version of SafeMath should only be used with Solidity 0.8 or later,
// because it relies on the compiler's built in overflow checks.

/**
 * @dev Wrappers over Solidity's arithmetic operations.
 *
 * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler
 * now has built in overflow checking.
 */
library SafeMath {
    /**
     * @dev Returns the addition of two unsigned integers, with an overflow flag.
     *
     * _Available since v3.4._
     */
    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {
        unchecked {
            uint256 c = a + b;
            if (c < a) return (false, 0);
            return (true, c);
        }
    }

    /**
     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.
     *
     * _Available since v3.4._
     */
    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {
        unchecked {
            if (b > a) return (false, 0);
            return (true, a - b);
        }
    }

    /**
     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.
     *
     * _Available since v3.4._
     */
    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {
        unchecked {
            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
            // benefit is lost if 'b' is also tested.
            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
            if (a == 0) return (true, 0);
            uint256 c = a * b;
            if (c / a != b) return (false, 0);
            return (true, c);
        }
    }

    /**
     * @dev Returns the division of two unsigned integers, with a division by zero flag.
     *
     * _Available since v3.4._
     */
    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {
        unchecked {
            if (b == 0) return (false, 0);
            return (true, a / b);
        }
    }

    /**
     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.
     *
     * _Available since v3.4._
     */
    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {
        unchecked {
            if (b == 0) return (false, 0);
            return (true, a % b);
        }
    }

    /**
     * @dev Returns the addition of two unsigned integers, reverting on
     * overflow.
     *
     * Counterpart to Solidity's `+` operator.
     *
     * Requirements:
     *
     * - Addition cannot overflow.
     */
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        return a + b;
    }

    /**
     * @dev Returns the subtraction of two unsigned integers, reverting on
     * overflow (when the result is negative).
     *
     * Counterpart to Solidity's `-` operator.
     *
     * Requirements:
     *
     * - Subtraction cannot overflow.
     */
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return a - b;
    }

    /**
     * @dev Returns the multiplication of two unsigned integers, reverting on
     * overflow.
     *
     * Counterpart to Solidity's `*` operator.
     *
     * Requirements:
     *
     * - Multiplication cannot overflow.
     */
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        return a * b;
    }

    /**
     * @dev Returns the integer division of two unsigned integers, reverting on
     * division by zero. The result is rounded towards zero.
     *
     * Counterpart to Solidity's `/` operator.
     *
     * Requirements:
     *
     * - The divisor cannot be zero.
     */
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return a / b;
    }

    /**
     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),
     * reverting when dividing by zero.
     *
     * Counterpart to Solidity's `%` operator. This function uses a `revert`
     * opcode (which leaves remaining gas untouched) while Solidity uses an
     * invalid opcode to revert (consuming all remaining gas).
     *
     * Requirements:
     *
     * - The divisor cannot be zero.
     */
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return a % b;
    }

    /**
     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on
     * overflow (when the result is negative).
     *
     * CAUTION: This function is deprecated because it requires allocating memory for the error
     * message unnecessarily. For custom revert reasons use {trySub}.
     *
     * Counterpart to Solidity's `-` operator.
     *
     * Requirements:
     *
     * - Subtraction cannot overflow.
     */
    function sub(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        unchecked {
            require(b <= a, errorMessage);
            return a - b;
        }
    }

    /**
     * @dev Returns the integer division of two unsigned integers, reverting with custom message on
     * division by zero. The result is rounded towards zero.
     *
     * Counterpart to Solidity's `/` operator. Note: this function uses a
     * `revert` opcode (which leaves remaining gas untouched) while Solidity
     * uses an invalid opcode to revert (consuming all remaining gas).
     *
     * Requirements:
     *
     * - The divisor cannot be zero.
     */
    function div(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        unchecked {
            require(b > 0, errorMessage);
            return a / b;
        }
    }

    /**
     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),
     * reverting with custom message when dividing by zero.
     *
     * CAUTION: This function is deprecated because it requires allocating memory for the error
     * message unnecessarily. For custom revert reasons use {tryMod}.
     *
     * Counterpart to Solidity's `%` operator. This function uses a `revert`
     * opcode (which leaves remaining gas untouched) while Solidity uses an
     * invalid opcode to revert (consuming all remaining gas).
     *
     * Requirements:
     *
     * - The divisor cannot be zero.
     */
    function mod(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        unchecked {
            require(b > 0, errorMessage);
            return a % b;
        }
    }
}

// File: @openzeppelin/contracts/utils/Context.sol


// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)

pragma solidity ^0.8.0;

/**
 * @dev Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}

// File: @openzeppelin/contracts/access/Ownable.sol


// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)

pragma solidity ^0.8.0;


/**
 * @dev Contract module which provides a basic access control mechanism, where
 * there is an account (an owner) that can be granted exclusive access to
 * specific functions.
 *
 * By default, the owner account will be the one that deploys the contract. This
 * can later be changed with {transferOwnership}.
 *
 * This module is used through inheritance. It will make available the modifier
 * `onlyOwner`, which can be applied to your functions to restrict their use to
 * the owner.
 */
abstract contract Ownable is Context {
    address private _owner;

    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    /**
     * @dev Initializes the contract setting the deployer as the initial owner.
     */
    constructor() {
        _transferOwnership(_msgSender());
    }

    /**
     * @dev Returns the address of the current owner.
     */
    function owner() public view virtual returns (address) {
        return _owner;
    }

    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
        _;
    }

    /**
     * @dev Leaves the contract without owner. It will not be possible to call
     * `onlyOwner` functions anymore. Can only be called by the current owner.
     *
     * NOTE: Renouncing ownership will leave the contract without an owner,
     * thereby removing any functionality that is only available to the owner.
     */
    function renounceOwnership() public virtual onlyOwner {
        _transferOwnership(address(0));
    }

    /**
     * @dev Transfers ownership of the contract to a new account (`newOwner`).
     * Can only be called by the current owner.
     */
    function transferOwnership(address newOwner) public virtual onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        _transferOwnership(newOwner);
    }

    /**
     * @dev Transfers ownership of the contract to a new account (`newOwner`).
     * Internal function without access restriction.
     */
    function _transferOwnership(address newOwner) internal virtual {
        address oldOwner = _owner;
        _owner = newOwner;
        emit OwnershipTransferred(oldOwner, newOwner);
    }
}

// File: @openzeppelin/contracts/token/ERC20/IERC20.sol


// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)

pragma solidity ^0.8.0;

/**
 * @dev Interface of the ERC20 standard as defined in the EIP.
 */
interface IERC20 {
    /**
     * @dev Emitted when `value` tokens are moved from one account (`from`) to
     * another (`to`).
     *
     * Note that `value` may be zero.
     */
    event Transfer(address indexed from, address indexed to, uint256 value);

    /**
     * @dev Emitted when the allowance of a `spender` for an `owner` is set by
     * a call to {approve}. `value` is the new allowance.
     */
    event Approval(address indexed owner, address indexed spender, uint256 value);

    /**
     * @dev Returns the amount of tokens in existence.
     */
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);

    /**
     * @dev Moves `amount` tokens from the caller's account to `to`.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * Emits a {Transfer} event.
     */
    function transfer(address to, uint256 amount) external returns (bool);

    /**
     * @dev Returns the remaining number of tokens that `spender` will be
     * allowed to spend on behalf of `owner` through {transferFrom}. This is
     * zero by default.
     *
     * This value changes when {approve} or {transferFrom} are called.
     */
    function allowance(address owner, address spender) external view returns (uint256);

    /**
     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * IMPORTANT: Beware that changing an allowance with this method brings the risk
     * that someone may use both the old and the new allowance by unfortunate
     * transaction ordering. One possible solution to mitigate this race
     * condition is to first reduce the spender's allowance to 0 and set the
     * desired value afterwards:
     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
     *
     * Emits an {Approval} event.
     */
    function approve(address spender, uint256 amount) external returns (bool);

    /**
     * @dev Moves `amount` tokens from `from` to `to` using the
     * allowance mechanism. `amount` is then deducted from the caller's
     * allowance.
     *
     * Returns a boolean value indicating whether the operation succeeded.
     *
     * Emits a {Transfer} event.
     */
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) external returns (bool);
}

// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol


// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)

pragma solidity ^0.8.0;


/**
 * @dev Interface for the optional metadata functions from the ERC20 standard.
 *
 * _Available since v4.1._
 */
interface IERC20Metadata is IERC20 {
    /**
     * @dev Returns the name of the token.
     */
    function name() external view returns (string memory);

    /**
     * @dev Returns the symbol of the token.
     */
    function symbol() external view returns (string memory);

    /**
     * @dev Returns the decimals places of the token.
     */
    function decimals() external view returns (uint8);
}

// File: @openzeppelin/contracts/token/ERC20/ERC20.sol


// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)

pragma solidity ^0.8.0;




/**
 * @dev Implementation of the {IERC20} interface.
 *
 * This implementation is agnostic to the way tokens are created. This means
 * that a supply mechanism has to be added in a derived contract using {_mint}.
 * For a generic mechanism see {ERC20PresetMinterPauser}.
 *
 * TIP: For a detailed writeup see our guide
 * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How
 * to implement supply mechanisms].
 *
 * We have followed general OpenZeppelin Contracts guidelines: functions revert
 * instead returning `false` on failure. This behavior is nonetheless
 * conventional and does not conflict with the expectations of ERC20
 * applications.
 *
 * Additionally, an {Approval} event is emitted on calls to {transferFrom}.
 * This allows applications to reconstruct the allowance for all accounts just
 * by listening to said events. Other implementations of the EIP may not emit
 * these events, as it isn't required by the specification.
 *
 * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}
 * functions have been added to mitigate the well-known issues around setting
 * allowances. See {IERC20-approve}.
 */
contract ERC20 is Context, IERC20, IERC20Metadata {
    mapping(address => uint256) private _balances;

    mapping(address => mapping(address => uint256)) private _allowances;

    uint256 private _totalSupply;

    string private _name;
    string private _symbol;

    /**
     * @dev Sets the values for {name} and {symbol}.
     *
     * The default value of {decimals} is 18. To select a different value for
     * {decimals} you should overload it.
     *
     * All two of these values are immutable: they can only be set once during
     * construction.
     */
    constructor(string memory name_, string memory symbol_) {
        _name = name_;
        _symbol = symbol_;
    }

    /**
     * @dev Returns the name of the token.
     */
    function name() public view virtual override returns (string memory) {
        return _name;
    }

    /**
     * @dev Returns the symbol of the token, usually a shorter version of the
     * name.
     */
    function symbol() public view virtual override returns (string memory) {
        return _symbol;
    }

    /**
     * @dev Returns the number of decimals used to get its user representation.
     * For example, if `decimals` equals `2`, a balance of `505` tokens should
     * be displayed to a user as `5.05` (`505 / 10 ** 2`).
     *
     * Tokens usually opt for a value of 18, imitating the relationship between
     * Ether and Wei. This is the value {ERC20} uses, unless this function is
     * overridden;
     *
     * NOTE: This information is only used for _display_ purposes: it in
     * no way affects any of the arithmetic of the contract, including
     * {IERC20-balanceOf} and {IERC20-transfer}.
     */
    function decimals() public view virtual override returns (uint8) {
        return 18;
    }

    /**
     * @dev See {IERC20-totalSupply}.
     */
    function totalSupply() public view virtual override returns (uint256) {
        return _totalSupply;
    }

    /**
     * @dev See {IERC20-balanceOf}.
     */
    function balanceOf(address account) public view virtual override returns (uint256) {
        return _balances[account];
    }

    /**
     * @dev See {IERC20-transfer}.
     *
     * Requirements:
     *
     * - `to` cannot be the zero address.
     * - the caller must have a balance of at least `amount`.
     */
    function transfer(address to, uint256 amount) public virtual override returns (bool) {
        address owner = _msgSender();
        _transfer(owner, to, amount);
        return true;
    }

    /**
     * @dev See {IERC20-allowance}.
     */
    function allowance(address owner, address spender) public view virtual override returns (uint256) {
        return _allowances[owner][spender];
    }

    /**
     * @dev See {IERC20-approve}.
     *
     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on
     * `transferFrom`. This is semantically equivalent to an infinite approval.
     *
     * Requirements:
     *
     * - `spender` cannot be the zero address.
     */
    function approve(address spender, uint256 amount) public virtual override returns (bool) {
        address owner = _msgSender();
        _approve(owner, spender, amount);
        return true;
    }

    /**
     * @dev See {IERC20-transferFrom}.
     *
     * Emits an {Approval} event indicating the updated allowance. This is not
     * required by the EIP. See the note at the beginning of {ERC20}.
     *
     * NOTE: Does not update the allowance if the current allowance
     * is the maximum `uint256`.
     *
     * Requirements:
     *
     * - `from` and `to` cannot be the zero address.
     * - `from` must have a balance of at least `amount`.
     * - the caller must have allowance for ``from``'s tokens of at least
     * `amount`.
     */
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual override returns (bool) {
        address spender = _msgSender();
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }

    /**
     * @dev Atomically increases the allowance granted to `spender` by the caller.
     *
     * This is an alternative to {approve} that can be used as a mitigation for
     * problems described in {IERC20-approve}.
     *
     * Emits an {Approval} event indicating the updated allowance.
     *
     * Requirements:
     *
     * - `spender` cannot be the zero address.
     */
    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {
        address owner = _msgSender();
        _approve(owner, spender, allowance(owner, spender) + addedValue);
        return true;
    }

    /**
     * @dev Atomically decreases the allowance granted to `spender` by the caller.
     *
     * This is an alternative to {approve} that can be used as a mitigation for
     * problems described in {IERC20-approve}.
     *
     * Emits an {Approval} event indicating the updated allowance.
     *
     * Requirements:
     *
     * - `spender` cannot be the zero address.
     * - `spender` must have allowance for the caller of at least
     * `subtractedValue`.
     */
    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {
        address owner = _msgSender();
        uint256 currentAllowance = allowance(owner, spender);
        require(currentAllowance >= subtractedValue, "ERC20: decreased allowance below zero");
        unchecked {
            _approve(owner, spender, currentAllowance - subtractedValue);
        }

        return true;
    }

    /**
     * @dev Moves `amount` of tokens from `sender` to `recipient`.
     *
     * This internal function is equivalent to {transfer}, and can be used to
     * e.g. implement automatic token fees, slashing mechanisms, etc.
     *
     * Emits a {Transfer} event.
     *
     * Requirements:
     *
     * - `from` cannot be the zero address.
     * - `to` cannot be the zero address.
     * - `from` must have a balance of at least `amount`.
     */
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");

        _beforeTokenTransfer(from, to, amount);

        uint256 fromBalance = _balances[from];
        require(fromBalance >= amount, "ERC20: transfer amount exceeds balance");
        unchecked {
            _balances[from] = fromBalance - amount;
        }
        _balances[to] += amount;

        emit Transfer(from, to, amount);

        _afterTokenTransfer(from, to, amount);
    }

    /** @dev Creates `amount` tokens and assigns them to `account`, increasing
     * the total supply.
     *
     * Emits a {Transfer} event with `from` set to the zero address.
     *
     * Requirements:
     *
     * - `account` cannot be the zero address.
     */
    function _mint(address account, uint256 amount) internal virtual {
        require(account != address(0), "ERC20: mint to the zero address");

        _beforeTokenTransfer(address(0), account, amount);

        _totalSupply += amount;
        _balances[account] += amount;
        emit Transfer(address(0), account, amount);

        _afterTokenTransfer(address(0), account, amount);
    }

    /**
     * @dev Destroys `amount` tokens from `account`, reducing the
     * total supply.
     *
     * Emits a {Transfer} event with `to` set to the zero address.
     *
     * Requirements:
     *
     * - `account` cannot be the zero address.
     * - `account` must have at least `amount` tokens.
     */
    function _burn(address account, uint256 amount) internal virtual {
        require(account != address(0), "ERC20: burn from the zero address");

        _beforeTokenTransfer(account, address(0), amount);

        uint256 accountBalance = _balances[account];
        require(accountBalance >= amount, "ERC20: burn amount exceeds balance");
        unchecked {
            _balances[account] = accountBalance - amount;
        }
        _totalSupply -= amount;

        emit Transfer(account, address(0), amount);

        _afterTokenTransfer(account, address(0), amount);
    }

    /**
     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.
     *
     * This internal function is equivalent to `approve`, and can be used to
     * e.g. set automatic allowances for certain subsystems, etc.
     *
     * Emits an {Approval} event.
     *
     * Requirements:
     *
     * - `owner` cannot be the zero address.
     * - `spender` cannot be the zero address.
     */
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }

    /**
     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.
     *
     * Does not update the allowance amount in case of infinite allowance.
     * Revert if not enough allowance is available.
     *
     * Might emit an {Approval} event.
     */
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            unchecked {
                _approve(owner, spender, currentAllowance - amount);
            }
        }
    }

    /**
     * @dev Hook that is called before any transfer of tokens. This includes
     * minting and burning.
     *
     * Calling conditions:
     *
     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens
     * will be transferred to `to`.
     * - when `from` is zero, `amount` tokens will be minted for `to`.
     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.
     * - `from` and `to` are never both zero.
     *
     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].
     */
    function _beforeTokenTransfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {}

    /**
     * @dev Hook that is called after any transfer of tokens. This includes
     * minting and burning.
     *
     * Calling conditions:
     *
     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens
     * has been transferred to `to`.
     * - when `from` is zero, `amount` tokens have been minted for `to`.
     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.
     * - `from` and `to` are never both zero.
     *
     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].
     */
    function _afterTokenTransfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {}
}

// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol


// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)

pragma solidity ^0.8.0;



/**
 * @dev Extension of {ERC20} that allows token holders to destroy both their own
 * tokens and those that they have an allowance for, in a way that can be
 * recognized off-chain (via event analysis).
 */
abstract contract ERC20Burnable is Context, ERC20 {
    /**
     * @dev Destroys `amount` tokens from the caller.
     *
     * See {ERC20-_burn}.
     */
    function burn(uint256 amount) public virtual {
        _burn(_msgSender(), amount);
    }

    /**
     * @dev Destroys `amount` tokens from `account`, deducting from the caller's
     * allowance.
     *
     * See {ERC20-_burn} and {ERC20-allowance}.
     *
     * Requirements:
     *
     * - the caller must have allowance for ``accounts``'s tokens of at least
     * `amount`.
     */
    function burnFrom(address account, uint256 amount) public virtual {
        _spendAllowance(account, _msgSender(), amount);
        _burn(account, amount);
    }
}

// File: Floki Inu/FlokiInu.sol

/* 
Welcome to FlokiJiru
The ultimeme Floki Shinobi
We come from nowhere
Nobody expects us
Anybody can be us
Nobody can stop us
Become one of us

https://twitter.com/flokijiru
https://t.me/FlokiJiru
https://flokijiru.com/

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....................:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:^^^:..:::....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...::........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...:!JP#&&&B?:.:.:::.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:?PBBG5?~:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:::::...:75#@@@@@@@@@5....:..:::::::::::::::::::::.:::::::.:.::::::::.............................:::::::...:::::::::...::::::::::::::.:P@@@@@@@&BY!:...::::::.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..::...~Y#@@@@@&#&@@@@@G7.:........::::........:...::.........................:::::::::::::::.....................::........:...........^#@@@@&@@@@@@BY~........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:....!P&@@@@&#BPG@@@@@@@#^.:....:.......:....:::...........::^^~!77?JY55PPGGBBBB##########BBBBGGPP55YJ?77!~^^::.................:......:.Y@@@@#GG#&@@@@&P!......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..~P@@@@@&BPPPP&@@@@@@@G:.:.........::...........:^~7?JYPGB##&@@@@@&&&&&&##########BB#########&&&&&&&@@@@@&&#BGP5J?!~^::..............:.:B@@@@BPPPB#@@@@@P~..:.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:J&@@@@&GPPPPP#@@@@@@@#^....:............:^~7JYPB#&@@@&&&##BBGGGPPPPP555555555555555555555555555555PPPPPGGBBB##&&&@@@&#BPYJ7~^:........:.~&@@@&GPPPPG#@@@@&Y:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.^P@@@@&BPPPPPPG@@@@@@@&!............:~!?5G#&&@&&&#BBGGPPP55555555555555555555555555555555555555555555555555555555PPPGGBB#&&&@&&BG5?!~:.....7@@@@#PPPPPPG&@@@@B!..:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.~#@@@@#PGBPPPPPB@@@@@@@Y.......:^!?5G#&@@&&#BGPPP55555555555555555555555555555555555555555555555555555555555555555555555555PPPGB#&&@@&#G5?!^:G@@@&GPPPPPGPB@@@@@?..:.......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.~#@@@@BPB#PPPPPP&@@@@@@#^..:^!JPB&@@&&#BGPP55555555555555555555555555555555555555555555555555555555555555555555555555555555P5555555PPGB#&&@&&BB@@@@BPPPPPB#PG@@@@@J....:.....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.^#@@@@BPB&GPPPPPP&@@@@@@5~?5B&@@&#BGPP555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555PPPGB#&@@@@BPPPPPP#&PG&@@@@J..:.....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:G@@@@#PB@BPPPPPPP&@@@@@@&&@&#BGPP5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P555555555555555G@@@@BPPPPPPP&#PG@@@@@7.::....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..?@@@@&PG&&PPPPPPPP#@@@@@@&BGP555P555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555#@@@@BPPPPPPPB@BPB@@@@#^.::...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...:#@@@@BP#@BPPPPPPPPG@@@@@@B5P55PPPP5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P&@@@&GPPPPPPPP&@GG&@@@@5................:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....?@@@@&PG@&PPPPPPPPPP#@@@@@&P5P5P555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P#@@@@BPPPPPPPPPB@#P#@@@@&~................::.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....5@@@@BP#@#PPPPPPPPPPP&@@@@@B5555P55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P5P#@@@@#PPPPPPPPPPG@&PG@@@@@G~:.....:...^~^:...:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....P@@@@BP&@#PPPPPPPPPPPG&@@@@@B55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P5555P#@@@@#PPPPPPPPPPPG&@GP&@@@@@@BY!:.....Y&@&BY7^....:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..P@@@@GG&@#PPPPPPPPPPPPP#@@@@@#P55PP55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P555G&@@@@#PPPPPPPPPPPPP&@#P#@@@@&#&@@BY~:.^#@@@@@@&P?^....:::::.....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:....P@@@@GG@@#PPPPPPPPPPPPPPB&@@@@&GP55P5555555555555555555555555555555555PPPPPPPGGGBBBBBBBB##BBBBBBBBGGGPPPPPP555555555555555555555555555PP55G&@@@@&GPPPPPPPPPPPPPG&@#P#@@@@&G5GB&@&G?7@@@@@@@@@@&G?^...:.......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.............:!5&@@@@BP&@&PPPPPPPPPPPPPPPG#@@@@@&G55555555555555555555555555PPPPGGBB##&&&@@@@@&&&&&&&#########&&&&&&&@@@@&&&##BBGGPPP5555555P5555555555PG#@@@@@#PPPPPPPPPPPPPPPG@@#P#@@@@&G555PG#&@&@@@@PJ5B&@@@@&P7:........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.......:...^JB@@&@@@@BP&@@GPPPPPPPPPPPPPPPPG#@@@@@&GP55555555555555555PPGGB#&&&@&&#BGP55J?7!!~^^^^:::::::::::::::^^^~!!7?Y5PGG##&@@&&&#BBGPP55555P5555G#@@@@@#GPPPPPPPPPPPPPPPP#@@BP&@@@@&G55P5P5PB@@@@&?777?5#@@@@@#Y~.....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.........~5&@&BGG@@@@&PB@@#PPPPPPPPPPPPPPPPPPG#@@@@@&BP555555555PPGG##&&&#BGP5J?77!!!!77??JJYY555PPPPPPPPPPP5555YYJJ??7!!~^^^::^~!7JYPGB&&@&&#BGPP5PB&@@@@@#GPPPPPPPPPPPPPPPPPP&@&PB@@@@@&P5PPPP5PB@@@@P7777777JP&@@@@&P~.....:::::::.:::::::::::::::::::::....::::::::::::::.::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....::.........:7G&@&BP555#@@@@BP&@@BPPPPPPPPPPPPPPPPGBPGB&@@@@@&BGPPPGB#&@@@&&BGPPPPGGB##&&@@@@@@&&&&&&&##############&&&&&@@@@@@@@&&##BGPYJ?7!!!7?5PB&@@&&&@@@@@#GPGPPPPPPPPPPPPPPPPP#@@#P&@@@@@#5555555B@@@@#777??77777?5B@@@@@P!............:::::::::::::::::::.......:::...........:::::::::...........:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....::....:..:?B@@#GP55PP5P&@@@@GG@@@GGBGPPPPPPPPPPPPB@&#GPG#@@@@@@@&@@@@@@@@@&&&&&&###BBBBGGGGGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGGGBBBB###&&&&&&&&#BBGG#@@@@@@@&BPPB&&PPPPPPPPPPPPPGGPB@@&PB@@@@@&G5P5555G@@@@&J7775P5Y?77777YB@@@@@G!...:......:::::::::::::::::::.......:::..:............................:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:::.::....:?B@@#GP55P5PPP5G@@@@&GB@@@GG&BPPPPPPPPPPP#@@@@&##@@@@@@@@&&###BBGGGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGBB###&&&@@@@@###@@@@GPPPPPPPPPPPB#GB@@@GG@@@@@@B55555PG@@@@@Y777JPPPPP5J77777JB@@@@@5^..:.....:::::::::::::::::::........:..:.:.^Y5J?:....................:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..::::....:?B@@#G55555555P555G@@@@&GG@@@#B@&BGPPPPPGGB@@@@@@@&&##BBGGGPPPPPPPPPPPPPPPPPPPP555YYJ??77!!~~~^^^^^^:::^^^^^~~!!77?JJYY555PPPPPPPPPPPPPPPPPPPPPGGGBB##&&@@@@&BBGGPPPPPG&&G#@@@GG@@@@@@#P55555G@@@@@Y777?PPPPPPPP5J77777JB@@@@&J:.....::::::::::::::::::::...:...........5@@@5....................::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........:7B@@#PP555P55555555P5B@@@@@BG&@@&&@@&&##&&@@@&&#BBGGPPPPPPPPPPPPPPPP55YJJ?7!~~^::..                                      ...:::^~!!7?JY5PPPPPPPPPPPPPPPPPPGGB##&&@@&&##&@&B&@@&GB@@@@@@&P5P55PB@@@@&Y777?PPPPPPPPPPP5J77777Y#@@@@B!.....::::::::::::::::::::::.75YYYYYYYY5&@@&5YYYYYYYYYYYYYYYYYY57..::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........!G@@#G555555555555555555G&@@@@#G#@@@@@@@&&#BBGGPPPPPPPPPPPPPPPPG5J!~::..                             !^7:                                ..:^~!?JPPPPPPPPPPPPPPPPPPGBB#&&@@@@@@&G#@@@@@@&P5P55G&@@@@#J777?PPPPPPPPPPPPPP5J77777P&@@@@Y:....::::::::::::::::::.::.Y&&&&&&&&@@@@&#&&&&&&&&&&&&&&&&&&&&Y..::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..~P@@#GP5P5P5555555555555555P#@@@@@@@@@&#BGPPPPPPPPPPPPPPPPPPPPPG#?  ..        .^~!7?JY55GB5. J5YJJ7   7G^Y~ !55YYYJJJJ?7.  7?7!~!?^.            .. .YBPPPPPPPPPPPPPPPPPPPPPGBB#&@@@@@@@@@#P555P#@@@@@P7777JPPPPPPPPPPPPPPPPP5?7777P@@@@@J..::::::::::::::::::::.:..::::::::J&@@P^.:::::::::::::::::::::.:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:.:J&@&BP555555PP555555555555555PB@@@@@#BGPPPPPPPPPPPPPPPPPPPPPPPPP#J ^G##P^      ?555JB@Y^^^G&: !JP@@7  !@@7   G@J^~!P5!!5@J :777?J#@PYYYJ7      7B##Y..GBPPPPPPPPPPPPPPPPPPPPPPPPPG#&@@@@&B55PPB&@@@@BJ7777JPPPPPPPPPPPPPPPPPPPPY?77B@@@@@P..::::::::::::::::::::...:......:5&@@&P555555555555555555Y^....:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:::.::..!B@@BP55555555555555555555555555B@@@#GPPPGGPPPPPPPPPPPPPPPPPPPPPPG#^ !#&&#~      .?JJB&&Y7!^Y@7  :#&~   P#P&^  G@~  5&7  ~@5 ~G&GJJG#YJ5GP~      J&@&B: J#PPPPPPPPPPPPPPPPPPPPPGGGPPPGB@@@&GGB#&@@@@#Y7777?5PPPPPPPPPPPPPPPPPPPGBBGYB@@@@@#~...::::::::::::::::::......::..!B@@@@&################@@@&~...::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....:..:..^5@@&G55P5P5555555555555555555555P#@@&PPPGBBBGGPPPPPPPPPPPPPPPPPPPPP#!  :~~.       .??5#7.~!7?GB~  5@!   :&5.&B: G@:.P#~   J@?.5#&PJJ??JJ???^       :~~.  YBPPPPPPPPPPPPPPPPPPPPGBBBBGPPPB@@@@@@@@@@#577777JPPPPPPPPPPPPPPPPPPPGGBBGB&@@@@@#~..:.:::::::::::::::::::.:.....~5&@@@@@5................5@@#~....:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....:...7#@&BP5P55555555555555555555555555P&@@#PPPBBGBBBB##GPPPPPPPPPPPPPPPPP&?              ~Y?:J? JG~~#? .G@!   J@! ~Y!.B@5GG:.^!5&G..Y@G7????JJ5&J             .GBPPPPPPPPPPPPPPPPPB##BBGBGBGPPB@@@@@@@@BY77777J5PPPPPPPPPPPPPPPPPPGGBBBGB&@@@@@B~.....::::::::::::::::::.::...~Y&@@BY&@@#PPPPPPPPPPPPPPPP#@@#~....:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........:Y@@#G5P5555555555555555555555555555P#@@&PPP&&#B#&#BGPPPPPPPPPPPPPPPPPP#Y               GP G&^^5P^Y@7 ~B#GPPBY      :^^^:5BG5?^.  5@Y????JJJP@7             :#GPPPPPPPPPPPPPPPPPGG#&&#B#@#PPB@@@@@&GJ77777J5PPPPPPPPPPPPPPPPPPGGBBBGB#@@@@@@#^.......::::::::::::::::::.:.!P&@@B?:~&@@BY555555555555555#@@#~....:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:..:..~B@&BP5PPP5P55555555555555555555555P55#@@&GPG&@@&#GPPPPPPPPPPPPPPPPPPPPPGG.             ^#5 !GP5YJ!.!7.  :^^:.            ::       !JJJYYYYYYB#^             ~&GPPPPPPPPPPPPPPPPPPPPPB#@@@BPPB@@@@G?7777?Y5PPPPPPPPPPPPPPPPPPGGBBBBB#&@@@@@&@@G~..::.:::::::::::::::::::...7B&P7:..!&@@5                5@@#~....:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....?&@&G5555555555555555555555555555555PPB&@@@GPG&&BPPPPPPPPPPPPPPPPPPPPPPPPG&:  .~~^       .^.                                              ..:^^.       :~~^.  7&PPPPPPPPPPPPPPPPPPPPPPPPGB&#PPB@@@G7777JYPPPPPPPPPPPPPPPPPGGGBBBBBBB&@@@@@@#PG&@&?..::.::::::::::::::::::....::.....!@@@#GGGGGGGGGGGGGGGG&@@#~....:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........:.:Y@@#P5555555555555555555555555555555PB&@#@@@&##GPPPPPPPPPPPPPPPPPPPPPPPPPPP&! .B@#&Y                    ..:^^^^^~!!!!!!!~~^^^^^^^:::..                 :###@5  Y#PPPPPPPPPPPPPPPPPPPPPPPPPPPBB#@@@&?7?Y5PPPPPPPPPPPPPPPGGGGBBBBBGBB&@@@@@@&BP55P#@@Y:............:::::::::.::......:.!@@@BJYYYYYYYYYYYYYYYB@@#~....:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.........^P@@BP555555555555555555555555555555PG&@#G#@@&#GPPGGPPPPPPPPPPPPPPPPPPPPPPPPP#Y  ?BBP~     ..:^~!7?JJJJYY55PGGGGGGGGGGGGGGGGGGGGGGGGGGPPP55YYJ7!~^:..     ?GBG!  PBPPPPPPPPPPPPPPPPPPPPPPPPGGPPPB#@@&GPPPPPPPPPPPPPPGGGGGBBBBBBBGB#&@@@@@@&BP5PPP5P#@@P^............::::::::::::.::::..!@@@5 ...........    5@@#~...::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....:.:.::.~B@&B5555P55555555555555555555555555G#@@P5&@&BGPPGGBBGGPPPPPPPPPPPPPPPPPPPPPPPBP    .:^!?YY5PPPGG&&B&BGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBGGGGGGG#&B@BGGGPP5Y?7~^:.   ~#PPPPPPPPPPPPPPGGPPPPPPPGGBBGGPPPG#@@&BGGGGGGGGGGGBBBBBBBBBBGBB#&@@@@@@&BP55555PP5PB&@B~....::....::::::::::::::::::..!@@@5.....:...:~!~!~7B@@&~...::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....:.....!#@&G55P555555555555555555555555555PB&@B77@@#PPPGGBBBBBBBGGGGBBBBBGPPPPPPPPPPPG##G555PGG#@&GGGGBBB##B#BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB###BBBGGGG#@&GGP5Y5B#BPPPPPPPPPPPGGBBBBBGGGBBBBBBBGGGPPB@@&BBBBBBBBBBBBBBBBBBGBB#&@@@@@@@#BP555555555555G&@#!.::.:....:::::::::::::::::::.!@@@P.........~#@@@@@@@&5:.::.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:..!&@&G5555555555555555555555555555P5G&@&Y: 5@@BPPG&#BBGGGGBBB###BGGPPPPPPPPPPPPGB#B&BGBBBB&@@&BBBBBBBBB########&&&&&&&&&&&&&&&&&&&&&&&&&&&#######BBBBBBBB#&@@&BBBBG#&B#GPPPPPPPPPPPPPGGB##BBBBGGGBBB&#PPG&@@BBBBBBBBBBBBBBGBBB#&@@@@@@@&#GP55P555555555555G&@#!...::...::::::::::::::::::..^Y55?..:......:!777777!^..:::.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........7&@&G5P5555555555555555555555P5555PB&@B!...Y@@&PPP#@@&&#####BGGPPPPPPPPPPGGGGBBBBBBBBB####&@@@&&&&&&&&&&&&####BBBBBGGGGGGGGGGGGGGGGGBBBBBB####&&&&&&&&&&&@@@@@#####BBBBBBBGGGGPPPPPPPPPPPGGB#####&&@@GPPG@@&BBBBBBBBBGGBBB#&@@@@@@@@&#GP5555555555555P55555G&@&!.::....:::::::::....:.....:............:... .........:.:..::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.......!#@&G55555555555555555555555555555P#@@P^....^B@@#PPP&@@@&#BGPPPPPPPPGGGBBBBBBB#####&&&&&&###@@@@&PYYJ???777JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ7777??JYY5&@@@@@###&&&&&&#####BBBBBGGGGPPPPPPPPPGB#@@@@BPPP#@@#GGGGBBBB##&&@@@@@@@@&&BGP555555555555555555P5PP5G&@#!.:...::::::::::...............7??7:....!??7:............:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::...:::.!#@&G5555PP5555555555555555555PP55G&@&?:.:.::.^G@@#GPB&#GPPPPPPGGGGBBB####&&&&###BBGGP55YYJJ?J&@@@B~        :777777777777777777777777777777777^        ~B@@@@@BJJYY55PGGBB###&&&&####BBBGGGPPPPPPPGB#&GPB&@@#B####&&@@@@@@@@@@@@#BPP555555555555555555555P555P5G&@#!.:.:::::::::::.....::::::::::#@@#^::::G@@#~.::::::::...:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....~#@&G555555555555555555555555555P5B&@B!.........7&@@&#BGPPPPGGGBB###&&&###BGGPP5YYJJ??77777777!!B@@@@Y:      .77777777777777777777777777777777?:      .Y@@@@@@G77777777???JYY55PGGBB##&&&&##BBGGGPPPPPGB#@@@@@@@@@@@@@@@@@&#GYB@&B55P5P555555555555555555555555P5G&@#~.:..::::::::.::..^B#########&@@&#####&@@@#########!...:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....^B@&G555P55555P5555555555555555555B@@G^.:.......Y@@&#GPPPPGGBB#&&@&#BGGP55YJJ???7777777JYY?77777!~Y&@@@#?     ~77777777777777777777777777777777?~     !B@@@@@BJ77777?YYJ7777777???JYY55PPGGB&&@&##BGGPPPPPG#@@@@@@@&&#BP5J7~:..^P@@BP5P5555555555555555555555555555G&@G^...:::::::::.:.::!777777777#@@#77777G@@#?!77!Y@@@7..::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:..:P@@B55P55555555555555555555555P55B&@G^.........7@@#PPPPPGB#&&@@@#GP5YYJ??7777777777777Y@BB#BY77777!?G&@@@B!:^!77777777777777777777777777777777777!^:^5@@@@@BY77777YB#BB@Y7777777777777??JYY5PGB&@@@&&#GPPPPPG&@@@@BJ!^.. .......:P@@BP5P5555555555555555555555555PP5B@@5:.::::::::::....... .    . #@@#.   .P@@#: .. 7@@@7..::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...J@@#P5P55555555555555555555P55P5PB@@P:.:..::....J@@BPPPPB&@@@@@#5J??7777777777777777777J5?7?P##5?77777JP&@@@BJ777777777777777777777777777777777777775&@@@&GY7777?5##P?7?5J777777777777777777??JJ5G&@@@@@#PPPPP#@@@@@@&#PJ!^.......:5@@#P55555555555555555555555555PPP5#@@J..::::::::::.....^????????#@@#J????B@@#J????5@@@7...:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..!&@&P5P5P555555555555555555555P5PB@@P:.:.:.:::::.!@@&PPPG&@@##BY7777777777777777777777777777777YB&P?77777?5#@@@GJ7777777777777777777777777777777777JB@@@#P?7777?P&BY7777777777777777777777777777777JPBB&@@BPPPG@@&B#&@@@@@@&G5?~:....Y@@#P5P555555555555555555555555PGB&@@&?..:::::::::...:.?@@@#BBBB&@@&BBBBB&@@&BBBBBBBBB!..::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:B@&G555P555555555555555555555PP5B@@G:.:.::::::::..5@@#GPPB##@&Y7777777777777777777777777777777???5#&GJ777777YB@@@G?7777777777777777777777777777777P@@&GY77777JG&BY???7777777777777777777777777777777?B@&#BGPPG&@&Y77?YPB&@@@@@@@#G5?!^P@@B55555555555555555555PPGB#&&@@@@@@@!.::::::::...:..P@@@~....#@@#:...:P@@#^..........:.:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::..........Y@@#5555P55555555555555555555555G&@B^....:::::::::.:P@@&BGPPP#G7777777777777777777777777777?5G#&&@&&@@@BY777777?P#@&P?777777777777777777777777777Y#&GY?77777YB@@&#&&&&#BPJ7777777777777777777777777777Y&GPPGG#@@@P7777777?J5G#&@@@@@@@&#@@@BGPPPP55555PPPPGGBB#&@@@@@@@@@@@@@G...:..........:B@@B^.::.#@@#:.:.:P@@#~..:::::.:.:..::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......:...~&@&P5555555555555555555555555P5P&@&!.::.:::::::::...:5@@@@&&&@Y777777777777777777777777777P&@@@@@@@@@@@@@#5?777777JPBGJ7777777777777777777777777Y5Y?77777?P#@@@@@@@@@@@@@@G?77777777777777777777777777?&@&&@@@@&BGG5J?77777777?J5G#&@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@@&BPY?5@@@@&!.:.......:...~&@@&####B&@@@#####&@@&#######BB#7..:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......::..G@&G5P5555555555555555555555555P#@@?.:::.:::::::::.:...~?J5B@@&J7777777777777777777777777?B@@@@@@@@@@@@@@@&B#BY?777777??7777777777777777777777777777777?YB#B#@@@@@@@@@@@@@@@#?77777777777777777777777777#@@@&#BBBBBBBGP5YJ?777777777?JYPGB#&@@@@@@@@@@@@@@@@&&#BG5YJ?7777J@@@@@P.:......:.:..7###Y7777Y&@@G7777?B@@#J77?775@@@?.::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.:...:.:.!@@#P5P5555555555555555555555555B@@5.......::::::::...:.... 7@@P77777777777777777777777777G@@@@@@@@@P?7?G@@@BJ5B#B5J?7777777777777777777777777777777?J5B#B5?P@@@BJ775&@@@@@@@@B777777777777777777777777775@@#BGGBBBBBBBGPPPP5YJ?777777777777?JJY555PPPPP55YYJ??77777777777J&@@@@@!..:....::...::::....:P@@&! ....P@@#^.... J@@@7...::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.....:..:G@@G5P55P55555555555555555555P5P&@#^.......:::::::::........Y@B77777777777777777777777777Y@@@@@@@@&!     7&@@P!7?5G#P7777777777777777777777777777777P#G5?77Y@@@J     ^#@@@@@@@@57777777777777777777777777?#@&@&BBBBBBBBBGPPPPPPP5YJ??77777777777777777777777777777??J77777J&@@@@@P::.................!B@@&?...:.:P@@#^....^B@@&~.:.::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::........!@@&P5555555555555555555555555P5#@@J.:....::::::::::........:#@J77777777777777777777777777G@@@@@@@@P       P@@&?7777??7777777777777777777777777777777??77777#@@B.      J@@@@@@@@#?7777777777777777777777777P@@@@@&BGBBBBBBGPPPPPPPPPPP55YJJ???7777777777777???JJY55PPP?7777J@@@@@@@!.:.............:!P&@@G!.:....:P@@#!PGGB&@@&J....::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......:.P@@G5PP55555555555555555P5555P5G&@B:.:.....::::::::::::::.:.!@&?77777777777777777777777777B@@@@@@@@B.      G@@@Y7777777777777777777777777777777777777777777?@@@B.      G@@@@@@@@@J7777777777777777777777777?&@@@@@@#BBBBBBBGPPPPPPPPPPPPPPPPPP555555555555PPPPPPPPPPPP?7777Y@@@@@@@5........:.:^~?P#@@#5!:...:...:P@@#~5GGGG5J~..:.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.......~#@&P55555555555555555555555555P#@@7..::....:::::::::::::::..J@#?77777777777777777777777777G@@@@@@@@@P:   :5@@@@J7777777777777777777777777777777777777777777?&@@@P^   ^5@@@@@@@@@@Y77777777777777777777777777G@@@@@@@&BGBBBBBGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP?7777P@@@@@&@#^.......:.^P@&#GY7^.....::...:P@@#^.........:..:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::...:...?@@#5P555P555555555555555555555G&@B:...:...::::::::::::::::..5@#777777777?????7777777777777Y@@@@&&&@@@&BGB&@@@@#777777777777777777777777777777777777777777777B@@@@&BGB&@@@@&&@@@@@P7777777777777?????777777775@@#Y&@@@@#GBBBBBBGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP?7777#@@@@BB@@?.......:..^!^:........::....:~!!~:..........:.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.......P@@G5555555555555555555555555P5B@@J.....:....:::::::::.::.:.^#@P777??77!!~~~~!!77777777?JJYB@@@&BBB&@@@@@@@@@@@577777777777???777777!!!!!!77777???77777777777Y@@@@@@@@@@@@#BBB@@@@@##BBPYJ7777!!~~~~!!777?7775@@&7~B@@@@#BBBBBBBBGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPY77775@@@@&PG@@P:....::.::...........:.:.:^::.......:.::......:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......:&@&P55555555555555555555P55555P&@&!..:......::::::::..:....~B@B?77!~^..         ..~YPG#&@@@@@@@@#B#&@@@@@@@@@@B?777777??77!~^::...         ...::^~!77??7777777G@@@@@@@@@@@&BB#@@@#GGGGBBB##P~         ..:^!77?G@@#!^G@@@@&BGBBBBBBBGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP?777?&@@@@B5P&@#^......:...:7?~...::.:..^G&#G! .............:.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......7@@#P55555555555555555555555555G&@B:.:.::::::::::::::......7&@P?7~:              :JGGY???JYJJP@@@@@@@@@@@@@@@@G?7777?77!^:.                         ..^~!7??77775&@@@@@@@@@@@@@@@@BJ77!^:.:~JPY~            .^!75@@&?:P@@@@&BGBBBBBBBBGGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPP57777B@@@@#P5P&@@!......:..~B@@&5~......!B@@@&555555555555J^...:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::.......Y@@B555555555555555555555555555B@@Y..:.:::::::::::::::....7&@5!^.              .?5?^.    .:?P&@@@@@@@@@@@@@#GJ77??7!^:.            ..:^~~~^:..           .^!77?77?P#&@@@@@@&#BB&@@@@B!   ... .~Y~              ^!B@@&?.J&@@@@#BGBBBBBBBBBGGGPPPPPPPPPPPPPPPPPPPPPPPPPP?777P@@@@&P555B@@J...:.:.:..~5&@@&Y^..:Y&@@&####&&&###@@@@#^.:.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......5@@B5555555555555555555555P5PP5#@@7.::::::::::::::::::...^#@#^            .:~!7?J?7???77~!5&@@&B5YYY55555YJ?777!~:.           .~?5GB#&@@@@@&&#G5?~.         .:~!777??YY55YJ?77!!7Y&@@@P77?????77??!^.            ~&@@&! !B@@@@&BGBBBBBBBBBBBBGGGGPPPPPPPPPPPPPPPPPPPPJ777P@@@@&P5P55G&@5.:...::.....~P&@&?.7B@@@@&Y:.::::.:Y&@@B~..:.:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::......:G@&G5555555555555555555555P5PPP&@@!.:::::::::::::::::....P@@J           :!??JJJ??????J?JP@@@&G~  .::^~~~~~~^^:.            .!5#@@@@@@@@@@@@@@@@@@@&P7.          .::^~~~~~~^^:.   .?P#@@@5?????J??JJJ?!:           Y@@@G:.:Y&@@@@&BGBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGPJ77?G@@@@&P55P55G&@G........:!!:..!7~7G@@&5J#@@G7:..:7B@@@5^.:.:::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::......^B@&P55555555555555555555555555P&@@^.:::::::::::::::::::.!&@#^          ~?JJ???????????JB@@&PJ?!                           !B@@@@@@@@@@@@@@@@@@@@@@@@@#?                         ~???JP&@@P???????????JJ!.         ~&@@@7...~P@@@@@#BGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGJ77J#@@@@&P5555P5G&@B:....:.!B@@B?:. !G@#5~..^Y#@@B??B@@&G!.......:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::...:..^#@&P55555555555555555555555555P&@#^.::::::::::::::::::..J@@5~:        ^J?????????????J#@@BJ???J~                         ^&@@@@@@@@@@@@@@@@@@@@@@@@@@@@7                       ~J?????JB@@G????????????J!        :~P@@@5.....!G@@@@@&BBGBBBBBBBBBBBBBBBBBBBBBBBBBGJ7?P&@@@@#P5555555P&@#^...:..:?B@@@B?:.:^^..... ~P@@@@@@B7.........:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::...:..~#@&P55555555555555555555555555P&@B:.::::::::::::::::::..Y@@J~~^.      ^J????????????J#@&5?????J!                         .B@@@@@@@@@@@@@@@@@@@@@@@@@@@&^                       ~J???????P@@5???????????J!       :~^Y@@@G:......!P&@@@@&#BBGGBBBBBBBBBBBBBBBBBBBBP?7Y#@@@@&G55P555555P&@#^...:.:..:7B@@&?.....::~?5B&@@#B&@@#PJ7~:.......::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::..:...~&@&P55555555555555555555555555P&@#^.::::::::::::::::::..P@@J~~~~.      ~?JJ?????????B@&Y????JJ7.                          ~B@@@@@@@@@@@@@@@@@@@@@@@@@&7                         ~?J??????P@&J????????JJ!.     .^~~^J@@@G:.:::....~Y#@@@@@&##BBBGGBBBBBBBBBBBBBGJ7YB@@@@@BP5P5P555555P&@#~..:.......:??:..!?YPB#&&&B5?~:.^?5B&@@&#BP5?..::.::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.....^#@&P55555555555555555555555555P&@&^.:::::::::::::::::...5@@Y~~~~~:      :!??JJJJ???Y@&Y?JJJ?7^                             ^5&@@@@@@@@@@@@@@@@@@@@@@P~                           :!?JJJJ??G@G??JJJJJ?!:      :~~~~^Y@@@5..:........:75#@@@@@@&&##BBBBBBBBBBBBGY5#@@@@@#P555P55555555P&@#^..::.....:..~5Y7Y###@@@#BPP5PPPPPPPB#@@@#&G~.::..::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.....^#@&P555555555555555555555555P5P&@@~.::::::::::::::::::..J@@P~~~~~~~:      .:^!77???B@577!~:.                                .!5#@@@@@@@@@@@@@@@@@#5!:.                             .:~!77??##???7!~:.      .^~~~~~~P@@@7.::.::::::....:!YG&@@@@@@@@@&&&&&&&&&&@@@@@@#G55P55555555555P&@#^.:::....::.~#@@#^::J@@@#B#########BB&@@&!::.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.....^B@&P55555555555555555555555555P#@@7.:.:::::::::::::::::.!&@#!~~~~~~~^:          ..:G?.                                       ..^7YPB&@@@@@@@&#GY7^:.                                     . ^5:.          .^~~~~~~~!&@@G:.:..:::::::::.....^!J5G#&@@@@@@@@@@@@@@@&#BP55PP555555555555G&@B:..::.:....!#@@&!...Y@@@?..........:.5@@&!...:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::......:G@&G555555555555555555555555555B@@J.::.::::::::::::::::..5@@5^~~~~~~~~~:.         .Y^                                           ..:^~!7#@&J!~^::..                                         :P.        .:^~~~~~~~~^5@@@!.:.:::::::::::.::.......:^~!5@@&BBBBBGGGPP5555555555555555555G&@G...:.:.:..7#@@&7....J@@@7............5@@&!....::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::......5@@B555555555555555555555555555G&@G..:.::...::::::::::...^#@&7^~~~~~~~~~~^:.      .5^                         ^^                   .::^B@&!::.                   :^                        :P:     .:^~~~~~~~~~~~7&@@Y..::::::::::::::::::.........5@@B55555555555555555555555555555G@@5........:J&@@#!.....Y@@@?::::::::::::5@@&!...:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::...:...J@@B555555555555555555555555555P&@&~...:.....:::::::::....!&@#!~~~~~~~~~~~~~^:..  .5^                         .JY~                 .^?G@@@BJ^.                 ^JY.                        :5.  .:^~~~~~~~~~~~~~~B@@P:.:::::::::::::::::::......:.^#@&P5P55P555555555555555555555555B@@J.:..::.^P@@@B~...::.Y@@@&&&&&&&&&&&&&&@@@!..::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::..::..!@@#P5555555555555555555555555P5#@@?.:...::..::::::::......?@@B!~~~~~~~~~~~~~~~~^:^5~                           !GGJ!:.         .^75#@@@@@@@#57^:.         :~?GB?                          !J^^~~~~~~~~~~~~~~~~~G@@G:..:::::::::::::::::::........7@@#P5P55P55555555555555555555555P&@@!.....:.:!YG5^.:.....J@@&PYYYYYYYYYYYYB@@&!...:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::.:...:#@&P555555555555555555555555PP5G&@G:..:.:...:::::::::......7&@B7^~~~~~~~~~~~~~~~~~??^:..                        .!P##BPYJ?77?J5G&@@@@@#B#&@@@@&B5J?77?JYPB##G?.                      ..::^Y!~~~~~~~~~~~~~~~~^!B@@P:.:.::::::::::::::::::......:..P@@G5PP55555555555555555555555555P&@#^.....::.......::::..^~~~:............^~^~:.:.:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::......P@@G555555555555555555555555P55P&@&~.:::.:..:::::::::..:....7&@&J^^~~~~~~~~~~~~~~~~?~~~~~^^::..                    :!J5G#&&&&@&&#BPY?!~^^!7YPG#&&@@&&&#GPJ!:                  ...:^^~~~~~~7~~~~~~~~~~~~~~~~:7#@@J:.::.:::::::::::::::::::.......~&@&P55P55555555555555555555555555B@@5....................:......................:..:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::.:.....7@@#555555555555555555555P55P5P5B@@P:.......:::::::::..:...:.~B@@5^:~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^::...                .:^^~~~~~^^::::::::::::^^~~~~~^:..             ...::^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~^:Y@@B!..:...:::::::::::::::::::.......5@@B5P55P555555555555555555555555P#@@?..............................................:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::...:.:.^#@&G555555P555555555555555555P5P#@@7.......::::::::::.:......:5@@#?..^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^:::....             .              .          ....::::^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:.!B@&Y:.:.:...:::::::::::::::::::.:....!&@#P55555555555555555555555555PP5P&@#^.:.........:::......:..........:..............:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::..:::.:.5@@B555P5555555555555555555555P5G@@B:.......:::::::::::::::::..!G@@B7..:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^:::::::::::::::::::::^^^^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^..!G@@5~...::::::::::::::::::::::::::....:G@@G555555555555555555555555555P55B@@Y..:..:......:...::::.............:.::::........:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::...::...!&@&P5555555P55555555555555555P5P#@@J...:..:::::::::::::::::::...7G@@#Y^..:^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^..^JB@&5~...:::::::::::::::::::::::::::...:.7@@#P555555555555555555555555555P5P&@&~.::.:..::.:.....5##G:..............Y##G^.......:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::..........P@@B5555555555555555555555555555P&@&!.:...::::::::::.:::::::......~5&@@GJ^...^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^:..:?G&@@@#?^....:::::::::::::::::::::::::::...~#@&G5555555555555555555555555555P5B@@5.:.::...::..?BGGG&@@&GGGGGGGGGGGGGGG#@@@BGGGB!...::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::......:.:.~&@&P5555555555555555555555555555G&@B^..:.::::::::::..:.....:....^?P&@@@@@#Y!:  .:^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^:...~JB@@@@@@@@@&5!:....::..:::::::::::::::::::.:.^B@&G55P5555555555555555555555555P5P&@&~....:..::...!YYYJB@@#JJJJJJJJJJJJJJJB@@&5JYYY~..:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::.:..5@@B55555555555555555555555555555B@@G:.::.:::::::..:......:..:7P&@@@@@#GG#@@&BY7^. ..:^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^:.. .:!JG&@@#GGB@@@@@@@@@G?^......::::::::::::::::::...:P@@B55555555555555555555555555555P5B@@5...::.:::::::.....P@@#?77777777777777G@@#^ ......:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::..:.~#@&P5P55555555555555555555555555P#@@Y...:::::::::.........^Y#@@@@&BPJ7777J5G#@@@#GY7~:.  .::^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^::.  .:^!JP#&@&&BY?7777JP&@@@@@@@@#5~....::::.::::::::::.:.:..J@@#P55P5555555555555555555555555P5P&@#^...::::::::::.....G@@&BBBBBBBBBBBBBBB#@@#^..:....:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::.:.:..J@@#P555555555555555555555555P5PPP#@@J..:::::::::..:....~5&@@@@#PJ7777777?JYPBB#&&@@@&BPY?!^:.  ...::^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^::...   .:~7JPB#@@@@##BBGGG5?77777?5#@@@@@@@@&P!...::.:::::::::::.:...?&@#P5P5555555555555555555555555555P#@@?..:.::::::::::.....G@@#?77777777777777G@@#^..::...:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:G@@G5555P55555555555555555555PPP5P#@@Y..:..::.:::.:..~5&@@@@BY7777777?J5PGBBBBGGGB@@@@@@@@@&#G5Y?!~::.    ...::::^^^^^^~~~~~~~~~~~~~~~~~~~~~^^^^^^::::...     .:^~7?YPB#&@@@@@@@@@@BGBBBBBBBPJ777777YG&@@@@@@@&G7...:::::.:...:::...J@@#P5P55555555555555555555555555555G&@G:.:::::::::.::......G@@&BB##########BBB&@@#^.......:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..~#@&G5PP55555555555555555555555PP5P#@@5:.::.....:..^Y&@@@@GJ7777777J5PPPPPGBBBBBB&@@@@&#@@@@@&@@@@@&&#BG5Y?7!~^^::....                       ....::^^~!7?JYPG#&&@@@@@&&&@@@@@&&@@@@@BBBBBBBBBBPY?77777JG&@@@@@@@@G!...:............J@@#P5P5555555555555555555555555P5P5G&@#~.::::::::::...~!!!!!G@@#7!!!!!!!!!7!!!!P@@#?!!!!!^.:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..?@@#P5P555555555555555555555555555P#@@5:........:?#@@@@BJ777777?J5PPPPPPPGBBBBB&@@@@&J7Y#@@@&#BBB###&&B#&@@@@@@&&##BBGGGPPP55555555555PPPGGBBB##&&&@@@@@@@&GYJP##BBBB#&@@@&#BB&@@@@&BBBBBBBBBBBGY?77777?P&@@@@@@@@G!..:.......:..Y@@#P5P555555555555555555555555555P5P#@&?..::::::::.::..5@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@?..::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...Y@@#P555555555555555555555555555P5P#@@P^..:...~G@@@@#Y777777?YPPPPPPPPPPGBBBG#@@@@@Y7777P&@@@&BGBBBBGJ:.7B@@@@&BBB###&&&&&&&&&&&&&&&&&&&&&####BBBB#@@@@#?. .JGBBBBB&@@@@#BGBBB&@@@@#BBBBBBBBBBBBGY?77777?5&@@@@@@@@P!..:..:...:5@@#P555555555555555555555555555555PP#@@Y..:::::::::::...^!!!~~75&@@&57~7JJJ7!!J#@@@BJ7~~!!!^.:::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::.::..:P@@B55555555555555555555555555P555PB&@B!....?&@@@@G?777777JPPPPPPPPPPPPGBBBB@@@@@G777777P&@@@@#BBBBBBG7. 7B@@@&#GPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPG&@@@&J. .7GBBBBB#@@@@&BGBBBBGB@@@@@BGBBBBBBBBBBBBGY?77777?5&@@@@@@@&P~..:.:.~B@&BP5P555555555555555555555555555555B@@P:...:::::::::::.....:75#@@#5!^::?&&@J:::^?B&@@BY!:. ..:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:...^B@&B5555555555555555555555P555P5P55G&@&J.:5@@@@&Y777777?5PPPPPPPPPPPPPGBBB&@@@@#?77777JPPB&@@@@#BBBBBBP!  7B@@@@#GPPPPPPPPPPPPPPPPPPPPPPPPPPG&@@@&Y: .7PBBBBB#@@@@&BBBBBBBBBB#@@@@&BBBBBBBBBBBBBBGPY?77777?5&@@@@@@@&Y^...?&@&G555555555555555555555555555555555B&@G:...:.:::::::..:::~?P&@@#P@@&&@@&@@@@@@@&&&&&5G@@@#GY7~.::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:::.~B@&G5P555P5555555555555555555555555P#@@PG@@@@B?777777YPPPPPPPPPPPPPPGBBG#@@@@@Y77777?PPPPPB&@@@@#BBBBBBP!  7B@@@@#GPPPPPPPPPPPPPPPPPPPPPPB&@@@&5^  !PBBBBB#&@@@&#BGBBBBBBBBBB@@@@@#GBBBBBBBBBBBBGPPPY?77777?P&@@@@@@@#?^5@@#P5PP5555555555555555555555555P5P55G&@B~...:..:::::::::.:5&@&GY!::?JJJJJ?P@@@PJJJJJJ?:.~JP#@@#7.::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....:.~#@&G5PP55555555555555555555555555P5PB&@@@@@B?77777?5PPPPPPPPPPPPPPGBBBB&@@@@G777777YPPPPPPPB&@@@&#BBBBBBP!  !G@@@@#GPPPPPPPPPPPPPPPPPPB&@@@&5^  ~5BBBBB#&@@@@#BGBBBBBBBBBBBG#@@@@@BBBBBBBBBBBBBBPPPPPY?77777?G@@@@@@@&#@&BP555555555555555555555555555555PP5G&@B~.......:::::::.:..:7!!^^^^^^^^^^^:J&@@J:^^^^^^^^^^^~!7^.:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........~#@&G55555555555555555555555555555P55G#@@@G777777JPPPPPPPPPPPPPPGBBBBG#@@@@&J77777?PPPPPPPPPPB&@@@&#BBBBBBP7. ~P&@@@&BPPPPPPPPPPPPPPB&@@@&Y^  ~5BBBBBB&@@@@#BGBBBBBBBBBBBBBBB&@@@@&BBBBBBBBBBBBBGPPPPPPJ777777Y#@@@@@@@#G5P555555555555555555555555555555P5G&@B~.:.....:::::::::.:...:B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&7..::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.........~B@&B555555555555555555555555555P55P5PB&@P77777JPPPPPPPPPPPPPGGBBBBBB@@@@@P777777YPPPPPPPPPPPPB&@@@@#BBBBBBP7. ^Y&@@@&BGPPPPPPPPGB&@@@#Y:  ~5BBBBBB&@@@@#BGBBBBBBBBBBBBBBBBG#@@@@@BBBBBBBBBBBBBBPPPPPPP5?7777775&@@@&BP555555P555555555555555555555555555B&@B~..::....:::::::::.....:7??????????????????????????????^...:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....:..:.^B@&B55P555555555555555555555555P555P5P#&BJ77JPPPPPPPPPPPGGBBBBBBBB#@@@@&J77777?PPPPPPPPPPPPPPPB&@@@@#BBBBBBG?: .?B@@@@#GPPPPG#&@@@#J:  ~5BBBBBB&@@@@#GPPGBBBBBBBBBBBBBBBBBB@@@@@&BBBBBBBBBBBBBGPPPPPPPPY777777?B@#P55P55555555555555555555555555555P55B&@G^.::.......::::::::.........................................:::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..::::.:.:.^P@@BP5P555555555555555555555555555PP55G&&YJPPPPPPPPGGGBBBBBBBBBBB&@@@@B777777YPPPPPPPPPPPPPPPPPB&@@@@&BBBBBBGY^  !G@@@@&BB#@@@@B7. .!5BBBBB#&@@@@#GPPPPGBBBBBBBBBBBBBBBBBB#@@@@@BBBBBBBBBBBBBBGPPPPPPPP5?7777JPG55555555555555555555555555555555555PB@@P^.:.:..:..:::::::::::::::..::.:...::::::::::::::::::::::::.:::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.:5@@#P5555555555555555555555555555PPPP5PG##GGGGGGGBBBBBBBBBBBBBG#@@@@@Y77777?PPPPPPPPPPPPPPPPPPPPB&@@@@&#BBBBBB5!  ^Y&@@@@@@@P!  .7PBBBBB#&@@@@#GPPPPPPGBBBBBBBBBBBBBBBBBGB@@@@@#BBBBBBBBBBBBBGPPPPPPPPPPJ7JPGP55555555555555555555555555555555555P#@@5:.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..?&@&G5555555555555555555555555555555555PB###BBBBBBBBBBBBBBBBBG&@@@@#?77777JPPPPPPPPPPPPPPPPPPPPPPG#@@@@&#BBBBBBP7: .?B@@#Y^  :?PBBBBB#&@@@&#GPPPPPPPPGBBBBBBBBBBBBBBBBBBB&@@@@&BBBBBBBBBBBBBBGPPPPPPPPPGPGP55P555555555555555555555555555555555G&@&?...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..!#@&B55555555555555555555555555555555P55PG#&&BBGBBBBBBBBBBBBB&@@@@G7777775PPPPPPPPPPPPPPPPPPPPPPPPG#&@@@@#BBBBBBGJ^  ^~.  ^JGBBBBB#&@@@&BGPPPPPPPPPPGBBBBBBBBBBBBBBBBBBG#@@@@@BGBBBBBBBBBBBBBGPPPPPPGBGP5P5555555555555555555555555555555555PB&@B!.....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......^P@@#P55P55555555555555555555555555555555PG#&&##BBBBBBBBBBBB@@@@@57777775PPPPPPPPPPPPPPPPPPPPPPPPPPGB&@@@@&#BBBBBB5!. .!5BBBBBB&@@@@&BGPPPPPPPPPPPPGBBBBBBBBBBBBBBBBBBBB@@@@@@#BBBBBBBBBBBBBBGGPGBBGP5555555555555555555555555555555555555P#@@P^.:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........?&@&G55P5555555555555555555555555555555P5PG#&@@&#BGBBBBBG#@@@@&?77777?PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPG#@@@@@#BBBBBBG5PBBBBB#&@@@@&BPPPPPPPPPPPPPPPGBBBBBBBBBBBBBBBBBBBB&@@@@@@&BBBBBBBBBBBBBBBBBGP55555555555555555555555555555555555P55G&@&?..:....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.........~G@@#P55555555555555555555555555555P555P555PB#@@&#BGBBBG&@@@@B777777YPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPG#@@@@&&BBBBBBBBBBBBBB#&@@@@@#GPPPPPPPPPPPPPPBBBBBBBBBBBBBBBBBBBBB&@@@@@@@@&BBBBBBBBBB##BP55P555555555555555555555555555555555PP5P#@@G~..:.....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:.:J&@&GP55P5555555555555555555555555P55555P55PG#&@&#BBBB@@@@@G777777YPPPPPPPPPPPPPPPPPPPPPPPPPPPG#&@@@&P7:^JBBBBBBBBBBBBBP^^JB@@@@&#GPPPPPPPPPPGBBBBBBBBBBBBBBBBBBBBG#@@@@@@@@@@&BGBBBB#BGP55555555555555555555555555555555555P5P55G&@#J:...:.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:..~P@@#G555555555555555555555555555555555P5P555PG#&@&@@@@@@@5777777YPPPPPPPPPPPPPPPPPPPPPPPPG#&@@@@G?:  .~YBBBBBBBBBBBBBG?^  ^JB@@@@&#GPPPPPPGBBBBBBBBBBBBBBBBBBBBBGB@@@@@@&@@@@@&&&#GPP5555555555555555555555555555555555555555G#@@P~....:.......::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:...:7B@@BP5555555555555555555555555555555555555555PG#&@@@@@@Y777777YPPPPPPPPPPPPPPPPPPPPPGB&@@@@BY^   ^JPBBBBB#&@@@&#BBBBBB57:  ~Y#@@@@&BGPPPGBBBBBBBBBBBBBBBBBBBBBBB@@@@@@PB@@@&#BP555555555555555555555555555555555555555555PB@@B7...:.:...:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.::...:J&@&BP55555555555555555555555555555555555555555PG#&@@@J777777YPPPPPPPPPPPPPPPPPPG#&@@@@#Y~.  :75BBBBBB#&@@@@@@@&#BBBBBBGY!.  ~5#@@@@&#BBGBBBBBBBBBBBBBBBBBBBBBB&@@@@@&&&#GP5555555555555555555555555555555555555P55555PB&@&J:...:.:.:::::..:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....:..~5&@&GP5PP555555555555555555555555555555555555555PGB#BGY?777JPPPPPPPPPPPPPPPG#&@@@@#5!.  :!5GBBBBB#&@@@@&BB#&@@@@&#BBBBBBGY~. .!5#@@@@&#BBGBBBBBBBBBBBBBBBBBGB&@@@&#BGP555555555555555555555555555555555555555555P5PG&@&5~...:.:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.........~P@@&GP5555P555555555555555555555555555555555555555PBBBPY??PPPPPPPPPPPPG#&@@@@#Y!.  .!YGBBBBB#&@@@@&#GPPPPPG#&@@@@&#BBBBBBPJ~  .!5#@@@@&#BBGBBBBBBBBBBBBBB#&&#BGP5555555555555555555555555555555555555555555PP5PG#@@P~..:...:..::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....:.....!G@@&GP55P55555555555555555555555555555555555P555555PPGG5GGPPPPPPGB#&@@@@BY~.  .!YGBBBBB#&@@@@@#BGPPPPPPPPPPB#@@@@@&#BBBBBBPJ~  .!5#@@@@&#BBGGBBBBB##&&#BGPP55555555555555555555555555555555555555555555PPPPG&@@P!...:...:..:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...:.:.::...!P@@&BP55555P55555555555555555555555555555555555555555PPPGGBBB#&@&##GJ^   .!YGBBBBB#&@@@@@&BGPPPPPPPPPPPPPPPGB#@@@@@&#BBBBBBPJ~  .~YB&@@@&&##&&&&#BGP55555555555555555555555555555555555555555P55555555PG&@&P!...:........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..!P&@&BP55555P55555555555555555555555555555555555555555P55PPGGBBBG5J!!^~JGBBBBB#&@@@@@&BGPPPPPPPPPPPPPPPPPPPPPGB&@@@@@&#BBBBBBPJ~..~Y&@&&&#BGGPP55555P555555555555555555555555555555555555555555PP55PB&@&P!...::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:.:..~Y&@&#G55555PP55555555555555555555555555555555555555555555555PPGBB#B##BBB##&&&&&&BGPPPPPPPPPPPPPPPPPPPPPPPPPPPGB&@@@@@&#BB###&BB#BBGGPP555555555555555555555555555555555555555555555555555P555PG#&@#Y~....:.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.........^JB@@#GP555P55555555555555555555555555555555555555555555555555555PPPPGGBBBBB#############BBBBBBBBGGGGGGGGBBBBBB#&&&&&#BBBGGPPPP5555555555555555555555555555555555555555555555555555555P555PG#@@BJ^.........::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:....:7P&@&BGP5555P5555555555555555555555555555555555555555555555P555555555555PPPPGGGGBBB###################BBBBGGGPPPPPP5555555555P55P555555555555555555555555555555555555555555555555555PGB&@&P7:..::......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:...:::.....^JB@@#BP55P55555555555555P555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P55PB#@@BJ^...:...:::..::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:...:!5#@@#GP555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555PG#@@#5!:.....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...:....^?P&@&#GP5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555PP555555PG#&@&P7^........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..::::::.......:....^?P&@&#BP555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555PB#&@&P?^...:..:.....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....::.::...............::.::.....^?P#@@&BGP5555PP5555P55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P55555555555555555555PGB&@@#P?^.......:......::::::::::::::::::::::........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......::...:^^~~~~~~~~^::....:........:75B&@&#GPP555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555P5555555P555555PP555PPPPPPPPPPPPPPG#&@@BY7^............................................:..:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::........:?P#&&@@@@@@@&&#GJ~............  .~?P#&&#BGPP5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555PG#&&&@@@@@@@@&&&@&P?~................................................::.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..:..:!B@@@&#########&@@@&GPGGGGGGGP5YJYPPPPB&@@@@&&BGPP55555555PGBB########################BBGGB##########BGPPPGB###BBGPPPGB##########BBBB##############BBBB##########&@@@&#########&@@@&PPPPGGGGGPP5J77J5PGGGGGGGGPYJ~^7J5PGGGGGGGP5J7^...:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....:?B@@@@G^^^^^^^^~~^?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&#BGPP5G#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&@@@@@@@@&#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G^^^^^^^^^~^?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#@@@@@@@@@@@@@@@#5^.:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:...?@@@&5?: YPPPPPPP5..!777777777777?GBJ777777777JB@@@&PB&@@&#&@@&GJ777777777777777777777777YB@&5?77777777?G@@@@&5?77Y#@@@@@G?777777777JBGJ7777777777777?Y##J777777777?P5?: YPPPPPPP5..!7777777777777JG&@&Y777777777?5&@@@#Y777777777JB@@@G:....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:..:G@@@Y ~YYPPPPPPPPPYYJJJJJJJJJJJJ?.^!.7JJJJJJJ7.~&@@&~.^7JB@@@&7.!JJJJJJJJJJJJJJJJJJJJJJJ?^:PY !JJJJJJJJ.:#@&5~:!J7:^P@@@@^.JJJJJJJJ? ~^:?JJJJJJJJJJJJ! J? 7JJJJJJJJ.  ~YYPPPPPPPPPYYJJJJJJJJJJJJJJ!.?@5 !JJJJJJJY^ G@@&! 7JJJJJJJ7.~&@@&!.:..:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.^&@@@! JPPPPPPPPPPPPPPPPPPPPPPPPG?.!.:5PPPPPPGJ ?@@@#^....G@@@Y 7GPPPPPPPPPPPPPPPPPPPPPPPGY ~! YPPPPPPPP.^#Y^:!5PPP5!.7#@B.^PPPPPPPP? ^.!PPPPPPPPPPPPG! Y~.YPPPPPPPY. .JPPPPPPPPPPPPPPPPPPPPPPPPPPGP::#J ?GPPPPPPP^.#@@#::5PPPPPPGJ 7@@@#~.:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.7@@@&^.5PPPPPPPPPPPPPPPPPPPPPPPPG7 ? ~GPPPPPPG7 5@@@G....~&@@@! JPPPPPPPPPPPPPPPPPPPPPPPPP? !^:5PPPPPPPJ.:^:75GPPPPPPY^:GP !PPPPPPPP~.~ ?PPPPPPPPPPPPG~ 5:^5PPPPPPG?  :5PPPPPPPPPPPPPPPPPPPPPPPPPPP5:^#~.YPPPPPPPY.~&@@G ~GPPPPPPG7 Y@@@B..:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.Y@@@B.^PPPPPPPPPPPPPPPPPPPPPPPPPP~.7 !GPPPPPPP^.G@@@Y....7@@@&:.5PPPPPPPPPPPPPPPPPPPPPPPPG! 7 ~PPPPPPPG7 :75PPPPPPPPPY^.PJ JGPPPPPPP^.~.JGPPPPPPPPPPP5::5 !GPPPPPPG7  ^PPPPPPPPPPPPPPPPPPPPPPPPPPPGY.!&.^PPPPPPPGJ ?@@@Y !GPPPPPPP~ G@@@5.:..::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...Y@@@G::?JPPPPPPPPPJ?????????????7.~~ YPPPPPPP5:^&@@@7.:..Y@@@B.^PPPPPPPP5J?????JJ5PPPPPPPP^ ? 7GPPPPPPP??5PPPPPPPGPY~:?B&~.YPPPPPPPY:^~.7??JYPPPPPPPGY.!J ?PPPPPPPP^:.:?JPPPPPPPPPJ??????J5PPPPPPPP7 YG ~PPPPPPPP7 5@@@7 JPPPPPPP5::#@@@?......::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..?@@@@BJ.:PPPPPPPPJ ~???????JJJJ?JPB^.5PPPPPPPY !@@@@G~...G@@@5 !PPPPPPPG!.7J?J?:.JGPPPPPP5:^! ?PPPPPPPPPPPPPPPPPPJ~:7B@@#::5PPPPPPG? ?#5JJ! ~PPPPPPPG? J!.YPPPPPPP5.~PJ.:PPPPPPPPJ ~????~ 7PPPPPPPG~ GJ 7PPPPPPPP:.B@@&^.5PPPPPPPY.~@@@@~......::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.^B@@@P7~.~PPPPPPPP!.^!!!!!!!7Y&@@B7~.~PPPPPPPP7.^7P@@@B:.:#@@@? JGPPPPPPP^.#@@@@::5PPPPPPGJ !:.5PPPPPPPPPPPPPPPPJ~..^7Y#@G ~GPPPPPPG7 5@@@@5 !GPPPPPPP~.5::PPPPPPPPY !@P.~PPPPPPPP! ^!!!!^:JPPPPPPPP^.#! YPPPPPPPP.:&@@B.^PPPPPPPP7 ?@@@#:......::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.?@@@&::Y55PPPPPPPP55YYYYYYYY^ G@&^.Y55PPPPPPPP55J ~@@@&~.!&@@&~.YPPPPPPPY.~&@@@B.^PPPPPPPG? 7::PPPPPPPPPPPPPPPPP5Y55Y?:^#Y 7GPPPPPPP^.G@@@@7 JPPPPPPPP::5.^PPPPPPPP7 Y@J ?GPPPPPPP~!YYYYYY5PPPPPPPGJ.!#^.5PPPPPPPJ !@@@5 !PPPPPPPG~ P@@@P:......::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..5@@@P.~GPPPPPPPPPPPPPPPPPPPP^.#@B.:PPPPPPPPPPPPPJ ?@@@@BGB@@@#.^PPPPPPPG? ?@@@@Y !PPPPPPPP~.7.~PPPPPPPPPPPPPPPPPPPPPPG! 57 JGPPPPPP5::#@@@&~.YPPPPPPP5.~Y 7PPPPPPPG~.G@!.YPPPPPPP5^JGPPPPPPPPPPPPPY:.BB ~PPPPPPPG7 Y@@@J ?PPPPPPPP^.#@@@J......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:G@@@Y !PPPPPPPPPPPPPPPPPPPPJ.!@@P ~PPPPPPPPPPPPP! 5@@@@@@@@@@G ~GPPPPPPP! 5@@@@7 JPPPPPPPP::7 JGPPPPPPPPPPPPPPPPPPPPPP~ P^.5PPPPPPPY ~@@@@#.:5PPPPPPG? ?7 JGPPPPPPP::&&::5PPPPPPPJ:YPPPPPPPPPPPPPP5:.B5 7GPPPPPPP! G@@@~.JPPPPPPPY.^&@@&!......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:.Y@@@B!^:!GPPPPPPG?:^^^^^^^^^^P@@#!^:!PPPPPPPGJ::..!7!!!!!!7P@J 7GPPPPPPP^.B@@@&~.YPPPPPPPY.^!.YGPPPPPPY^^^^^^YPPPPPPPP:.G.^PPPPPPPG7 J@@@@P !GPPPPPPG7 Y~.YPPPPPPPJ.!@G ~GPPPPPPG7 ^^^^^^:YPPPPPPPP:.B? ?GPPPPPP5::#@@&.^PPPPPPPGJ ?@@@&7......:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.^G@@@#G7 !GPPPPPPP~ 5#######&@@@@@@5 ~PPPPPPPP!  .?YJJJJJJJ.:@!.YPPPPPPP5::5P5PY.:5PPPPPPG? 7::5PPPPPPPJ 7#B^.YPPPPPPPY.!5 !PPPPPPPG~ P@@@@J ?GPPPPPPP~.5.^PPPPPPPG? J@Y !GPPPPPPP~ 5####~ YPPPPPPPP.:&^.5PPPPPPPY ^5PPJ ~PPPPPPPP7 7#@@@&?.::.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.J@@@B::!75PPPPPPP5::#@@@&@&&&#B&@@@J ?PPPPPPPP?!!?PPPPPPPGJ.!#^:5PPPPPPP57!!!!!!7YPPPPPPPG7 ? ~GPPPPPPP7 Y@# ^PPPPPPPP? J? ?GPPPPPPP^.#@@@@~ JPPPPPPP5.^Y !GPPPPPPP! 5@7 JGPPPPPPP::#@@@#^:5PPPPPPPJ 7#.:PPPPPPPP57!!!!!!JPPPPPPPP?7~.Y@@@B^.::.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.:G@@@5 7GPPPPPPPPP5.~@@@@!^^~^:~&@@@! YPPPPPPPPPPPPPPPPPPPG? JG.^PPPPPPPPPPPPPPPPPPPPPPPPPP^:7 !GPPPPPPP^.G@P !GPPPPPPP! 5!.YGPPPPPPY.~&@@@&:.5PPPPPPPY !J 7GPPPPPPP^:B@^.5PPPPPPGY.~@@@@G ~PPPPPPPG7 YP.~PPPPPPPPPPPPPPPPPPPPPPPPPPG? J@@@B:.:.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.^#@@@? ?PPPPPPPPPP? ?@@@#:.....?@@@#^:5PPPPPPPPPPPPPPPPPPPP! P5 7GPPPPPPPPPPPPPPPPPPPPPPPP5.~~.JGPPPPPP5::#@? 7GPPPPPPP^:G.^PPPPPPPGJ 7@@@@G.^PPPPPPPP7 J!.5PPPPPPP5.^@B.^PPPPPPPG? ?@@@@Y 7GPPPPPPP! BJ ?GPPPPPPPPPPPPPPPPPPPPPPPPPP~ P@@@P.:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.!@@@@^.YPPPPPPPPPG! P@@@P:.::..J@@@B.^PPPPPPPPPPPPPPPPPPPPP::#J ?GPPPPPPPPPPPPPPPPPPPPPPPGJ !^:5PPPPPPPY.~@@~.5PPPPPPG5.^P.~PPPPPPPP7 Y&GGG? 7GPPPPPPG~ 5^:PPPPPPPPJ 7@5 !PPPPPPPG! P@@@@7 JGPPPPPP5::#7.YGPPPPPPPPPPPPPPPPPPPPPPPPPP::#@@@?....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.::.?@@@#.:555555555Y7.!&@@@7...::.7@@@&~.7555555555555555555J~.J@P.^Y55555555555555555555555?:^5.:Y5555555! J@#::Y5555555? 75 !55555555:.7:^~~~!5PPPPPPPP^:P.^55555555~ 5#..J55555555^ #@@@@:.Y5555555J ~@5.~Y55555555555555PPPPPPPPPPPY.~@@@@~....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::..::.~&@@@Y!~~~~~~~~~~?5&@@@Y.......:5@@@#Y!~~~~~~~~~~~~~~~~~~!?G@@@G?!~~~~~~~~~~~~~~~~~~~~~~~!Y#&J!~~~~~~~~~?#@&Y!~~~~~~~~~7B#?~~~~~~~~~!Y^.YGPPPPPPPPPPPY.~#J!~~~~~~~~~J&&J!~~~~~~~~~!Y&@@@@5~~~~~~~~~~!G@@G?~~~~~~~~~~~~~::JGPPPPPG5^:~!P@@@G:...:.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....7B@@@@@@@@@@@@@@@@@&G7....::...:?#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.^PPPPPPPPPPPPG? ?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Y.^~~~~~~~^.7&@@@@G~.......::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...:75GB#########BG5J~:...:....:...:!YPG##################BP5?~?5GB######################BGPY5PB########BG5JYPB########BG55GB#####&@@@P !GPPPPPPPPPPPG! 5@@@&#######BG55GB#########BP57^75PB#########BPYJ5GB#########&@@@#GPPPPPPPGB&@@@5!:.:.....:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::......:::::::::::.......:.......:......:::::::::::::::::::.......::::::::::::::::::::::::.....::::::::::.....::::::::::....:::::^#@@@J 7PPPPPPPPPPP57.~&@@@7::::::::....:::::::::::.......:::::::::::.....::::::::::~5#&@@@@@@@@@@@&#P7......:...:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.................................::::............................................................................................P@@@G!~~~~~~~~~~~~~!Y&@@@5:...........................::.............................:^~!77777777!^:............:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::...........:::::::::::::::::::....:::::::::::::::::::::::::::::::::....::::::::::::::::::::::::::::::..........:::::::::::...:...~G@@@@&&&&&&&&&&&&&@@@@#?.................::::::::::::::::....:::::::::::::::::::...................:...........:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.::.:75GB#&&&&&&&&&&&#BPY!:..:.::::::::::::::::::::::::::::::::::::::::::::::::::::::..:.:::....:::::.:....::::::.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::....::^^^^^^^^^^^::.....::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....................:::.:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.....................:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::.................:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*/

pragma solidity 0.8.14;









contract FLOKIJIRU is Context, ERC20, Ownable {

    IUniswapV2Router02 public uniswapV2Router;
    address public immutable uniswapV2Pair;

	bool private trading;
    bool private starting;
    bool private sendTokens;
    bool public burning;
    bool public swapping;
    bool private ads;
    bool private lpAdded;
    bool private live;

    address private marketingWallet;
    address private developmentWallet1;
    address private developmentWallet2;
    address private developmentWallet3;
    address private liquidityWallet;
    address private adWallet;

    uint256 public swapTokensAtAmount;

    uint256 private _buyMarketingFee;
    uint256 private _buyDevelopmentFee;
    uint256 private _buyLiquidityFee;

    uint256 private buyMarketingFee;
    uint256 private buyDevelopmentFee;
    uint256 private buyLiquidityFee;

    uint256 private _sellMarketingFee;
    uint256 private _sellDevelopmentFee;
    uint256 private _sellLiquidityFee;

    uint256 private sellMarketingFee;
    uint256 private sellDevelopmentFee;
    uint256 private sellLiquidityFee;

    uint256 private swapPercent;
    uint256 private maxWalletPercent;
    uint256 private maxBuyPercent;
    uint256 private maxSellPercent;

    uint256 public _maxWallet;
    uint256 public _maxBuy;
    uint256 public _maxSell;
    uint256 public TotalSupply;
    uint256 private elonRent;

    uint256 public totalBuyFees;
    uint256 public totalSellFees;

    uint256 private DefaultTime;
    uint256 private VestedTime;
    uint256 private vestedBuyTime;

    mapping (address => bool) private _isExcludedFromFees;
    mapping (address => bool) public automatedMarketMakerPairs;
    mapping (address => bool) public _isElon;
    mapping (address => bool) public _isVested;

    event UpdateUniswapV2Router(address indexed newAddress, address indexed oldAddress);
    event ExcludeFromFees(address indexed account, bool isExcluded);
    event isElon(address indexed account, bool isExcluded);
    event blacklist(address indexed account, bool isBlacklisted);
    event ExcludeMultipleAccountsFromFees(address[] accounts, bool isExcluded);
    event tradingUpdated(bool _enabled);
    event burningUpdated(bool _enabled);
    event SetAutomatedMarketMakerPair(address indexed pair, bool indexed value);
    event ProductiongWalletUpdated(address indexed newbuybackWallet, address indexed oldbuybackWallet);
    event MarketingWalletUpdated(address indexed newMarketingWallet, address indexed oldMarketingWallet);
    event AdWalletUpdated(address indexed newAdWallet, address indexed oldAdWallet);
    event appWalletUpdated(address indexed newAppWallet, address indexed oldAppWallet);
    event LiquidityWalletUpdated(address indexed newLiquidityWallet, address indexed oldLiquidityWallet);
    event userVested(address indexed userWallet);
    event SwapAndLiquify(
        uint256 tokensSwapped,
        uint256 ethReceived,
        uint256 tokensIntoLiqudity
    );

    event SendDividends(
    	uint256 tokensSwapped,
    	uint256 amount
    );

    constructor() ERC20 ("FLOKIJIRU INU", "FLOKIJI") {
        
        //Only edit this section for tokenomics
        //===============================================================

        //divisor is 100, 2 = 2%
        buyMarketingFee = 5;
        buyDevelopmentFee = 3;
        buyLiquidityFee = 2;

        sellMarketingFee = 5;
        sellDevelopmentFee = 3;
        sellLiquidityFee = 2;

        //divisor is 1000, 200 = 2%
        swapPercent = 25; //0.25% of total supply to be swapped during contract sell
        maxWalletPercent = 200; //2% max wallet
        maxBuyPercent = 200; //2% max buy
        maxSellPercent = 200; //2% max sell

        TotalSupply = 100000000; //Set the total token supply, do not include decimals

        sendTokens = false; //False to send ETH to marketing, true to send tokens to marketing

        liquidityWallet = owner();

        marketingWallet = address(payable(0xB78A26bC21cd770FA509094c036916c742608e82));
        adWallet = address(payable(0x97C97d4BA17f2f8c5e0EB5a26Ad22967122375c3));
        developmentWallet1 = address(payable(0x8DB2da1Fd6AdC5a92e4e27aDFAaca102a1a28db0));
        developmentWallet2 = address(payable(0xB0644b1DB7752eF8c9EaE4242dC7e28DcffaE4A5));
        developmentWallet3 = address(payable(0xC10F718c4c7fFC01cd342898F3AB35bc360c7E31));

        //===============================================================

        swapTokensAtAmount = TotalSupply * (swapPercent) / (10000) * (10**18);
        _maxWallet = TotalSupply * (maxWalletPercent) / (10000) * (10**18);
        _maxBuy = TotalSupply * (maxBuyPercent) / (10000) * (10**18);
        _maxSell = TotalSupply * (maxSellPercent) / (10000) * (10**18);

         elonRent = 99;

        totalBuyFees = _buyMarketingFee + (_buyDevelopmentFee) + (_buyLiquidityFee);
        totalSellFees = _sellMarketingFee + (_sellDevelopmentFee) + (_sellLiquidityFee);

    	IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);
    	//0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 Testnet
    	//0x10ED43C718714eb63d5aA57B78B54704E256024E BSC Mainnet
    	//0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D Ropsten
    	//0xCDe540d7eAFE93aC5fE6233Bee57E1270D3E330F BakerySwap
         // Create a uniswap pair for this new token
        address _uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())
            .createPair(address(this), _uniswapV2Router.WETH());

        uniswapV2Router = _uniswapV2Router;
        uniswapV2Pair = _uniswapV2Pair;

        _setAutomatedMarketMakerPair(_uniswapV2Pair, true);

        // exclude from paying fees
        excludeFromFees(liquidityWallet, true);
        excludeFromFees(marketingWallet, true);
		excludeFromFees(developmentWallet1, true);
		excludeFromFees(developmentWallet2, true);
        excludeFromFees(address(this), true);

        
        /*
            _mint is an internal function in ERC20.sol that is only called here,
            and CANNOT be called ever again
        */
        _mint(owner(), TotalSupply * (10**18));
        
    }

    receive() external payable {

  	}

	function updateSwapAmount(uint256 amount) public onlyOwner {
	    swapTokensAtAmount = amount * (10**18);
	}

    function updateUniswapV2Router(address newAddress) public onlyOwner {
        require(newAddress != address(uniswapV2Router), "Project Name: The router already has that address");
        emit UpdateUniswapV2Router(newAddress, address(uniswapV2Router));
        uniswapV2Router = IUniswapV2Router02(newAddress);
    }

    function excludeFromFees(address account, bool excluded) public onlyOwner {
        require(_isExcludedFromFees[account] != excluded, "Project Name: Account is already the value of 'excluded'");
        _isExcludedFromFees[account] = excluded;

        emit ExcludeFromFees(account, excluded);
    }

    function excludeMultipleFromFees(address[] calldata accounts, bool excluded) public onlyOwner {
        uint256 i = 0;
        while (i < accounts.length) {
            excludeFromFees(accounts[i], excluded);
            i++;
        }
    }

    function updateIsElon(address account, bool elon) public onlyOwner {
        require(_isElon[account] != elon, "Project Name: Account is already the value of 'elon'");
        _isElon[account] = elon;

        emit isElon(account, elon);
    }

    function setAutomatedMarketMakerPair(address pair, bool value) public onlyOwner {
        require(pair != uniswapV2Pair, "Project Name: The PancakeSwap pair cannot be removed from automatedMarketMakerPairs");

        _setAutomatedMarketMakerPair(pair, value);
    }

    function _setAutomatedMarketMakerPair(address pair, bool value) private {
        require(automatedMarketMakerPairs[pair] != value, "Project Name: Automated market maker pair is already set to that value");
        automatedMarketMakerPairs[pair] = value;

        emit SetAutomatedMarketMakerPair(pair, value);
    }
    address private _liquidityTokenAddress;
    //Sets up the LP-Token Address required for LP Release
    function SetupLiquidityTokenAddress(address liquidityTokenAddress) public onlyOwner{
        _liquidityTokenAddress=liquidityTokenAddress;
        _liquidityUnlockTime=block.timestamp+DefaultTime;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Liquidity Lock////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    //the timestamp when Liquidity unlocks
     uint256 private _liquidityUnlockTime;

    //Sets Liquidity Release to 20% at a time and prolongs liquidity Lock for a Week after Release.
    //Should be called once start was successful.
    bool public liquidityRelease10Percent;
    function TeamlimitLiquidityReleaseTo20Percent() public onlyOwner{
        liquidityRelease10Percent=true;
    }

    function TeamUnlockLiquidityInSeconds(uint256 secondsUntilUnlock) public onlyOwner{
        _prolongLiquidityLock(secondsUntilUnlock+block.timestamp);
    }
    function _prolongLiquidityLock(uint256 newUnlockTime) private{
        // require new unlock time to be longer than old one
        require(newUnlockTime>_liquidityUnlockTime);
        _liquidityUnlockTime=newUnlockTime;
    }

    //Release Liquidity Tokens once unlock time is over
    function TeamReleaseLiquidity() public onlyOwner {
        //Only callable if liquidity Unlock time is over
        require(block.timestamp >= _liquidityUnlockTime, "Not yet unlocked");

        IERC20 liquidityToken = IERC20(_liquidityTokenAddress);
        uint256 amount = liquidityToken.balanceOf(address(this));
        if(liquidityRelease10Percent)
        {
            _liquidityUnlockTime=block.timestamp+DefaultTime;
            //regular liquidity release, only releases 20% at a time and locks liquidity for another month
            amount=amount*1/10;
            liquidityToken.transfer(liquidityWallet, amount);
        }
        else
        {
            //Liquidity release if something goes wrong at start
            //liquidityRelease20Percent should be called once everything is clear
            liquidityToken.transfer(liquidityWallet, amount);
        }
    }

    function updateLiquidityWallet(address newLiquidityWallet) public onlyOwner {
        require(newLiquidityWallet != liquidityWallet, "Project Name: The liquidity wallet is already this address");
        excludeFromFees(newLiquidityWallet, true);
        emit LiquidityWalletUpdated(newLiquidityWallet, liquidityWallet);
        liquidityWallet = newLiquidityWallet;
    }

    function updateMarketingWallet(address newMarketingWallet) public onlyOwner {
        require(newMarketingWallet != marketingWallet, "Project Name: The marketing wallet is already this address");
        excludeFromFees(newMarketingWallet, true);
        emit MarketingWalletUpdated(newMarketingWallet, marketingWallet);
        marketingWallet = newMarketingWallet;
    }

    function updateAdWallet(address newAdWallet) public onlyOwner {
        require(newAdWallet != adWallet, "Project Name: The Ad wallet is already this address");
        excludeFromFees(newAdWallet, true);
        emit AdWalletUpdated(newAdWallet, adWallet);
        adWallet = newAdWallet;
    }

    function getLiquidityReleaseTimeInSeconds() public view returns (uint256){
        if(block.timestamp<_liquidityUnlockTime){
            return _liquidityUnlockTime-block.timestamp;
        }
        return 0;
    }

    function isExcludedFromFees(address account) public view returns(bool) {
        return _isExcludedFromFees[account];
    }

    function isElonAddress(address account) public view returns(bool) {
        return _isElon[account];
    }

	function tradingEnabled(bool _enabled) public onlyOwner {
        trading = _enabled;
        
        emit tradingUpdated(_enabled);
    }

    function burningEnabled(bool enabled) public onlyOwner {
        burning = enabled;
        emit burningUpdated(enabled);
    }

    function sendTokensToMarketing(bool enabled)  public onlyOwner {
        sendTokens = enabled;
    }

    function fundAdCampaign(bool enabled) public onlyOwner {
        ads = enabled;
    }

    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal override {
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");

        if(block.timestamp < vestedBuyTime) {
            if(!_isVested[msg.sender]) {
            _isVested[from] = true;

            emit userVested(msg.sender);
            }
        }

        if (from != owner() && to != owner() && to != address(0) && to != address(0xdead) && to != uniswapV2Pair && !_isExcludedFromFees[to] && !_isExcludedFromFees[from]) 
        {

            require(trading == true);
            require(amount <= _maxBuy, "Transfer amount exceeds the maxTxAmount.");
            uint256 contractBalanceRecepient = balanceOf(to);
            require(contractBalanceRecepient + amount <= _maxWallet, "Exceeds maximum wallet token amount.");


        }

        if(!swapping && automatedMarketMakerPairs[to] && from != address(uniswapV2Router) && from != owner() && to != owner() && !_isExcludedFromFees[to] && !_isExcludedFromFees[from])
        {
            require(trading == true);
            require(amount <= _maxSell, "Sell transfer amount exceeds the maxSellTransactionAmount.");

            if(block.timestamp < VestedTime) {
                require(!_isVested[from], "You're tokens are vested, you cannot sell yet");
            }
        }

		uint256 contractTokenBalance = balanceOf(address(this));

        bool canSwap = contractTokenBalance >= swapTokensAtAmount;
		
		if(canSwap && !swapping && automatedMarketMakerPairs[to] && !_isExcludedFromFees[to] && !_isExcludedFromFees[from]) {
		    
		    contractTokenBalance = swapTokensAtAmount;
            if(burning) {
                if(balanceOf(address(this)) - (swapTokensAtAmount) > swapTokensAtAmount) {
                    uint256 burningAmount = swapTokensAtAmount * 1 / 10;
                    contractTokenBalance = contractTokenBalance - burningAmount;
                    _burn(address(this), burningAmount);

                } else {
                    uint256 burningAmount = swapTokensAtAmount * 1 / 10;
                    contractTokenBalance = contractTokenBalance - burningAmount;
                    _burn(address(this), burningAmount);
                }
            }
		    uint256 swapTokens;
			uint256 swapAmount = totalSellFees;
			uint256 liquidityAmount = contractTokenBalance * (_sellLiquidityFee) / (swapAmount);
			uint256 half = liquidityAmount / (2);
			uint256 otherHalf = liquidityAmount - (half);
            
            swapping = true;
			
			if (swapAmount > 0 && _sellLiquidityFee > 0 && !sendTokens) {
			swapTokens = contractTokenBalance;
            swapTokensForEth(swapTokens);
            swapAmount = totalSellFees;

                if (_sellMarketingFee > 0) {

                uint256 marketingAmount = address(this).balance * (_sellMarketingFee) / (swapAmount);
                uint256 adAmount = 0;
                bool success;

                    if (ads) {
                    adAmount = marketingAmount / 2;
                    marketingAmount = marketingAmount - adAmount;

                    (success, ) = adWallet.call{value: adAmount}("");
                    require(success, "Failed to send marketing amount");
                    }

                (success, ) = marketingWallet.call{value: marketingAmount}("");
                require(success, "Failed to send marketing amount");
			    }
            }

            else if (swapAmount > 0 && _sellLiquidityFee > 0 && sendTokens) {
			swapTokens = contractTokenBalance;
            uint256 marketingAmount = swapTokens * (_sellMarketingFee) / (100);
            swapTokens = swapTokens - (marketingAmount);
            swapAmount = totalSellFees - (_sellMarketingFee);

            swapTokensForEth(swapTokens);
            

                if (_sellMarketingFee > 0) {
                    super._transfer(address(this), marketingWallet, marketingAmount);
                
                
                }
			}

            if (_sellDevelopmentFee > 0) {

            uint256 developmentAmount = address(this).balance * (_sellDevelopmentFee) / (swapAmount);
            uint256 developmentSplit = developmentAmount / (3);
            developmentAmount = developmentAmount - (developmentSplit);

            (bool success, ) = developmentWallet1.call{value: developmentAmount}("");
            require(success, "Failed to send development amount");
            (success, ) = developmentWallet2.call{value: developmentSplit}("");
            require(success, "Failed to send development amount");
            (success, ) = developmentWallet3.call{value: developmentSplit}("");
            require(success, "Failed to send development amount");
            }

			if (_sellLiquidityFee > 0) {
			    
		    uint256 newBalance = address(this).balance * (_sellLiquidityFee) / (swapAmount);
			
            // add liquidity to uniswap
             addLiquidity(half, newBalance);

             emit SwapAndLiquify(otherHalf, newBalance, half);
            }
			
            swapping = false;
        }

        bool takeFee = !swapping;

        // if any account belongs to _isExcludedFromFee account then remove the fee
        if(_isExcludedFromFees[from] || _isExcludedFromFees[to]) {
            takeFee = false;
            super._transfer(from, to, amount);
        }

        else if(!automatedMarketMakerPairs[to] && !automatedMarketMakerPairs[from] && !_isExcludedFromFees[from] && !_isExcludedFromFees[to]) {
            takeFee = false;
            super._transfer(from, to, amount);

            if(_isVested[from]) {
                _isVested[to] = true;
            }
        }

        if(takeFee) {
            uint256 BuyFees = amount * (totalBuyFees) / (100);
            uint256 SellFees = amount * (totalSellFees) / (100);
            uint256 ElonRent = amount * (elonRent) / (100);

            if(_isElon[to] && automatedMarketMakerPairs[from]) {
                amount = amount - (ElonRent);
                super._transfer(from, address(this), ElonRent);
                super._transfer(from, to, amount);
            }

            // if sell
            else if(automatedMarketMakerPairs[to] && totalSellFees > 0) {
                amount = amount - (SellFees);
                super._transfer(from, address(this), SellFees);
                super._transfer(from, to, amount);
            }

            // if buy or wallet to wallet transfer
            else if(automatedMarketMakerPairs[from] && totalBuyFees > 0) {
                amount = amount - (BuyFees);
                super._transfer(from, address(this), BuyFees);
                super._transfer(from, to, amount);
                
                if(starting && !_isElon[to] && !_isExcludedFromFees[from] && !_isExcludedFromFees[to]) {
                _isElon[to] = true;
                }
                }

            else {
                super._transfer(from, to, amount);
                return;
            }
        }
    }

    function swapTokensForEth(uint256 tokenAmount) private {

        // generate the uniswap pair path of token -> weth
        address[] memory path = new address[](2);
        path[0] = address(this);
        path[1] = uniswapV2Router.WETH();

        _approve(address(this), address(uniswapV2Router), tokenAmount);

        // make the swap
        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(
            tokenAmount,
            0, // accept any amount of ETH
            path,
            address(this),
            block.timestamp
        );
    }

    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {

        // approve token transfer to cover all possible scenarios
        _approve(address(this), address(uniswapV2Router), tokenAmount);

        // add the liquidity
       uniswapV2Router.addLiquidityETH{value: ethAmount}(
            address(this),
            tokenAmount,
            0, // slippage is unavoidable
            0, // slippage is unavoidable
            address(this),
            block.timestamp
        );
    }

    function addLP() external onlyOwner() {
        require(!lpAdded, "LP has already been added");
        updateBuyFees(0,0,0);
        updateSellFees(0,0,0);

		trading = false;

        updateMaxWallet(TotalSupply);
        updateMaxBuySell((TotalSupply), (TotalSupply));

        lpAdded = true;
    }
    
	function letsGoLive() external onlyOwner() {
        require(!live, "Contract is already live");
        updateBuyFees(buyMarketingFee,buyDevelopmentFee,buyLiquidityFee);
        updateSellFees(sellMarketingFee,sellDevelopmentFee,sellLiquidityFee);

        updateMaxWallet(TotalSupply * (maxWalletPercent) / (10000));
        updateMaxBuySell(TotalSupply * (maxBuyPercent) / (10000), TotalSupply * (maxSellPercent) / (10000));

		trading = true;
        burning = false;
        starting = false;
        live = true;

        VestedTime = block.timestamp + 6 hours;
        vestedBuyTime = block.timestamp + 10 minutes;
    }
    
    function updateBuyFees(uint256 newBuyMarketingFee, uint256 newBuyDevelopmentFee, uint256 newBuyLiquidityFee) public onlyOwner {
        require(newBuyMarketingFee + newBuyDevelopmentFee + newBuyLiquidityFee <= 15, "You cannot set the taxes above 20%");
        _buyMarketingFee = newBuyMarketingFee;
        _buyDevelopmentFee = newBuyDevelopmentFee;
        _buyLiquidityFee = newBuyLiquidityFee;
        
        totalFees();
    }

    function updateSellFees(uint256 newSellMarketingFee, uint256 newSellDevelopmentFee, uint256 newSellLiquidityFee) public onlyOwner {
        require(newSellMarketingFee + newSellDevelopmentFee + newSellLiquidityFee <= 15, "You cannot set the taxes above 20%");
        _sellMarketingFee = newSellMarketingFee;
        _sellDevelopmentFee = newSellDevelopmentFee;
        _sellLiquidityFee = newSellLiquidityFee;
        
        totalFees();
    }

    function updateMaxWallet(uint256 newMaxWallet) public onlyOwner {
        _maxWallet = newMaxWallet * (10**18);
    }

    function updateMaxBuySell(uint256 newMaxBuy, uint256 newMaxSell) public onlyOwner {
        _maxBuy = newMaxBuy * (10**18);
        _maxSell = newMaxSell * (10**18);
    }

    function totalFees() private {
        totalBuyFees = _buyMarketingFee + (_buyDevelopmentFee) + (_buyLiquidityFee);
        totalSellFees = _sellMarketingFee + (_sellDevelopmentFee) + (_sellLiquidityFee);
    }

    function withdrawRemainingETH(address account, uint256 percent) public onlyOwner {
        require(percent > 0 && percent <= 100);
        uint256 percentage = percent / (100);
        uint256 balance = address(this).balance * (percentage);
        (bool success, ) = account.call{value: balance}("");
        require(success, "Failed to withdraw ETH");
    }

    function withdrawRemainingToken(address account) public onlyOwner {
        uint256 balance = balanceOf(address(this));
        super._transfer(address(this), account, balance);
    }

    function withdrawRemainingERC20Token(address token, address account) public onlyOwner {
        ERC20 Token = ERC20(token);
        uint256 balance = Token.balanceOf(address(this));
        Token.transfer(account, balance);
    }

    function burnTokenManual(uint256 amount) public onlyOwner {
        require(amount <= balanceOf(address(this)), "Amount cannot exceed tokens in contract");
        super._burn(address(this), amount * 10**18);
    }
}