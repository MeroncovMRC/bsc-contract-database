{"BSCBRIDGE.sol":{"content":"pragma solidity ^0.7.6;\r\n//SPDX-License-Identifier: MIT\r\nimport \u0027./IToken.sol\u0027;\r\n\r\ncontract BRIDGEBSC {\r\n  address public admin;\r\n  IToken public token;\r\n  uint256 public taxfee;\r\n\r\n\r\n  constructor(address _token) {\r\n    admin = msg.sender;\r\n    token = IToken(_token);\r\n    taxfee = 20000;\r\n  }\r\n\r\n  function burn(uint amount) external {\r\n    token.transferFrom(msg.sender, address(this), amount-(taxfee*(10**(token.decimals()))));\r\n    token.transferFrom(msg.sender, admin, (taxfee*(10**(token.decimals()))));\r\n  }\r\n\r\n  function mint(address to, uint amount) external {\r\n    require(msg.sender == admin, \u0027only admin\u0027);\r\n    token.transferFrom(admin, to, amount);\r\n  }\r\n  function getContractTokenBalance() external view returns (uint256) {\r\n    return token.balanceOf(address(this));\r\n  }\r\n  function withdraw(uint amount) external {\r\n    require(msg.sender == admin, \u0027only admin\u0027);\r\n    token.transfer(msg.sender, amount);\r\n  }\r\n  function changeAdmin(address newAdmin) external {\r\n    require(msg.sender == admin, \u0027only admin\u0027);\r\n    admin = newAdmin;\r\n  }\r\n  function setTaxFee(uint newTaxFee) external {\r\n    require(msg.sender == admin, \u0027only admin\u0027);\r\n    taxfee = newTaxFee;\r\n  }\r\n}\r\n"},"IToken.sol":{"content":"pragma solidity ^0.7.6;\r\n//SPDX-License-Identifier: MIT\r\n\r\n\r\ninterface IToken {\r\n  function mint(address to, uint amount) external;\r\n  function burn(address owner, uint amount) external;\r\n  function burnFrom(address account, uint256 amount) external;\r\n  function totalSupply() external view returns (uint256);\r\n  function decimals() external view returns (uint8);\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address to, uint256 amount) external returns (bool);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  function transferFrom(\r\n      address from,\r\n      address to,\r\n      uint256 amount\r\n  ) external returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"}}