pragma solidity ^0.5.0;

contract testn{

    struct one{
        uint ones;
        string ttt;
        address zzz;
    }

    address public owner;
    mapping (address => one) public  structone;

    constructor() public  {
        owner = msg.sender;
    }

    function testfunction(uint ones, string memory ttt, address zzz) public{
        one memory newUser;
        newUser.ones = ones;
        newUser.ttt = ttt;
        newUser.zzz = zzz;
        structone[msg.sender] = newUser;
    }

        function getOnes(address tokenOwner) public view returns (uint ones) {
        return structone[tokenOwner].ones;
    }

            function getttt(address tokenOwner) public view returns (string memory ones) {
        return structone[tokenOwner].ttt;
    }

        function getzzz(address tokenOwner) public view returns (address zzz) {
        return structone[tokenOwner].zzz;
    }
}