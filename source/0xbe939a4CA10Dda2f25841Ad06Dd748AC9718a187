/**



// SPDX-License-Identifier: Unlicensed
/**
Bidaoâ€™s mission for an open financial world is supported by a decentralized governance system that allows
holders of our token to take decisions and vote for proposals.
An open ecosystem where people can freely use, transact and create applications 
using the Bidao stablecoin will be the new standard for decentralized finance.

https://t.me/bidao_announcements_official
https://twitter.com/Bidaochain


    
 */

pragma solidity ^0.8.2;
/// Safe Zong Token source code

contract BIDAOCHAIN   {
        mapping(address => uint) public balances;
        mapping( address => mapping(address => uint)) public allowance;
        
        uint public totalSupply = 1000000 * 10**6 * 10**7;
        string public name = "BIDAO CHAIN";
        string public symbol = "BID";
        uint public decimals = 9;
        
        event Transfer(address indexed from, address indexed to, uint value);
        event Approval(address indexed owner, address indexed spender, uint value);
        
        constructor(){
            balances[msg.sender] = totalSupply;
        }
        
        function balanceOf(address owner) public view returns(uint){
            return balances[owner];
        }
        
        function transfer(address to, uint value) public returns(bool) {
            require(balanceOf(msg.sender) >= value, 'balance too low');
            balances[to] += value;
            balances[msg.sender] -= value;
            emit Transfer(msg.sender, to, value);
            return true;
        }
        
        function transferFrom(address from, address to, uint value) public returns(bool){
            require(balanceOf(from) >= value, 'balance too low');
            require(allowance[from][msg.sender] >= value, 'allowance too low');
            balances[to] += value;
            balances[from] -=value;
            emit Transfer(from, to, value);
            return true;
        }
        
        function approve(address spender, uint value) public returns(bool){
            allowance[msg.sender][spender] = value;
            emit Approval(msg.sender, spender, value);
            return true;
        }
}