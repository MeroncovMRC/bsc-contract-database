// SPDX-License-Identifier: BSD-3-Clause

/**
 *                               
 *       ##### ##                 /##                                                          ##### ##       #####  # 
 *    /#####  /##               #/ ###   #                 #                                ######  /### / ######  /   
 *  //    /  / ###             ##   ### ###               ###     #                        /#   /  /  ##/ /#   /  /    
 * /     /  /   ###            ##        #                 #     ##                       /    /  /    # /    /  /     
 *      /  /     ###           ##                                ##                           /  /           /  /      
 *     ## ##      ##    /##    ######  ###   ###  /###   ###   ######## ##   ####            ## ##          ## ##      
 *     ## ##      ##   / ###   #####    ###   ###/ #### / ### ########   ##    ###  /        ## ##          ## ##      
 *     ## ##      ##  /   ###  ##        ##    ##   ###/   ##    ##      ##     ###/         ## ######    /### ##      
 *     ## ##      ## ##    ### ##        ##    ##    ##    ##    ##      ##      ##          ## #####    / ### ##      
 *     ## ##      ## ########  ##        ##    ##    ##    ##    ##      ##      ##          ## ##          ## ##      
 *     #  ##      ## #######   ##        ##    ##    ##    ##    ##      ##      ##          #  ##     ##   ## ##      
 *        /       /  ##        ##        ##    ##    ##    ##    ##      ##      ##             #     ###   #  /       
 *   /###/       /   ####    / ##        ##    ##    ##    ##    ##      ##      ##         /####      ###    /        
 *  /   ########/     ######/  ##        ### / ###   ###   ### / ##       #########        /  #####     #####/         
 * /       ####        #####    ##        ##/   ###   ###   ##/   ##        #### ###      /    ###        ###          
 * #                                                                              ###     #                            
 *  ##          # #    ####    ##   #####  ###### #    # #   #             #####   ###     ##                          
 *             #   #  #    #  #  #  #    # #      ##  ##  # #            /#######  /#                                  
 *            #     # #      #    # #    # #####  # ## #   #            /      ###/                                    
 *            ####### #      ###### #    # #      #    #   #   
 *            #     # #    # #    # #    # #      #    #   #                                       
 *            #     #  ####  #    # #####  ###### #    #   #   
 *
 * Where education, community and opportunities go hand in hand.
 * https://www.definityfi.io
 * Start your education today!
 */

pragma solidity 0.8.4;

contract Proxy {

  constructor(address _implement) {
    address owner = msg.sender;

    assembly {
      sstore(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103, owner) //keccak-256 hash of "eip1967.proxy.admin" subtracted by 1
      sstore(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, _implement) //keccak-256 hash of "eip1967.proxy.implementation" subtracted by 1
    }
  }

  function _delegate() internal {
    assembly {
      let implementation := sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)

      calldatacopy(0, 0, calldatasize())

      let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)

      returndatacopy(0, 0, returndatasize())

      switch result
      case 0 {
        revert(0, returndatasize())
      }
      default {
        return(0, returndatasize())
      }
    }
  }

  fallback() external payable {
    _delegate();
  }

  receive() external payable {
    _delegate();
  }
}